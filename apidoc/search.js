window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"icepool": {"fullname": "icepool", "modulename": "icepool", "type": "module", "doc": "<p>Package for computing dice and card probabilities.</p>\n\n<p>See <a href=\"https://highdiceroller.github.io/icepool/notebooks/lab/index.html\">this JupyterLite distribution</a>\nfor examples.</p>\n\n<p><a href=\"https://github.com/HighDiceRoller/icepool\">Visit the project page.</a></p>\n\n<p>General conventions:</p>\n\n<ul>\n<li>Instances are immutable (apart from internal caching). Anything that looks\nlike it mutates an instance actually returns a separate instance with the\nchange.</li>\n<li>Unless explictly specified otherwise, all sorting is in ascending order.</li>\n<li>Unless explictly specified otherwise, elements with zero quantity, rolls, etc.\nare considered.</li>\n<li>The words \"min\" and \"max\" refer to outcomes, and the words \"low\" and \"high\"\nrefer to dice in a pool.</li>\n</ul>\n"}, "icepool.standard": {"fullname": "icepool.standard", "modulename": "icepool", "qualname": "standard", "type": "function", "doc": "<p>A standard die.</p>\n\n<p>Specifically, the outcomes are <code>int</code>s from <code>1</code> to <code>sides</code> inclusive,\nwith quantity 1 each.</p>\n\n<p>Don't confuse this with <code>icepool.Die()</code>:</p>\n\n<ul>\n<li><code>icepool.Die([6])</code>: A <code>Die</code> that always rolls the integer 6.</li>\n<li><code>icepool.d(6)</code>: A d6.</li>\n</ul>\n", "signature": "(sides: int, /) -> icepool.die.die.Die", "funcdef": "def"}, "icepool.d": {"fullname": "icepool.d", "modulename": "icepool", "qualname": "d", "type": "function", "doc": "<p>A standard die.</p>\n\n<p>Specifically, the outcomes are <code>int</code>s from <code>1</code> to <code>sides</code> inclusive,\nwith quantity 1 each.</p>\n\n<p>Don't confuse this with <code>icepool.Die()</code>:</p>\n\n<ul>\n<li><code>icepool.Die([6])</code>: A <code>Die</code> that always rolls the integer 6.</li>\n<li><code>icepool.d(6)</code>: A d6.</li>\n</ul>\n", "signature": "(sides: int, /) -> icepool.die.die.Die", "funcdef": "def"}, "icepool.bernoulli": {"fullname": "icepool.bernoulli", "modulename": "icepool", "qualname": "bernoulli", "type": "function", "doc": "<p>A <code>Die</code> that rolls <code>True</code> with probability <code>n / d</code>, and <code>False</code> otherwise.</p>\n\n<p>The <code>Die</code> will have both <code>True</code> and <code>False</code> as outcomes even if one has\nzero quantity.</p>\n", "signature": "(numerator: int, denominator: int, /) -> icepool.die.die.Die", "funcdef": "def"}, "icepool.coin": {"fullname": "icepool.coin", "modulename": "icepool", "qualname": "coin", "type": "function", "doc": "<p>A <code>Die</code> that rolls <code>True</code> with probability <code>n / d</code>, and <code>False</code> otherwise.</p>\n\n<p>The <code>Die</code> will have both <code>True</code> and <code>False</code> as outcomes even if one has\nzero quantity.</p>\n", "signature": "(numerator: int, denominator: int, /) -> icepool.die.die.Die", "funcdef": "def"}, "icepool.Die": {"fullname": "icepool.Die", "modulename": "icepool", "qualname": "Die", "type": "class", "doc": "<p>Sampling with replacement. Quantities represent weights.</p>\n\n<p>Dice are immutable. Methods do not modify the <code>Die</code> in-place;\nrather they return a <code>Die</code> representing the result.</p>\n\n<p>It <em>is</em> (mostly) well-defined to have a <code>Die</code> with zero-quantity outcomes,\neven though this is not a proper probability distribution.\nThese can be useful in a few cases, such as:</p>\n\n<ul>\n<li><code>Pool</code> and <code>OutcomeCountEvaluator</code> will iterate through zero-quantity outcomes\nwith 0 <code>count</code>, rather than <code>None</code> or skipping that outcome.</li>\n<li><code>icepool.align()</code> and the like are convenient for making dice share the\nsame set of outcomes.</li>\n</ul>\n\n<p>However, zero-quantity outcomes have a computational cost like any other\noutcome. Unless you have a specific use case in mind, it's best to leave\nthem out.</p>\n\n<p>Most operators and methods will not introduce zero-quantity outcomes if their\narguments do not have any.</p>\n\n<p>It's also possible to have \"empty\" dice with no outcomes at all,\nthough these have little use other than being sentinel values.</p>\n", "bases": "abc.ABC, typing.Mapping[typing.Any, int]"}, "icepool.Die.__init__": {"fullname": "icepool.Die.__init__", "modulename": "icepool", "qualname": "Die.__init__", "type": "function", "doc": "<p>Constructor for a <code>Die</code>.</p>\n\n<p>Don't confuse this with <code>d()</code>:</p>\n\n<ul>\n<li><code>Die([6])</code>: A <code>Die</code> that always rolls the <code>int</code> 6.</li>\n<li><code>d(6)</code>: A d6.</li>\n</ul>\n\n<p>Also, don't confuse this with <code>Pool()</code>:</p>\n\n<ul>\n<li><code>Die([1, 2, 3, 4, 5, 6])</code>: A d6.</li>\n<li><code>Pool([1, 2, 3, 4, 5, 6])</code>: A <code>Pool</code> of six dice that always rolls one\nof each number.</li>\n</ul>\n\n<p>Here are some different ways of constructing a d6:</p>\n\n<ul>\n<li>Just import it: <code>from icepool import d6</code></li>\n<li>Use the <code>d()</code> function: <code>icepool.d(6)</code></li>\n<li>Use a d6 that you already have: <code>Die(d6)</code> or <code>Die([d6])</code></li>\n<li>Mix a d3 and a d3+3: <code>Die([d3, d3+3])</code></li>\n<li>Use a dict: <code>Die({1:1, 2:1, 3:1, 4:1, 5:1, 6:1})</code></li>\n<li>Give the faces as args: <code>Die([1, 2, 3, 4, 5, 6])</code></li>\n</ul>\n\n<p>All quantities must be non-negative, though they can be zero.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><p><strong>outcomes:</strong>  The faces of the <code>Die</code>. This can be one of the following:</p>\n\n<ul>\n<li>A <code>Mapping</code> from outcomes to quantities.</li>\n<li>A sequence of outcomes. Each element will have the same total\nquantity.</li>\n</ul>\n\n<p>Note that <code>Die</code> and <code>Deck</code> both count as <code>Mapping</code>s.\nEach outcome may be one of the following:</p>\n\n<ul>\n<li>A <code>Mapping</code> from outcomes to quantities.\nThe outcomes of the <code>Mapping</code> will be \"flattened\" into the\nresult. This option will be taken in preference to treating\nthe <code>Mapping</code> itself as an outcome even if the <code>Mapping</code>\nitself is hashable and totally orderable. This means that\n<code>Die</code> and <code>Deck</code> will never be outcomes.</li>\n<li><p>A tuple of outcomes. Operators on dice with tuple outcomes\nare performed element-wise. See <code>Die.unary_op</code> and\n<code>Die.binary_op</code> for details.</p>\n\n<p>Any tuple elements that are <code>Mapping</code>s will expand the\ntuple according to their independent joint distribution.\nFor example, <code>(d6, d6)</code> will expand to 36 ordered tuples\nwith quantity 1 each. Use this carefully since it may create a\nlarge number of outcomes.</p></li>\n<li><code>icepool.Reroll</code>, which will drop itself\nand the corresponding element of <code>times</code> from consideration.\nIf inside a tuple, the tuple will be dropped.</li>\n<li>Anything else will be treated as a single outcome.\nEach outcome must be hashable, and the\nset of outcomes must be totally orderable (after expansion).\nThe same outcome can appear multiple times, in which case\nthe corresponding quantities will be accumulated.</li>\n</ul></li>\n<li><strong>times:</strong>  Multiplies the quantity of each element of <code>outcomes</code>.\n<code>times</code> can either be a sequence of the same length as\n<code>outcomes</code> or a single <code>int</code> to apply to all elements of\n<code>outcomes</code>.</li>\n<li><strong>denominator_method:</strong>  How to determine the denominator of the result\nif the arguments themselves contain quantities. This is also used\nfor <code>Mapping</code> arguments. From greatest to least:\n<ul>\n<li>'prod': Product of the individual argument denominators, times\nthe total of <code>quantities</code>. This is like rolling all of the\npossible dice, and then selecting a result.</li>\n<li>'lcm' (default): LCM of the individual argument denominators,\ntimes the total of <code>quantities</code>. This is like rolling <code>quantities</code>\nfirst, then selecting an argument to roll.</li>\n<li>'lcm_joint': LCM of the individual (argument denominators\ntimes corresponding element of <code>quantities</code>). This is like\nrolling the above, but the specific quantity rolled is used\nto help determine the result of the selected argument.</li>\n<li>'reduce': The final quantities are divided by their GCD.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  <code>None</code> is not a valid outcome for a <code>Die</code>.</li>\n</ul>\n", "signature": "(\n    cls,\n    outcomes: Union[Mapping[Any, int], Sequence],\n    times: Union[Sequence[int], int] = 1,\n    denominator_method: str = 'lcm'\n)", "funcdef": "def"}, "icepool.Die.unary_op": {"fullname": "icepool.Die.unary_op", "modulename": "icepool", "qualname": "Die.unary_op", "type": "function", "doc": "<p>Performs the unary operation on the outcomes.</p>\n\n<p>Operations on tuples are performed elementwise recursively. If you need\nsome other specific behavior, use your own outcome class, or use <code>sub()</code>\nrather than an operator.</p>\n\n<p>This is used for the standard unary operators\n<code>-, +, abs, ~, round, trunc, floor, ceil</code>\nas well as the additional methods\n<code>zero, bool</code>.</p>\n\n<p>This is NOT used for the <code>[]</code> operator; when used directly, this is\ninterpreted as a <code>Mapping</code> operation and returns the count corresponding\nto a given outcome. See <code>marginals()</code> for applying the <code>[]</code> operator to\noutcomes.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A <code>Die</code> representing the result.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  If tuples are of mismatched length.</li>\n</ul>\n", "signature": "(self, op: Callable, *args, **kwargs) -> icepool.die.die.Die", "funcdef": "def"}, "icepool.Die.unary_op_non_elementwise": {"fullname": "icepool.Die.unary_op_non_elementwise", "modulename": "icepool", "qualname": "Die.unary_op_non_elementwise", "type": "function", "doc": "<p>As <code>unary_op()</code>, but not elementwise.</p>\n\n<p>This is used for <code>marginals()</code>.</p>\n", "signature": "(self, op: Callable, *args, **kwargs) -> icepool.die.die.Die", "funcdef": "def"}, "icepool.Die.binary_op": {"fullname": "icepool.Die.binary_op", "modulename": "icepool", "qualname": "Die.binary_op", "type": "function", "doc": "<p>Performs the operation on pairs of outcomes.</p>\n\n<p>Operations on tuples are performed elementwise recursively. If you need\nsome other specific behavior, use your own outcome class, or use <code>sub()</code>\nrather than an operator.</p>\n\n<p>By the time this is called, the other operand has already been\nconverted to a <code>Die</code>.</p>\n\n<p>This is used for the standard binary operators\n<code>+, -, *, /, //, %, **, &lt;&lt;, &gt;&gt;, &amp;, |, ^</code>.\nNote that <code>*</code> multiplies outcomes directly;\nit is not the same as <code>@</code>, which rolls the right side multiple times,\nor <code>d()</code>, which creates a standard die.</p>\n\n<p>The comparators (<code>&lt;, &lt;=, &gt;=, &gt;, ==, !=, cmp</code>) use a linear algorithm\nusing the fact that outcomes are totally ordered.</p>\n\n<p><code>==</code> and <code>!=</code> additionally set the truth value of the <code>Die</code> according to\nwhether the dice themselves are the same or not.</p>\n\n<p>The <code>@</code> operator does NOT use this method directly.\nIt rolls the left <code>Die</code>, which must have integer outcomes,\nthen rolls the right <code>Die</code> that many times and sums the outcomes.\nOnly the sum is performed element-wise.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A <code>Die</code> representing the result.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  If tuples are of mismatched length within one of the\ndice or between the dice.</li>\n</ul>\n", "signature": "(\n    self,\n    other: icepool.die.die.Die,\n    op: Callable,\n    *args,\n    **kwargs\n) -> icepool.die.die.Die", "funcdef": "def"}, "icepool.Die.keys": {"fullname": "icepool.Die.keys", "modulename": "icepool", "qualname": "Die.keys", "type": "function", "doc": "<p>The outcomes within the population in sorted order.</p>\n", "signature": "(self) -> icepool.counts.CountsKeysView", "funcdef": "def"}, "icepool.Die.values": {"fullname": "icepool.Die.values", "modulename": "icepool", "qualname": "Die.values", "type": "function", "doc": "<p>The quantities within the population in outcome order.</p>\n", "signature": "(self) -> icepool.counts.CountsValuesView", "funcdef": "def"}, "icepool.Die.items": {"fullname": "icepool.Die.items", "modulename": "icepool", "qualname": "Die.items", "type": "function", "doc": "<p>The (outcome, quantity)s of the population in sorted order.</p>\n", "signature": "(self) -> icepool.counts.CountsItemsView", "funcdef": "def"}, "icepool.Die.reduce": {"fullname": "icepool.Die.reduce", "modulename": "icepool", "qualname": "Die.reduce", "type": "function", "doc": "<p>Divides all quantities by their greatest common denominator.</p>\n", "signature": "(self) -> icepool.die.die.Die", "funcdef": "def"}, "icepool.Die.reroll": {"fullname": "icepool.Die.reroll", "modulename": "icepool", "qualname": "Die.reroll", "type": "function", "doc": "<p>Rerolls the given outcomes.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>outcomes:</strong>  Selects which outcomes to reroll. Options:\n<ul>\n<li>A callable that takes an outcome and returns <code>True</code> if it\nshould be rerolled.</li>\n<li>A container of outcomes to reroll.</li>\n<li>If not provided, the min outcome will be rerolled.</li>\n</ul></li>\n<li><strong>*extra_args:</strong>  These will be supplied to <code>outcomes</code> as extra\npositional arguments after the outcome argument(s).\n<code>extra_args</code> can only be supplied if <code>outcomes</code> is callable.</li>\n<li><strong>max_depth:</strong>  The maximum number of times to reroll.\nIf omitted, rerolls an unlimited number of times.</li>\n<li><strong>star:</strong>  If set to <code>True</code> or 1, outcomes will be unpacked as\n<code>*outcome</code> before giving it to the <code>outcomes</code> function.\nIf <code>outcomes</code> is not a callable, this has no effect.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A <code>Die</code> representing the reroll.\n  If the reroll would never terminate, the result has no outcomes.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  If <code>extra_args</code> are supplied with a non-callable <code>outcomes</code>.</li>\n</ul>\n", "signature": "(\n    self,\n    outcomes: Union[Callable[..., bool], Container, NoneType] = None,\n    *extra_args,\n    max_depth: int | None = None,\n    star: int = 0\n) -> icepool.die.die.Die", "funcdef": "def"}, "icepool.Die.reroll_until": {"fullname": "icepool.Die.reroll_until", "modulename": "icepool", "qualname": "Die.reroll_until", "type": "function", "doc": "<p>Rerolls until getting one of the given outcomes.</p>\n\n<p>Essentially the complement of <code>reroll()</code>.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>outcomes:</strong>  Selects which outcomes to reroll until. Options:\n<ul>\n<li>A callable that takes an outcome and returns <code>True</code> if it\nshould be accepted.</li>\n<li>A container of outcomes to reroll until.</li>\n</ul></li>\n<li><strong>*extra_args:</strong>  These will be supplied to <code>outcomes</code> as extra\npositional arguments after the outcome argument(s).\n<code>extra_args</code> can only be supplied if <code>outcomes</code> is callable.</li>\n<li><strong>max_depth:</strong>  The maximum number of times to reroll.\nIf omitted, rerolls an unlimited number of times.</li>\n<li><strong>star:</strong>  If set to <code>True</code> or 1, outcomes will be unpacked as\n<code>*outcome</code> before giving it to the <code>outcomes</code> function.\nIf <code>outcomes</code> is not a callable, this has no effect.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A <code>Die</code> representing the reroll.\n  If the reroll would never terminate, the result has no outcomes.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  If <code>extra_args</code> are supplied with a non-callable <code>outcomes</code>.</li>\n</ul>\n", "signature": "(\n    self,\n    outcomes: Union[Callable[..., bool], Container],\n    *extra_args,\n    max_depth: int | None = None,\n    star: int = 0\n) -> icepool.die.die.Die", "funcdef": "def"}, "icepool.Die.truncate": {"fullname": "icepool.Die.truncate", "modulename": "icepool", "qualname": "Die.truncate", "type": "function", "doc": "<p>Truncates the outcomes of this <code>Die</code> to the given range.</p>\n\n<p>The endpoints are included in the result if applicable.\nIf one of the arguments is not provided, that side will not be truncated.</p>\n\n<p>This effectively rerolls outcomes outside the given range.\nIf instead you want to replace those outcomes with the nearest endpoint,\nuse <code>clip()</code>.</p>\n\n<p>Not to be confused with <code>trunc(die)</code>, which performs integer truncation\non each outcome.</p>\n", "signature": "(self, min_outcome=None, max_outcome=None) -> icepool.die.die.Die", "funcdef": "def"}, "icepool.Die.clip": {"fullname": "icepool.Die.clip", "modulename": "icepool", "qualname": "Die.clip", "type": "function", "doc": "<p>Clips the outcomes of this <code>Die</code> to the given values.</p>\n\n<p>The endpoints are included in the result if applicable.\nIf one of the arguments is not provided, that side will not be clipped.</p>\n\n<p>This is not the same as rerolling outcomes beyond this range;\nthe outcome is simply adjusted to fit within the range.\nThis will typically cause some quantity to bunch up at the endpoint.\nIf you want to reroll outcomes beyond this range, use <code>truncate()</code>.</p>\n", "signature": "(self, min_outcome=None, max_outcome=None) -> icepool.die.die.Die", "funcdef": "def"}, "icepool.Die.set_range": {"fullname": "icepool.Die.set_range", "modulename": "icepool", "qualname": "Die.set_range", "type": "function", "doc": "<p>Sets the outcomes of this <code>Die</code> to the given <code>int</code> range (inclusive).</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>min_outcome:</strong>  The min outcome of the result.\nIf omitted, the min outcome of this <code>Die</code> will be used.</li>\n<li><strong>max_outcome:</strong>  The max outcome of the result.\nIf omitted, the max outcome of this <code>Die</code> will be used.</li>\n</ul>\n", "signature": "(\n    self,\n    min_outcome: int | None = None,\n    max_outcome: int | None = None\n) -> icepool.die.die.Die", "funcdef": "def"}, "icepool.Die.set_outcomes": {"fullname": "icepool.Die.set_outcomes", "modulename": "icepool", "qualname": "Die.set_outcomes", "type": "function", "doc": "<p>Sets the set of outcomes to the argument.</p>\n\n<p>This may remove outcomes (if they are not present in the argument)\nand/or add zero-quantity outcomes (if they are not present in this <code>Die</code>).</p>\n", "signature": "(self, outcomes) -> icepool.die.die.Die", "funcdef": "def"}, "icepool.Die.trim": {"fullname": "icepool.Die.trim", "modulename": "icepool", "qualname": "Die.trim", "type": "function", "doc": "<p>Removes all zero-quantity outcomes.</p>\n", "signature": "(self) -> icepool.die.die.Die", "funcdef": "def"}, "icepool.Die.sub": {"fullname": "icepool.Die.sub", "modulename": "icepool", "qualname": "Die.sub", "type": "function", "doc": "<p>Changes outcomes of the <code>Die</code> to other outcomes.</p>\n\n<p>You can think of this as <code>sub</code>stituting outcomes of this <code>Die</code> for other\noutcomes or dice. Or, as executing a <code>sub</code>routine based on the roll of\nthis <code>Die</code>.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>repl:</strong>  One of the following:\n<ul>\n<li>A map from old outcomes to new outcomes.\nUnmapped old outcomes stay the same.</li>\n<li>A callable returning a new outcome for each old outcome.</li>\n<li>A sequence specifying new outcomes in order.\nThe new outcomes may be dice rather than just single outcomes.\nThe special value <code>icepool.Reroll</code> will reroll that old outcome.</li>\n</ul></li>\n<li><strong>*extra_args:</strong>  These will be supplied to <code>repl</code> as extra positional\narguments after the outcome argument(s). <code>extra_args</code> can only\nbe supplied if <code>repl</code> is callable.</li>\n<li><strong>max_depth:</strong>  <code>sub()</code> will be repeated with the same argument on the\nresult this many times. If set to <code>None</code>, this will repeat until\na fixed point is reached.</li>\n<li><strong>star:</strong>  If set to <code>True</code> or 1, outcomes will be unpacked as\n<code>*outcome</code> before giving it to the <code>repl</code> function. If <code>repl</code>\nis not a callable, this has no effect.</li>\n<li><strong>denominator_method:</strong>  As <code>icepool.Die()</code>.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The <code>Die</code> after the modification.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  if <code>extra_args</code> are supplied with a non-callable <code>repl</code>.</li>\n</ul>\n", "signature": "(\n    self,\n    repl: Union[Mapping, Callable[[Any], Any], Sequence],\n    /,\n    *extra_args,\n    max_depth: int | None = 1,\n    star: int = 0,\n    denominator_method: str = 'lcm'\n) -> icepool.die.die.Die", "funcdef": "def"}, "icepool.Die.explode": {"fullname": "icepool.Die.explode", "modulename": "icepool", "qualname": "Die.explode", "type": "function", "doc": "<p>Causes outcomes to be rolled again and added to the total.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>outcomes:</strong>  Which outcomes to explode. Options:\n<ul>\n<li>An container of outcomes to explode.</li>\n<li>A callable that takes an outcome and returns <code>True</code> if it\nshould be exploded.</li>\n<li>If not supplied, the max outcome will explode.</li>\n</ul></li>\n<li><strong>*extra_args:</strong>  These will be supplied to <code>outcomes</code> as extra\npositional arguments after the outcome argument(s).\n<code>extra_args</code> can only be supplied if <code>outcomes</code> is callable.</li>\n<li><strong>max_depth:</strong>  The maximum number of additional dice to roll.\nIf not supplied, a default value will be used.</li>\n<li><strong>star:</strong>  If set to <code>True</code> or 1, outcomes will be unpacked as\n<code>*outcome</code> before giving it to the <code>outcomes</code> function.\nIf <code>outcomes</code> is not a callable, this has no effect.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  If <code>extra_args</code> are supplied with a non-callable <code>outcomes</code>.</li>\n</ul>\n", "signature": "(\n    self,\n    outcomes: Union[Callable[..., bool], Container, NoneType] = None,\n    *extra_args,\n    max_depth: int = 9,\n    star: int = 0\n) -> icepool.die.die.Die", "funcdef": "def"}, "icepool.Die.if_else": {"fullname": "icepool.Die.if_else", "modulename": "icepool", "qualname": "Die.if_else", "type": "function", "doc": "<p>Ternary conditional operator.</p>\n\n<p>This replaces truthy outcomes with the first argument and falsy outcomes\nwith the second argument.</p>\n", "signature": "(\n    self,\n    outcome_if_true,\n    outcome_if_false,\n    /,\n    *,\n    denominator_method: str = 'lcm'\n) -> icepool.die.die.Die", "funcdef": "def"}, "icepool.Die.pool": {"fullname": "icepool.Die.pool", "modulename": "icepool", "qualname": "Die.pool", "type": "function", "doc": "<p>Creates a <code>Pool</code> from this <code>Die</code>.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>rolls:</strong>  The number of copies of this <code>Die</code> to put in the pool.</li>\n</ul>\n", "signature": "(self, rolls: int = 1, /) -> icepool.pool.Pool", "funcdef": "def"}, "icepool.Die.keep_lowest": {"fullname": "icepool.Die.keep_lowest", "modulename": "icepool", "qualname": "Die.keep_lowest", "type": "function", "doc": "<p>Roll several of this <code>Die</code> and sum the sorted results from the lowest.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>rolls:</strong>  The number of dice to roll. All dice will have the same\noutcomes as <code>self</code>.</li>\n<li><strong>keep:</strong>  The number of dice to keep.</li>\n<li><strong>drop:</strong>  If provided, this many lowest dice will be dropped before\nkeeping.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A <code>Die</code> representing the probability distribution of the sum.</p>\n</blockquote>\n", "signature": "(self, rolls: int, /, keep: int = 1, drop: int = 0) -> icepool.die.die.Die", "funcdef": "def"}, "icepool.Die.keep_highest": {"fullname": "icepool.Die.keep_highest", "modulename": "icepool", "qualname": "Die.keep_highest", "type": "function", "doc": "<p>Roll several of this <code>Die</code> and sum the sorted results from the highest.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>rolls:</strong>  The number of dice to roll.</li>\n<li><strong>keep:</strong>  The number of dice to keep.</li>\n<li><strong>drop:</strong>  If provided, this many highest dice will be dropped before\nkeeping.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A <code>Die</code> representing the probability distribution of the sum.</p>\n</blockquote>\n", "signature": "(self, rolls: int, /, keep: int = 1, drop: int = 0) -> icepool.die.die.Die", "funcdef": "def"}, "icepool.Die.abs": {"fullname": "icepool.Die.abs", "modulename": "icepool", "qualname": "Die.abs", "type": "function", "doc": "<p></p>\n", "signature": "(self) -> icepool.die.die.Die", "funcdef": "def"}, "icepool.Die.round": {"fullname": "icepool.Die.round", "modulename": "icepool", "qualname": "Die.round", "type": "function", "doc": "<p></p>\n", "signature": "(self, ndigits: int = None) -> icepool.die.die.Die", "funcdef": "def"}, "icepool.Die.trunc": {"fullname": "icepool.Die.trunc", "modulename": "icepool", "qualname": "Die.trunc", "type": "function", "doc": "<p></p>\n", "signature": "(self) -> icepool.die.die.Die", "funcdef": "def"}, "icepool.Die.floor": {"fullname": "icepool.Die.floor", "modulename": "icepool", "qualname": "Die.floor", "type": "function", "doc": "<p></p>\n", "signature": "(self) -> icepool.die.die.Die", "funcdef": "def"}, "icepool.Die.ceil": {"fullname": "icepool.Die.ceil", "modulename": "icepool", "qualname": "Die.ceil", "type": "function", "doc": "<p></p>\n", "signature": "(self) -> icepool.die.die.Die", "funcdef": "def"}, "icepool.Die.marginals": {"fullname": "icepool.Die.marginals", "modulename": "icepool", "qualname": "Die.marginals", "type": "variable", "doc": "<p>A property that applies the <code>[]</code> operator to outcomes.</p>\n\n<p>This is not performed elementwise on tuples, so that this can be used\nto slice tuples. For example, <code>die.marginals[:2]</code> will marginalize the\nfirst two elements of tuples.</p>\n"}, "icepool.Die.zero": {"fullname": "icepool.Die.zero", "modulename": "icepool", "qualname": "Die.zero", "type": "function", "doc": "<p>Zeros all outcomes of this die.</p>\n\n<p>This is done by calling the constructor for each outcome's type with no\narguments.</p>\n\n<p>The result will have the same denominator as this die.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  If the zeros did not resolve to a single outcome.</li>\n</ul>\n", "signature": "(self) -> icepool.die.die.Die", "funcdef": "def"}, "icepool.Die.zero_outcome": {"fullname": "icepool.Die.zero_outcome", "modulename": "icepool", "qualname": "Die.zero_outcome", "type": "function", "doc": "<p>A zero-outcome for this die.</p>\n\n<p>E.g. <code>0</code> for a <code>Die</code> whose outcomes are <code>int</code>s.</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.Die.cmp": {"fullname": "icepool.Die.cmp", "modulename": "icepool", "qualname": "Die.cmp", "type": "function", "doc": "<p>A <code>Die</code> with outcomes 1, -1, and 0.</p>\n\n<p>The quantities are equal to the positive outcome of <code>self &gt; other</code>,\n<code>self &lt; other</code>, and the remainder respectively.</p>\n\n<p>This will include all three outcomes even if they have zero quantity.</p>\n", "signature": "(self, other) -> icepool.die.die.Die", "funcdef": "def"}, "icepool.Die.sign": {"fullname": "icepool.Die.sign", "modulename": "icepool", "qualname": "Die.sign", "type": "function", "doc": "<p>Outcomes become 1 if greater than <code>zero()</code>, -1 if less than <code>zero()</code>, and 0 otherwise.</p>\n\n<p>Note that for <code>float</code>s, +0.0, -0.0, and nan all become 0.</p>\n", "signature": "(self) -> icepool.die.die.Die", "funcdef": "def"}, "icepool.Die.bool": {"fullname": "icepool.Die.bool", "modulename": "icepool", "qualname": "Die.bool", "type": "function", "doc": "<p>Takes <code>bool()</code> of all outcomes.</p>\n\n<p>Note that a <code>Die</code> as a whole is not considered to have a truth value\nunless it is the result of the <code>==</code> or <code>!=</code> operators.</p>\n", "signature": "(self) -> icepool.die.die.Die", "funcdef": "def"}, "icepool.Die.key_tuple": {"fullname": "icepool.Die.key_tuple", "modulename": "icepool", "qualname": "Die.key_tuple", "type": "function", "doc": "<p>A tuple that uniquely (as <code>equals()</code>) identifies this die.</p>\n\n<p>Apart from being hashable and totally orderable, this is not guaranteed\nto be in any particular format or have any other properties.</p>\n", "signature": "(self) -> tuple", "funcdef": "def"}, "icepool.Die.equals": {"fullname": "icepool.Die.equals", "modulename": "icepool", "qualname": "Die.equals", "type": "function", "doc": "<p><code>True</code> iff both dice have the same outcomes and quantities.</p>\n\n<p>This is <code>False</code> if <code>other</code> is not a <code>Die</code>, even if it would convert\nto an equal <code>Die</code>.</p>\n\n<p>Truth value does NOT matter.</p>\n\n<p>If one <code>Die</code> has a zero-quantity outcome and the other <code>Die</code> does not\ncontain that outcome, they are treated as unequal by this function.</p>\n\n<p>The <code>==</code> and <code>!=</code> operators have a dual purpose; they return a <code>Die</code>\nwith a truth value determined by this method.\nOnly dice returned by these methods have a truth value. The data of\nthese dice is lazily evaluated since the caller may only be interested\nin the <code>Die</code> value or the truth value.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>reduce:</strong>  If <code>True</code>, the dice will be reduced before comparing.\nOtherwise, e.g. a 2:2 coin is not <code>equals()</code> to a 1:1 coin.</li>\n</ul>\n", "signature": "(self, other, *, reduce=False)", "funcdef": "def"}, "icepool.Population": {"fullname": "icepool.Population", "modulename": "icepool", "qualname": "Population", "type": "class", "doc": "<p>A mapping from outcomes to <code>int</code> quantities.</p>\n\n<p>Outcomes with each instance must be hashable and totally orderable.</p>\n\n<p>Subclasses include <code>Die</code> and <code>Deck</code>.</p>\n", "bases": "abc.ABC, typing.Mapping[typing.Any, int]"}, "icepool.Population.keys": {"fullname": "icepool.Population.keys", "modulename": "icepool", "qualname": "Population.keys", "type": "function", "doc": "<p>The outcomes within the population in sorted order.</p>\n", "signature": "(self) -> icepool.counts.CountsKeysView", "funcdef": "def"}, "icepool.Population.values": {"fullname": "icepool.Population.values", "modulename": "icepool", "qualname": "Population.values", "type": "function", "doc": "<p>The quantities within the population in outcome order.</p>\n", "signature": "(self) -> icepool.counts.CountsValuesView", "funcdef": "def"}, "icepool.Population.items": {"fullname": "icepool.Population.items", "modulename": "icepool", "qualname": "Population.items", "type": "function", "doc": "<p>The (outcome, quantity)s of the population in sorted order.</p>\n", "signature": "(self) -> icepool.counts.CountsItemsView", "funcdef": "def"}, "icepool.Population.marginals": {"fullname": "icepool.Population.marginals", "modulename": "icepool", "qualname": "Population.marginals", "type": "variable", "doc": "<p>A property that applies the <code>[]</code> operator to outcomes.</p>\n\n<p>This is not performed elementwise on tuples, so that this can be used\nto slice tuples. For example, <code>mapping.marginals[:2]</code> will marginalize\nthe first two elements of tuples.</p>\n"}, "icepool.Population.outcomes": {"fullname": "icepool.Population.outcomes", "modulename": "icepool", "qualname": "Population.outcomes", "type": "function", "doc": "<p>The sorted outcomes of the mapping.</p>\n\n<p>These are also the <code>keys</code> of the mapping.\nPrefer to use the name <code>outcomes</code>.</p>\n", "signature": "(self) -> icepool.counts.CountsKeysView", "funcdef": "def"}, "icepool.Population.outcome_len": {"fullname": "icepool.Population.outcome_len", "modulename": "icepool", "qualname": "Population.outcome_len", "type": "function", "doc": "<p>The common length of tuple outcomes.</p>\n\n<p>This is <code>None</code> if outcomes are not tuples,\nor if there are tuples of different lengths.</p>\n", "signature": "(self) -> int | None", "funcdef": "def"}, "icepool.Population.is_empty": {"fullname": "icepool.Population.is_empty", "modulename": "icepool", "qualname": "Population.is_empty", "type": "function", "doc": "<p><code>True</code> iff this mapping has no outcomes.</p>\n", "signature": "(self) -> bool", "funcdef": "def"}, "icepool.Population.min_outcome": {"fullname": "icepool.Population.min_outcome", "modulename": "icepool", "qualname": "Population.min_outcome", "type": "function", "doc": "<p>The least outcome.</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.Population.max_outcome": {"fullname": "icepool.Population.max_outcome", "modulename": "icepool", "qualname": "Population.max_outcome", "type": "function", "doc": "<p>The greatest outcome.</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.Population.nearest_le": {"fullname": "icepool.Population.nearest_le", "modulename": "icepool", "qualname": "Population.nearest_le", "type": "function", "doc": "<p>The nearest outcome that is &lt;= the argument.</p>\n\n<p>Returns <code>None</code> if there is no such outcome.</p>\n", "signature": "(self, outcome)", "funcdef": "def"}, "icepool.Population.nearest_ge": {"fullname": "icepool.Population.nearest_ge", "modulename": "icepool", "qualname": "Population.nearest_ge", "type": "function", "doc": "<p>The nearest outcome that is &gt;= the argument.</p>\n\n<p>Returns <code>None</code> if there is no such outcome.</p>\n", "signature": "(self, outcome)", "funcdef": "def"}, "icepool.Population.quantities": {"fullname": "icepool.Population.quantities", "modulename": "icepool", "qualname": "Population.quantities", "type": "function", "doc": "<p>The quantities of the mapping in sorted order.</p>\n\n<p>These are also the <code>values</code> of the mapping.\nPrefer to use the name <code>quantities</code>.</p>\n", "signature": "(self) -> icepool.counts.CountsValuesView", "funcdef": "def"}, "icepool.Population.denominator": {"fullname": "icepool.Population.denominator", "modulename": "icepool", "qualname": "Population.denominator", "type": "function", "doc": "<p>The sum of all quantities (e.g. weights or duplicates).</p>\n\n<p>For the number of unique outcomes, including those with zero quantity,\nuse <code>len()</code>.</p>\n", "signature": "(self) -> int", "funcdef": "def"}, "icepool.Population.has_zero_quantities": {"fullname": "icepool.Population.has_zero_quantities", "modulename": "icepool", "qualname": "Population.has_zero_quantities", "type": "function", "doc": "<p><code>True</code> iff <code>self</code> contains at least one outcome with zero quantity.</p>\n", "signature": "(self) -> bool", "funcdef": "def"}, "icepool.Population.quantities_le": {"fullname": "icepool.Population.quantities_le", "modulename": "icepool", "qualname": "Population.quantities_le", "type": "function", "doc": "<p>The quantity &lt;= each outcome in order.</p>\n", "signature": "(self) -> Sequence[int]", "funcdef": "def"}, "icepool.Population.quantities_ge": {"fullname": "icepool.Population.quantities_ge", "modulename": "icepool", "qualname": "Population.quantities_ge", "type": "function", "doc": "<p>The quantity &gt;= each outcome in order.</p>\n", "signature": "(self) -> Sequence[int]", "funcdef": "def"}, "icepool.Population.quantity": {"fullname": "icepool.Population.quantity", "modulename": "icepool", "qualname": "Population.quantity", "type": "function", "doc": "<p>The quantity of a single outcome, or 0 if not present.</p>\n", "signature": "(self, outcome) -> int", "funcdef": "def"}, "icepool.Population.quantity_ne": {"fullname": "icepool.Population.quantity_ne", "modulename": "icepool", "qualname": "Population.quantity_ne", "type": "function", "doc": "<p>The quantity != a single outcome.</p>\n", "signature": "(self, outcome) -> int", "funcdef": "def"}, "icepool.Population.quantity_le": {"fullname": "icepool.Population.quantity_le", "modulename": "icepool", "qualname": "Population.quantity_le", "type": "function", "doc": "<p>The quantity &lt;= a single outcome.</p>\n", "signature": "(self, outcome) -> int", "funcdef": "def"}, "icepool.Population.quantity_lt": {"fullname": "icepool.Population.quantity_lt", "modulename": "icepool", "qualname": "Population.quantity_lt", "type": "function", "doc": "<p>The quantity &lt; a single outcome.</p>\n", "signature": "(self, outcome) -> int", "funcdef": "def"}, "icepool.Population.quantity_ge": {"fullname": "icepool.Population.quantity_ge", "modulename": "icepool", "qualname": "Population.quantity_ge", "type": "function", "doc": "<p>The quantity &gt;= a single outcome.</p>\n", "signature": "(self, outcome) -> int", "funcdef": "def"}, "icepool.Population.quantity_gt": {"fullname": "icepool.Population.quantity_gt", "modulename": "icepool", "qualname": "Population.quantity_gt", "type": "function", "doc": "<p>The quantity &gt; a single outcome.</p>\n", "signature": "(self, outcome) -> int", "funcdef": "def"}, "icepool.Population.probabilities": {"fullname": "icepool.Population.probabilities", "modulename": "icepool", "qualname": "Population.probabilities", "type": "function", "doc": "<p>The probability of each outcome in order.</p>\n\n<p>Also known as the probability mass function (PMF).</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>percent:</strong>  If set, the results will be in percent (i.e. total of 100.0).\nOtherwise, the total will be 1.0.</li>\n</ul>\n", "signature": "(self, percent: bool = False)", "funcdef": "def"}, "icepool.Population.probabilities_le": {"fullname": "icepool.Population.probabilities_le", "modulename": "icepool", "qualname": "Population.probabilities_le", "type": "function", "doc": "<p>The probability of rolling &lt;= each outcome in order.</p>\n\n<p>Also known as the cumulative distribution function (CDF),\nthough this term is ambigiuous whether it is &lt; or &lt;=.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>percent:</strong>  If set, the results will be in percent (i.e. total of 100.0).\nOtherwise, the total will be 1.0.</li>\n</ul>\n", "signature": "(self, percent: bool = False)", "funcdef": "def"}, "icepool.Population.probabilities_ge": {"fullname": "icepool.Population.probabilities_ge", "modulename": "icepool", "qualname": "Population.probabilities_ge", "type": "function", "doc": "<p>The probability of rolling &gt;= each outcome in order.</p>\n\n<p>Also known as the survival function (SF) or\ncomplementary cumulative distribution function (CCDF),\nthough these term are ambigiuous whether they are is &gt; or &gt;=.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>percent:</strong>  If set, the results will be in percent (i.e. total of 100.0).\nOtherwise, the total will be 1.0.</li>\n</ul>\n", "signature": "(self, percent: bool = False)", "funcdef": "def"}, "icepool.Population.probability": {"fullname": "icepool.Population.probability", "modulename": "icepool", "qualname": "Population.probability", "type": "function", "doc": "<p>The probability of a single outcome, or 0.0 if not present.</p>\n", "signature": "(self, outcome)", "funcdef": "def"}, "icepool.Population.mode": {"fullname": "icepool.Population.mode", "modulename": "icepool", "qualname": "Population.mode", "type": "function", "doc": "<p>A tuple containing the most common outcome(s) of the population.</p>\n\n<p>These are sorted from lowest to highest.</p>\n", "signature": "(self) -> tuple", "funcdef": "def"}, "icepool.Population.modal_quantity": {"fullname": "icepool.Population.modal_quantity", "modulename": "icepool", "qualname": "Population.modal_quantity", "type": "function", "doc": "<p>The highest quantity of any single outcome.</p>\n", "signature": "(self) -> int", "funcdef": "def"}, "icepool.Population.kolmogorov_smirnov": {"fullname": "icepool.Population.kolmogorov_smirnov", "modulename": "icepool", "qualname": "Population.kolmogorov_smirnov", "type": "function", "doc": "<p>Kolmogorov\u2013Smirnov statistic. The maximum absolute difference between CDFs.</p>\n", "signature": "(self, other)", "funcdef": "def"}, "icepool.Population.cramer_von_mises": {"fullname": "icepool.Population.cramer_von_mises", "modulename": "icepool", "qualname": "Population.cramer_von_mises", "type": "function", "doc": "<p>Cram\u00e9r-von Mises statistic. The sum-of-squares difference between CDFs.</p>\n", "signature": "(self, other)", "funcdef": "def"}, "icepool.Population.median": {"fullname": "icepool.Population.median", "modulename": "icepool", "qualname": "Population.median", "type": "function", "doc": "<p>The median, taking the mean in case of a tie.</p>\n\n<p>This will fail if the outcomes do not support division;\nin this case, use <code>median_left</code> or <code>median_right</code> instead.</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.Population.median_left": {"fullname": "icepool.Population.median_left", "modulename": "icepool", "qualname": "Population.median_left", "type": "function", "doc": "<p>The median, taking the lesser in case of a tie.</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.Population.median_right": {"fullname": "icepool.Population.median_right", "modulename": "icepool", "qualname": "Population.median_right", "type": "function", "doc": "<p>The median, taking the greater in case of a tie.</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.Population.quantile": {"fullname": "icepool.Population.quantile", "modulename": "icepool", "qualname": "Population.quantile", "type": "function", "doc": "<p>The outcome <code>n / d</code> of the way through the CDF, taking the mean in case of a tie.</p>\n\n<p>This will fail if the outcomes do not support division;\nin this case, use <code>quantile_left</code> or <code>quantile_right</code> instead.</p>\n", "signature": "(self, n: int, d: int = 100)", "funcdef": "def"}, "icepool.Population.quantile_left": {"fullname": "icepool.Population.quantile_left", "modulename": "icepool", "qualname": "Population.quantile_left", "type": "function", "doc": "<p>The outcome <code>n / d</code> of the way through the CDF, taking the lesser in case of a tie.</p>\n", "signature": "(self, n: int, d: int = 100)", "funcdef": "def"}, "icepool.Population.quantile_right": {"fullname": "icepool.Population.quantile_right", "modulename": "icepool", "qualname": "Population.quantile_right", "type": "function", "doc": "<p>The outcome <code>n / d</code> of the way through the CDF, taking the greater in case of a tie.</p>\n", "signature": "(self, n: int, d: int = 100)", "funcdef": "def"}, "icepool.Population.mean": {"fullname": "icepool.Population.mean", "modulename": "icepool", "qualname": "Population.mean", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.Population.variance": {"fullname": "icepool.Population.variance", "modulename": "icepool", "qualname": "Population.variance", "type": "function", "doc": "<p>This is the population variance, not the sample variance.</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.Population.standard_deviation": {"fullname": "icepool.Population.standard_deviation", "modulename": "icepool", "qualname": "Population.standard_deviation", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.Population.sd": {"fullname": "icepool.Population.sd", "modulename": "icepool", "qualname": "Population.sd", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.Population.standardized_moment": {"fullname": "icepool.Population.standardized_moment", "modulename": "icepool", "qualname": "Population.standardized_moment", "type": "function", "doc": "<p></p>\n", "signature": "(self, k: int)", "funcdef": "def"}, "icepool.Population.skewness": {"fullname": "icepool.Population.skewness", "modulename": "icepool", "qualname": "Population.skewness", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.Population.excess_kurtosis": {"fullname": "icepool.Population.excess_kurtosis", "modulename": "icepool", "qualname": "Population.excess_kurtosis", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.Population.covariance": {"fullname": "icepool.Population.covariance", "modulename": "icepool", "qualname": "Population.covariance", "type": "function", "doc": "<p></p>\n", "signature": "(self, i: int, j: int)", "funcdef": "def"}, "icepool.Population.correlation": {"fullname": "icepool.Population.correlation", "modulename": "icepool", "qualname": "Population.correlation", "type": "function", "doc": "<p></p>\n", "signature": "(self, i: int, j: int)", "funcdef": "def"}, "icepool.Population.sample": {"fullname": "icepool.Population.sample", "modulename": "icepool", "qualname": "Population.sample", "type": "function", "doc": "<p>A single random sample from this population.</p>\n\n<p>Note that this is always \"with replacement\" even for <code>Deck</code> since\ninstances are immutable.</p>\n\n<p>This uses the standard <code>random</code> package and is not cryptographically\nsecure.</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.Population.format": {"fullname": "icepool.Population.format", "modulename": "icepool", "qualname": "Population.format", "type": "function", "doc": "<p>Formats this mapping as a string.</p>\n\n<p><code>format_spec</code> should start with the output format,\nwhich is either <code>md</code> (Markdown) or <code>csv</code> (comma-separated values),\nfollowed by a ':' character.</p>\n\n<p>After this, zero or more columns should follow. Options are:</p>\n\n<ul>\n<li><code>o</code>: Outcomes.</li>\n<li><code>*o</code>: Outcomes, unpacked if applicable.</li>\n<li><code>q==</code>, <code>q&lt;=</code>, <code>q&gt;=</code>: Quantities ==, &lt;=, or &gt;= each outcome.</li>\n<li><code>p==</code>, <code>p&lt;=</code>, <code>p&gt;=</code>: Probabilities (0-1) ==, &lt;=, or &gt;= each outcome.</li>\n<li><code>%==</code>, <code>%&lt;=</code>, <code>%&gt;=</code>: Probabilities (0%-100%) ==, &lt;=, or &gt;= each outcome.</li>\n</ul>\n\n<p>Columns may optionally be separated using <code></code> (space) or <code>|</code> characters.</p>\n\n<p>The default is <code>'md:*o|q==|%=='</code>, with the quantity column being omitted\nif any quantity exceeds 10**30.</p>\n", "signature": "(self, format_spec: str, **kwargs) -> str", "funcdef": "def"}, "icepool.CountsKeysView": {"fullname": "icepool.CountsKeysView", "modulename": "icepool", "qualname": "CountsKeysView", "type": "class", "doc": "<p>This functions as both a <code>KeysView</code> and a <code>Sequence</code>.</p>\n", "bases": "typing.KeysView, typing.Sequence"}, "icepool.CountsKeysView.__init__": {"fullname": "icepool.CountsKeysView.__init__", "modulename": "icepool", "qualname": "CountsKeysView.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, counts: icepool.counts.Counts)", "funcdef": "def"}, "icepool.CountsValuesView": {"fullname": "icepool.CountsValuesView", "modulename": "icepool", "qualname": "CountsValuesView", "type": "class", "doc": "<p>This functions as both a <code>ValuesView</code> and a <code>Sequence</code>.</p>\n", "bases": "typing.ValuesView[int], typing.Sequence[int]"}, "icepool.CountsValuesView.__init__": {"fullname": "icepool.CountsValuesView.__init__", "modulename": "icepool", "qualname": "CountsValuesView.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, counts: icepool.counts.Counts)", "funcdef": "def"}, "icepool.CountsItemsView": {"fullname": "icepool.CountsItemsView", "modulename": "icepool", "qualname": "CountsItemsView", "type": "class", "doc": "<p>This functions as both an <code>ItemsView</code> and a <code>Sequence</code>.</p>\n", "bases": "typing.ItemsView[typing.Any, int], typing.Sequence[tuple[typing.Any, int]]"}, "icepool.CountsItemsView.__init__": {"fullname": "icepool.CountsItemsView.__init__", "modulename": "icepool", "qualname": "CountsItemsView.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, counts: icepool.counts.Counts)", "funcdef": "def"}, "icepool.from_cumulative_quantities": {"fullname": "icepool.from_cumulative_quantities", "modulename": "icepool", "qualname": "from_cumulative_quantities", "type": "function", "doc": "<p>Constructs a <code>Die</code> from a sequence of cumulative quantities.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>outcomes:</strong>  The outcomes of the resulting die. Sorted order is recommended\nbut not necessary.</li>\n<li><strong>cumulative_quantities:</strong>  The cumulative quantities (inclusive) of the\noutcomes in the order they are given to this function.</li>\n<li><strong>reverse:</strong>  Iff true, both of the arguments will be reversed. This allows\ne.g. constructing using a survival distribution.</li>\n</ul>\n", "signature": "(\n    outcomes: Sequence,\n    cumulative_quantities: Sequence[int],\n    *,\n    reverse: bool = False\n) -> icepool.die.die.Die", "funcdef": "def"}, "icepool.from_rv": {"fullname": "icepool.from_rv", "modulename": "icepool", "qualname": "from_rv", "type": "function", "doc": "<p>Constructs a <code>Die</code> from a rv object (as <code>scipy.stats</code>).</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>rv:</strong>  A rv object (as <code>scipy.stats</code>).</li>\n<li><strong>outcomes:</strong>  An iterable of <code>int</code>s or <code>float</code>s that will be the outcomes\nof the resulting <code>Die</code>.\nIf the distribution is discrete, outcomes must be <code>int</code>s.</li>\n<li><strong>denominator:</strong>  The denominator of the resulting <code>Die</code> will be set to this.</li>\n<li><strong>**kwargs:</strong>  These will be provided to <code>rv.cdf()</code>.</li>\n</ul>\n", "signature": "(rv, outcomes: Sequence[int | float], denominator: int, **kwargs)", "funcdef": "def"}, "icepool.align": {"fullname": "icepool.align", "modulename": "icepool", "qualname": "align", "type": "function", "doc": "<p>Pads dice with zero quantities so that all have the same set of outcomes.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>*dice:</strong>  One <code>Die</code> per argument.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A tuple of aligned dice.</p>\n</blockquote>\n", "signature": "(*dice) -> tuple[icepool.die.die.Die, ...]", "funcdef": "def"}, "icepool.align_range": {"fullname": "icepool.align_range", "modulename": "icepool", "qualname": "align_range", "type": "function", "doc": "<p>Pads dice with zero quantities so that all have the same set of consecutive <code>int</code> outcomes.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>*dice:</strong>  One <code>Die</code> per argument.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A tuple of aligned dice.</p>\n</blockquote>\n", "signature": "(*dice) -> tuple[icepool.die.die.Die, ...]", "funcdef": "def"}, "icepool.lowest": {"fullname": "icepool.lowest", "modulename": "icepool", "qualname": "lowest", "type": "function", "doc": "<p>The lowest outcome or sum of the lowest outcomes among the dice.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>*dice:</strong>  The dice to be considered. At least one <code>Die</code> must be provided.</li>\n<li><strong>keep:</strong>  The number of lowest dice will be summed.</li>\n<li><strong>drop:</strong>  This number of lowest dice will be dropped before keeping dice\nto be summed.</li>\n</ul>\n", "signature": "(*dice, keep: int = 1, drop: int = 0) -> icepool.die.die.Die", "funcdef": "def"}, "icepool.highest": {"fullname": "icepool.highest", "modulename": "icepool", "qualname": "highest", "type": "function", "doc": "<p>The highest outcome or sum of the highest outcomes among the dice.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>*dice:</strong>  The dice to be considered. At least one <code>Die</code> must be provided.</li>\n<li><strong>keep:</strong>  The number of highest dice will be summed.</li>\n<li><strong>drop:</strong>  This number of highest dice will be dropped before keeping dice\nto be summed.</li>\n</ul>\n", "signature": "(*dice, keep: int = 1, drop: int = 0) -> icepool.die.die.Die", "funcdef": "def"}, "icepool.min_outcome": {"fullname": "icepool.min_outcome", "modulename": "icepool", "qualname": "min_outcome", "type": "function", "doc": "<p>The minimum outcome among the dice.</p>\n", "signature": "(*dice)", "funcdef": "def"}, "icepool.max_outcome": {"fullname": "icepool.max_outcome", "modulename": "icepool", "qualname": "max_outcome", "type": "function", "doc": "<p>The maximum outcome among the dice.</p>\n", "signature": "(*dice)", "funcdef": "def"}, "icepool.reduce": {"fullname": "icepool.reduce", "modulename": "icepool", "qualname": "reduce", "type": "function", "doc": "<p>Applies a function of two arguments cumulatively to a sequence of dice.</p>\n\n<p>Analogous to\n<a href=\"https://docs.python.org/3/library/functools.html#functools.reduce\"><code>functools.reduce()</code></a>.</p>\n\n<p>The function is applied non-elementwise to tuple outcomes.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>func:</strong>  The function to apply. The function should take two arguments,\nwhich are an outcome from each of two dice.</li>\n<li><strong>dice:</strong>  A sequence of dice to apply the function to, from left to right.</li>\n<li><strong>initial:</strong>  If provided, this will be placed at the front of the sequence\nof dice.</li>\n</ul>\n", "signature": "(func: Callable[[Any, Any], Any], dice, *, initial=None)", "funcdef": "def"}, "icepool.accumulate": {"fullname": "icepool.accumulate", "modulename": "icepool", "qualname": "accumulate", "type": "function", "doc": "<p>Applies a function of two arguments cumulatively to a sequence of dice, yielding each result in turn.</p>\n\n<p>Analogous to\n<a href=\"https://docs.python.org/3/library/itertools.html#itertools.accumulate\"><code>itertools.accumulate()</code></a>\n, though with no default function and\nthe same parameter order as <code>reduce()</code>.</p>\n\n<p>The number of results is equal to the number of elements of <code>dice</code>, with\none additional element if <code>initial</code> is provided.</p>\n\n<p>The function is applied non-elementwise to tuple outcomes.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>func:</strong>  The function to apply. The function should take two arguments,\nwhich are an outcome from each of two dice.</li>\n<li><strong>dice:</strong>  A sequence of dice to apply the function to, from left to right.</li>\n<li><strong>initial:</strong>  If provided, this will be placed at the front of the sequence\nof dice.</li>\n</ul>\n", "signature": "(func: Callable[[Any, Any], Any], dice, *, initial=None)", "funcdef": "def"}, "icepool.apply": {"fullname": "icepool.apply", "modulename": "icepool", "qualname": "apply", "type": "function", "doc": "<p>Applies <code>func(outcome_of_die_0, outcome_of_die_1, ...)</code> for all outcomes of the dice.</p>\n\n<p>Example: <code>apply(lambda a, b: a + b, d6, d6)</code> is the same as d6 + d6.</p>\n\n<p><code>apply()</code> is flexible but not very efficient for more than two dice.\nInstead of using more than two arguments:</p>\n\n<ul>\n<li>If the problem is easy to solve by considering one additional <code>Die</code> at a\ntime, try using <code>reduce()</code> instead.</li>\n<li>If the problem is easy to solve by considering how many dice rolled each\noutcome, one outcome at a time, try using\n<code>icepool.Pool</code> and <code>icepool.OutcomeCountEvaluator</code>.</li>\n<li>If the order in which the dice are rolled is not important, you can use\n<code>apply_sorted()</code>. This is less efficient than either of the above two,\nbut is still more efficient than <code>apply()</code>.</li>\n</ul>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>func:</strong>  A function that takes one argument per input <code>Die</code> and returns an\nargument to <code>Die()</code>.</li>\n<li><strong>*dice:</strong>  Any number of dice (or objects convertible to dice).\n<code>func</code> will be called with all joint outcomes of <code>dice</code>, with one\nargument per <code>Die</code>.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A <code>Die</code> constructed from the outputs of <code>func</code> and the product of the\n  quantities of the dice.</p>\n</blockquote>\n", "signature": "(func: Callable, *dice) -> icepool.die.die.Die", "funcdef": "def"}, "icepool.apply_sorted": {"fullname": "icepool.apply_sorted", "modulename": "icepool", "qualname": "apply_sorted", "type": "function", "doc": "<p>Applies <code>func(lowest_outcome, next_lowest_outcome...)</code> for all sorted joint outcomes of the dice.</p>\n\n<p>This is more efficient than <code>apply()</code> but still not very efficient.\nUse <code>OutcomeCountEvaluator</code> instead if at all possible.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>func:</strong>  A function that takes one argument per input <code>Die</code> and returns an\nargument to <code>Die()</code>.</li>\n<li><strong>*dice:</strong>  Any number of dice (or objects convertible to dice).\n<code>func</code> will be called with all sorted joint outcomes of <code>dice</code>,\nwith one argument per die. All outcomes must be totally orderable.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A <code>Die</code> constructed from the outputs of <code>func</code> and the weight of rolling\n  the corresponding sorted outcomes.</p>\n</blockquote>\n", "signature": "(func: Callable, *dice) -> icepool.die.die.Die", "funcdef": "def"}, "icepool.Reroll": {"fullname": "icepool.Reroll", "modulename": "icepool", "qualname": "Reroll", "type": "variable", "doc": "<p>Indicates an outcome should be rerolled (with no max depth).</p>\n", "default_value": " = <SpecialValue.Reroll: 'Reroll'>"}, "icepool.OutcomeCountGenerator": {"fullname": "icepool.OutcomeCountGenerator", "modulename": "icepool", "qualname": "OutcomeCountGenerator", "type": "class", "doc": "<p>Abstract base class for incrementally generating <code>(outcome, counts, weight)</code>s.</p>\n\n<p>These include dice pools (<code>Pool</code>) and card decks (<code>Deck</code>).</p>\n\n<p>These generators can be evaluated by an <code>OutcomeCountEvaluator</code>.</p>\n", "bases": "abc.ABC"}, "icepool.OutcomeCountGenerator.outcomes": {"fullname": "icepool.OutcomeCountGenerator.outcomes", "modulename": "icepool", "qualname": "OutcomeCountGenerator.outcomes", "type": "function", "doc": "<p>The set of outcomes, in sorted order.</p>\n", "signature": "(self) -> Sequence", "funcdef": "def"}, "icepool.OutcomeCountGenerator.denominator": {"fullname": "icepool.OutcomeCountGenerator.denominator", "modulename": "icepool", "qualname": "OutcomeCountGenerator.denominator", "type": "function", "doc": "<p>The total weight of all paths through this generator.</p>\n", "signature": "(self) -> int", "funcdef": "def"}, "icepool.OutcomeCountGenerator.evaluate": {"fullname": "icepool.OutcomeCountGenerator.evaluate", "modulename": "icepool", "qualname": "OutcomeCountGenerator.evaluate", "type": "function", "doc": "<p>Evaluates this generator using the given <code>OutcomeCountEvaluator</code> or function.</p>\n\n<p>Note that each <code>OutcomeCountEvaluator</code> instance carries its own cache;\nif you plan to use an evaluation multiple times,\nyou may want to explicitly create an <code>OutcomeCountEvaluator</code> instance\nrather than passing a function to this method directly.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>func:</strong>  This can be an <code>OutcomeCountEvaluator</code>, in which case it evaluates\nthe generator directly.\nOr it can be a <code>OutcomeCountEvaluator.next_state()</code>-like\nfunction, taking in <code>state, outcome, *counts</code> and returning the\nnext state. In this case a temporary <code>WrapFuncEvaluator</code>\nis constructed and used to evaluate this generator.</li>\n</ul>\n", "signature": "(\n    self,\n    evaluator_or_func: Union[icepool.outcome_count_evaluator.OutcomeCountEvaluator, Callable],\n    /\n) -> icepool.die.die.Die", "funcdef": "def"}, "icepool.OutcomeCountGenerator.min_outcome": {"fullname": "icepool.OutcomeCountGenerator.min_outcome", "modulename": "icepool", "qualname": "OutcomeCountGenerator.min_outcome", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.OutcomeCountGenerator.max_outcome": {"fullname": "icepool.OutcomeCountGenerator.max_outcome", "modulename": "icepool", "qualname": "OutcomeCountGenerator.max_outcome", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.OutcomeCountGenerator.sum": {"fullname": "icepool.OutcomeCountGenerator.sum", "modulename": "icepool", "qualname": "OutcomeCountGenerator.sum", "type": "function", "doc": "<p>Convenience method to simply sum the dice in this generator.</p>\n\n<p>This uses <code>icepool.sum_pool</code>.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A <code>Die</code> representing the sum.</p>\n</blockquote>\n", "signature": "(self) -> icepool.die.die.Die", "funcdef": "def"}, "icepool.OutcomeCountGenerator.sample": {"fullname": "icepool.OutcomeCountGenerator.sample", "modulename": "icepool", "qualname": "OutcomeCountGenerator.sample", "type": "function", "doc": "<p>EXPERIMENTAL: A single random sample from this generator.</p>\n\n<p>This uses the standard <code>random</code> package and is not cryptographically\nsecure.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A sorted tuple of outcomes for each output of this generator.</p>\n</blockquote>\n", "signature": "(self) -> tuple[tuple, ...]", "funcdef": "def"}, "icepool.Pool": {"fullname": "icepool.Pool", "modulename": "icepool", "qualname": "Pool", "type": "class", "doc": "<p>Represents a set of sorted/unordered dice, only distinguished by the outcomes they roll.</p>\n\n<p>This should be used in conjunction with <code>OutcomeCountEvaluator</code> to generate a result.</p>\n", "bases": "icepool.outcome_count_generator.OutcomeCountGenerator"}, "icepool.Pool.__init__": {"fullname": "icepool.Pool.__init__", "modulename": "icepool", "qualname": "Pool.__init__", "type": "function", "doc": "<p>Public constructor for a pool.</p>\n\n<p>Evaulation is most efficient when the dice are the same or same-side\ntruncations of each other. For example, d4, d6, d8, d10, d12 are all\nsame-side truncations of d12.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><p><strong>dice:</strong>  The dice to put in the <code>Pool</code>. This can be one of the following:</p>\n\n<ul>\n<li>A sequence of dice.</li>\n<li>A mapping of dice and how many of that <code>Die</code> to put in the <code>Pool</code>.</li>\n</ul>\n\n<p><p>All outcomes within a <code>Pool</code> must be totally orderable.</p></li>\n<li><strong>times:</strong>  Multiplies the number of times each element of <code>dice</code> will\nbe put into the pool.\n<code>times</code> can either be a sequence of the same length as\n<code>outcomes</code> or a single <code>int</code> to apply to all elements of\n<code>outcomes</code>.</li>\n</ul></p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  If a bare <code>Deck</code> or <code>Die</code> argument is provided.\nA <code>Pool</code> of a single <code>Die</code> should constructed as <code>Pool([die])</code>.</li>\n</ul>\n", "signature": "(\n    cls,\n    dice: Union[Mapping[Any, int], Sequence],\n    times: Union[Sequence[int], int] = 1\n)", "funcdef": "def"}, "icepool.Pool.size": {"fullname": "icepool.Pool.size", "modulename": "icepool", "qualname": "Pool.size", "type": "function", "doc": "<p>The number of dice in this pool, counting multiples of the same <code>Die</code>.</p>\n", "signature": "(self) -> int", "funcdef": "def"}, "icepool.Pool.denominator": {"fullname": "icepool.Pool.denominator", "modulename": "icepool", "qualname": "Pool.denominator", "type": "function", "doc": "<p>The total weight of all paths through this generator.</p>\n", "signature": "(self) -> int", "funcdef": "def"}, "icepool.Pool.unique_dice": {"fullname": "icepool.Pool.unique_dice", "modulename": "icepool", "qualname": "Pool.unique_dice", "type": "function", "doc": "<p>The collection of unique dice in this pool.</p>\n", "signature": "(self) -> Collection[icepool.die.die.Die]", "funcdef": "def"}, "icepool.Pool.outcomes": {"fullname": "icepool.Pool.outcomes", "modulename": "icepool", "qualname": "Pool.outcomes", "type": "function", "doc": "<p>The union of outcomes among all dice in this pool.</p>\n", "signature": "(self) -> Sequence", "funcdef": "def"}, "icepool.Pool.post_roll_counts": {"fullname": "icepool.Pool.post_roll_counts", "modulename": "icepool", "qualname": "Pool.post_roll_counts", "type": "function", "doc": "<p>The tuple indicating which dice in the pool will be counted.</p>\n\n<p>The tuple has one element per <code>Die</code> in the pool, from lowest roll to\nhighest roll.</p>\n", "signature": "(self) -> tuple[int, ...]", "funcdef": "def"}, "icepool.Pool.set_post_roll_counts": {"fullname": "icepool.Pool.set_post_roll_counts", "modulename": "icepool", "qualname": "Pool.set_post_roll_counts", "type": "function", "doc": "<p>A <code>Pool</code> with the selected dice counted after rolling and sorting.</p>\n\n<p>Use <code>pool[post_roll_counts]</code> for the same effect as this method.</p>\n\n<p>The dice are sorted in ascending order for this purpose,\nregardless of which order the outcomes are evaluated in.</p>\n\n<p>This is always an absolute selection on all <code>size</code> dice,\nnot a relative selection on already-selected dice,\nwhich would be ambiguous in the presence of multiple or negative counts.</p>\n\n<p>For example, here are some ways of selecting the two highest dice out of 5:</p>\n\n<ul>\n<li><code>pool[3:5]</code></li>\n<li><code>pool[3:]</code></li>\n<li><code>pool[-2:]</code></li>\n<li><code>pool[..., 1, 1]</code></li>\n</ul>\n\n<p>These will also select the two highest dice out of 5, and will also\nresize the <code>Pool</code> to 5 dice first:</p>\n\n<ul>\n<li><code>pool[3::5]</code></li>\n<li><code>pool[3:5:5]</code></li>\n<li><code>pool[-2::5]</code></li>\n<li><code>pool[0, 0, 0, 1, 1]</code></li>\n</ul>\n\n<p>These will count the highest as a positive and the lowest as a negative:</p>\n\n<ul>\n<li><code>pool[-1, 0, 0, 0, 1]</code></li>\n<li><code>pool[-1, ..., 1]</code></li>\n</ul>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li>An <code>int</code>. This will count only the <code>Die</code> at the specified index (once).\nIn this case, the result will be a <code>Die</code>, not a pool.</li>\n<li>A <code>slice</code>. The selected dice are counted once each.\nIf provided, the third argument resizes the pool,\nrather than being a step; however, this is only valid if the\n<code>Pool</code> consists of a single type of <code>Die</code>.</li>\n<li><p>A sequence of one <code>int</code> for each <code>Die</code>.\nEach <code>Die</code> is counted that many times, which could be multiple or\nnegative times. This may resize the pool, but only if the\n<code>Pool</code> consists of a single type of <code>Die</code>.</p>\n\n<p>Up to one <code>Ellipsis</code> (<code>...</code>) may be used.\nIf an <code>Ellipsis</code> is used, the size of the <code>Pool</code> won't change.\nInstead, the <code>Ellipsis</code> will be replaced with a number of zero\ncounts, sufficient to maintain the current size of this <code>Pool</code>.\nThis number may be \"negative\" if more <code>int</code>s are provided than\nthe size of the <code>Pool</code>. Specifically:</p>\n\n<ul>\n<li>If <code>post_roll_counts</code> is shorter than <code>size</code>, the <code>Ellipsis</code>\nacts as enough zero counts to make up the difference.\nE.g. <code>pool[1, ..., 1]</code> on five dice would act as <code>pool[1, 0, 0, 0, 1]</code>.</li>\n<li>If <code>post_roll_counts</code> has length equal to <code>size</code>, the <code>Ellipsis</code> has no effect.\nE.g. <code>pool[1, ..., 1]</code> on two dice would act as <code>pool[1, 1]</code>.</li>\n<li>If <code>post_roll_counts</code> is longer than <code>size</code> and the <code>Ellipsis</code> is on one side,\nelements will be dropped from <code>post_roll_counts</code> on the side with the <code>Ellipsis</code>.\nE.g. <code>pool[..., 1, 2, 3]</code> on two dice would act as <code>pool[2, 3]</code>.</li>\n<li>If <code>post_roll_counts</code> is longer than <code>size</code> and the <code>Ellipsis</code>\nis in the middle, the counts will be as the sum of two\none-sided <code>Ellipsis</code>.\nE.g. <code>pool[-1, ..., 1]</code> acts like <code>[-1, ...]</code> plus <code>[..., 1]</code>.\nOn a <code>Pool</code> consisting of a single single <code>Die</code> this would have\nthe -1 and 1 cancel each other out.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError:</strong>   If <code>post_roll_counts</code> would change the size of a <code>Pool</code>\nwith more than one type of <code>Die</code>, or if more than one <code>Ellipsis</code>\nis used.</li>\n</ul>\n", "signature": "(self, post_roll_counts: int | slice | tuple[int, ...])", "funcdef": "def"}, "icepool.Pool.min_outcome": {"fullname": "icepool.Pool.min_outcome", "modulename": "icepool", "qualname": "Pool.min_outcome", "type": "function", "doc": "<p>The min outcome among all dice in this pool.</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.Pool.max_outcome": {"fullname": "icepool.Pool.max_outcome", "modulename": "icepool", "qualname": "Pool.max_outcome", "type": "function", "doc": "<p>The max outcome among all dice in this pool.</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.Pool.lowest": {"fullname": "icepool.Pool.lowest", "modulename": "icepool", "qualname": "Pool.lowest", "type": "function", "doc": "<p>The lowest outcome or sum of the lowest outcomes in the pool.</p>\n\n<p>The args override any <code>post_roll_counts</code> of this pool.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>keep:</strong>  The number of lowest dice will be summed.</li>\n<li><strong>drop:</strong>  This number of lowest dice will be dropped before keeping\ndice to be summed.</li>\n</ul>\n", "signature": "(self, keep: int = 1, drop: int = 0) -> icepool.die.die.Die", "funcdef": "def"}, "icepool.Pool.highest": {"fullname": "icepool.Pool.highest", "modulename": "icepool", "qualname": "Pool.highest", "type": "function", "doc": "<p>The highest outcome or sum of the highest outcomes in the pool.</p>\n\n<p>The args override any <code>post_roll_counts</code> of this pool.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>keep:</strong>  The number of highest dice will be summed.</li>\n<li><strong>drop:</strong>  This number of highest dice will be dropped before keeping\ndice to be summed.</li>\n</ul>\n", "signature": "(self, keep: int = 1, drop: int = 0) -> icepool.die.die.Die", "funcdef": "def"}, "icepool.standard_pool": {"fullname": "icepool.standard_pool", "modulename": "icepool", "qualname": "standard_pool", "type": "function", "doc": "<p>A <code>Pool</code> of standard dice (e.g. d6, d8...).</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>die_sizes:</strong>  For each of these die_size X, the <code>Pool</code> will contain one dX.</li>\n</ul>\n", "signature": "(die_sizes: Collection[int]) -> icepool.pool.Pool", "funcdef": "def"}, "icepool.OutcomeCountEvaluator": {"fullname": "icepool.OutcomeCountEvaluator", "modulename": "icepool", "qualname": "OutcomeCountEvaluator", "type": "class", "doc": "<p>An abstract, immutable, callable class for evaulating one or more <code>OutcomeCountGenerator</code>s.</p>\n\n<p>There is one abstract method to implement: <code>next_state()</code>.\nThis should incrementally calculate the result given one outcome at a time\nalong with how many of that outcome were produced.</p>\n\n<p>An example sequence of calls, as far as <code>next_state()</code> is concerned, is:</p>\n\n<ol>\n<li><code>state = next_state(state=None, outcome=1, count_of_1s)</code></li>\n<li><code>state = next_state(state, 2, count_of_2s)</code></li>\n<li><code>state = next_state(state, 3, count_of_3s)</code></li>\n<li><code>state = next_state(state, 4, count_of_4s)</code></li>\n<li><code>state = next_state(state, 5, count_of_5s)</code></li>\n<li><code>state = next_state(state, 6, count_of_6s)</code></li>\n<li><code>outcome = final_outcome(state, *generators)</code></li>\n</ol>\n\n<p>A few other methods can optionally be overridden to further customize behavior.</p>\n\n<p>It is not expected that subclasses of <code>OutcomeCountEvaluator</code>\nbe able to handle arbitrary types or numbers of generators.\nIndeed, most are expected to handle only a fixed number of generators,\nand often even only generators with a particular type of <code>Die</code>.</p>\n\n<p>Instances cache all intermediate state distributions.\nYou should therefore reuse instances when possible.</p>\n\n<p>Instances should not be modified after construction\nin any way that affects the return values of these methods.\nOtherwise, values in the cache may be incorrect.</p>\n", "bases": "abc.ABC"}, "icepool.OutcomeCountEvaluator.next_state": {"fullname": "icepool.OutcomeCountEvaluator.next_state", "modulename": "icepool", "qualname": "OutcomeCountEvaluator.next_state", "type": "function", "doc": "<p>State transition function.</p>\n\n<p>This should produce a state given the previous state, an outcome,\nand the number that outcome produced by each generator.</p>\n\n<p><code>evaluate()</code> will always call this using only positional arguments.\nFurthermore, there is no expectation that a subclass be able to handle\nan arbitrary number of counts. Thus, you are free to rename any of\nthe parameters in a subclass, or to replace <code>*counts</code> with a fixed set\nof parameters.</p>\n\n<p>Make sure to handle the base case where <code>state is None</code>.</p>\n\n<p>States must be hashable, but unlike outcomes they do not need to be\norderable. However, if they are not totally orderable, you must override\n<code>final_outcome</code> to create legal final outcomes.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>state:</strong>  A hashable object indicating the state before rolling the\ncurrent outcome. If this is the first outcome being considered,\n<code>state</code> will be <code>None</code>.</li>\n<li><strong>outcome:</strong>  The current outcome.\n<code>next_state</code> will see all rolled outcomes in monotonic order;\neither ascending or descending depending on <code>direction()</code>.\nIf there are multiple generators, the set of outcomes is the\nunion of the outcomes of the invididual generators. All outcomes\nwith nonzero count will be seen. Outcomes with zero count\nmay or may not be seen. If you need to enforce that certain\noutcomes are seen even if they have zero count, see\n<code>alignment()</code>.</li>\n<li><strong>*counts:</strong>  One <code>int</code> for each generator output indicating how many of\nthe current outcome were produced. All outcomes with nonzero\ncount are guaranteed to be seen. To guarantee that outcomes\nare seen even if they have zero count, override <code>alignment()</code>.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A hashable object indicating the next state.\n  The special value <code>icepool.Reroll</code> can be used to immediately remove\n  the state from consideration, effectively performing a full reroll.</p>\n</blockquote>\n", "signature": "(self, state: Hashable, outcome, /, *counts: int) -> Hashable", "funcdef": "def"}, "icepool.OutcomeCountEvaluator.final_outcome": {"fullname": "icepool.OutcomeCountEvaluator.final_outcome", "modulename": "icepool", "qualname": "OutcomeCountEvaluator.final_outcome", "type": "function", "doc": "<p>Optional function to generate a final outcome from a final state.</p>\n\n<p>Tthere is no expectation that a subclass be able to handle\nan arbitrary number of generators. Thus, you are free to rename any of\nthe parameters in a subclass, or to replace <code>*generators</code> with a fixed\nset of parameters.</p>\n\n<p>By default, the final outcome is equal to the final state.\nNote that <code>None</code> is not a valid outcome for a <code>Die</code>,\nand if there are no outcomes, the final state will be <code>None</code>.\nSubclasses that want to handle this case should explicitly define what\nhappens.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>final_state:</strong>  A state after all outcomes have been processed.</li>\n<li><strong>*generators:</strong>  One or more <code>OutcomeCountGenerator</code>s being evaluated.\nMost subclasses will expect a fixed number of generators and\ncan replace this variadic parameter with a fixed number of named\nparameters.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A final outcome that will be used as part of constructing the result <code>Die</code>.\n  As usual for <code>Die()</code>, this could itself be a <code>Die</code> or <code>icepool.Reroll</code>.</p>\n</blockquote>\n", "signature": "(\n    self,\n    final_state: Hashable,\n    /,\n    *generators: icepool.outcome_count_generator.OutcomeCountGenerator\n) -> Any", "funcdef": "def"}, "icepool.OutcomeCountEvaluator.direction": {"fullname": "icepool.OutcomeCountEvaluator.direction", "modulename": "icepool", "qualname": "OutcomeCountEvaluator.direction", "type": "function", "doc": "<p>Optional function to determine the direction in which <code>next_state()</code> will see outcomes.</p>\n\n<p>There is no expectation that a subclass be able to handle\nan arbitrary number of generators. Thus, you are free to rename any of\nthe parameters in a subclass, or to replace <code>*generators</code> with a fixed\nset of parameters.</p>\n\n<p>The default is ascending order. This works well with mixed standard dice,\nand other dice that differ only by right-truncation.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>*generators:</strong>  One or more <code>OutcomeCountGenerator</code>s being evaluated.\nMost subclasses will expect a fixed number of generators and\ncan replace this variadic parameter with a fixed number of named\nparameters.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <ul>\n  <li>&gt; 0 if <code>next_state()</code> should always see the outcomes in ascending order.</li>\n  <li>&lt; 0 if <code>next_state()</code> should always see the outcomes in descending order.</li>\n  <li>0 if the order may be determined automatically.</li>\n  </ul>\n</blockquote>\n", "signature": "(\n    self,\n    *generators: icepool.outcome_count_generator.OutcomeCountGenerator\n) -> int", "funcdef": "def"}, "icepool.OutcomeCountEvaluator.alignment": {"fullname": "icepool.OutcomeCountEvaluator.alignment", "modulename": "icepool", "qualname": "OutcomeCountEvaluator.alignment", "type": "function", "doc": "<p>Optional function to specify an collection of outcomes that should always be given to <code>next_state()</code> even if they have zero count.</p>\n\n<p>There is no expectation that a subclass be able to handle\nan arbitrary number of generators. Thus, you are free to rename any of\nthe parameters in a subclass, or to replace <code>*generators</code> with a fixed\nset of parameters.</p>\n\n<p>The default implementation returns <code>()</code>; this means outcomes with zero\ncount may or may not be seen by <code>next_state</code>.</p>\n\n<p>If you want the outcomes seen by <code>next_state</code> to be consecutive\n<code>int</code>s, you can set <code>alignment = icepool.OutcomeCountEvaluator.range_alignment</code>.\nSee <code>range_alignment()</code> below.</p>\n", "signature": "(\n    self,\n    *generators: icepool.outcome_count_generator.OutcomeCountGenerator\n) -> Collection", "funcdef": "def"}, "icepool.OutcomeCountEvaluator.range_alignment": {"fullname": "icepool.OutcomeCountEvaluator.range_alignment", "modulename": "icepool", "qualname": "OutcomeCountEvaluator.range_alignment", "type": "function", "doc": "<p>Example implementation of <code>alignment()</code> that produces consecutive <code>int</code> outcomes.</p>\n\n<p>There is no expectation that a subclass be able to handle\nan arbitrary number of generators. Thus, you are free to rename any of\nthe parameters in a subclass, or to replace <code>*generators</code> with a fixed\nset of parameters.</p>\n\n<p>Set <code>alignment = icepool.OutcomeCountEvaluator.range_alignment</code> to use this.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>All <code>int</code>s from the min outcome to the max outcome among the generators,\n  inclusive.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>TypeError:</strong>  if any generator has any non-<code>int</code> outcome.</li>\n</ul>\n", "signature": "(\n    self,\n    *generators: icepool.outcome_count_generator.OutcomeCountGenerator\n) -> Collection[int]", "funcdef": "def"}, "icepool.OutcomeCountEvaluator.evaluate": {"fullname": "icepool.OutcomeCountEvaluator.evaluate", "modulename": "icepool", "qualname": "OutcomeCountEvaluator.evaluate", "type": "function", "doc": "<p>Evaluates generator(s).</p>\n\n<p>You can call the <code>OutcomeCountEvaluator</code> object directly for the same effect,\ne.g. <code>evaluate_sum(generator)</code> is an alias for <code>evaluate_sum.evaluate(generator)</code>.</p>\n\n<p>Most evaluators will expect a fixed number of generators.\nThe union of the outcomes of the generator(s) must be totally orderable.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>*generators:</strong>  Each element may be one of the following:\n<ul>\n<li>A <code>OutcomeCountGenerator</code>.</li>\n<li>A mappable mapping dice to the number of those dice.</li>\n<li>A sequence of arguments to create a <code>Pool</code>.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A <code>Die</code> representing the distribution of the final score.</p>\n</blockquote>\n", "signature": "(\n    self,\n    *generators: Union[icepool.outcome_count_generator.OutcomeCountGenerator, Mapping[Any, int], Sequence]\n) -> icepool.die.die.Die", "funcdef": "def"}, "icepool.OutcomeCountEvaluator.sample": {"fullname": "icepool.OutcomeCountEvaluator.sample", "modulename": "icepool", "qualname": "OutcomeCountEvaluator.sample", "type": "function", "doc": "<p>EXPERIMENTAL: Samples one result from the generator(s) and evaluates the result.</p>\n", "signature": "(\n    self,\n    *generators: Union[icepool.outcome_count_generator.OutcomeCountGenerator, Mapping[Any, int], Sequence]\n)", "funcdef": "def"}, "icepool.JointEvaluator": {"fullname": "icepool.JointEvaluator", "modulename": "icepool", "qualname": "JointEvaluator", "type": "class", "doc": "<p>EXPERIMENTAL: An <code>OutcomeCountEvaluator</code> that jointly evaluates sub-evaluators on the same roll(s) of a generator.</p>\n\n<p>It may be more efficient to write the joint evaluation directly; this is\nprovided as a convenience.</p>\n", "bases": "icepool.outcome_count_evaluator.OutcomeCountEvaluator"}, "icepool.JointEvaluator.__init__": {"fullname": "icepool.JointEvaluator.__init__", "modulename": "icepool", "qualname": "JointEvaluator.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    *sub_evaluators: icepool.outcome_count_evaluator.OutcomeCountEvaluator\n)", "funcdef": "def"}, "icepool.JointEvaluator.next_state": {"fullname": "icepool.JointEvaluator.next_state", "modulename": "icepool", "qualname": "JointEvaluator.next_state", "type": "function", "doc": "<p>Runs <code>next_state</code> for all subevals.</p>\n\n<p>The state is a tuple of the substates.</p>\n", "signature": "(self, state, outcome, *counts: int) -> tuple[typing.Hashable, ...]", "funcdef": "def"}, "icepool.JointEvaluator.final_outcome": {"fullname": "icepool.JointEvaluator.final_outcome", "modulename": "icepool", "qualname": "JointEvaluator.final_outcome", "type": "function", "doc": "<p>Runs <code>final_state</code> for all subevals.</p>\n\n<p>The final outcome is a tuple of the final suboutcomes.</p>\n", "signature": "(\n    self,\n    final_state,\n    *generators: icepool.outcome_count_generator.OutcomeCountGenerator\n)", "funcdef": "def"}, "icepool.JointEvaluator.direction": {"fullname": "icepool.JointEvaluator.direction", "modulename": "icepool", "qualname": "JointEvaluator.direction", "type": "function", "doc": "<p>Determines the common direction of the subevals.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  If subevals have conflicting directions, i.e. some are\nascending and others are descending.</li>\n</ul>\n", "signature": "(\n    self,\n    *generators: icepool.outcome_count_generator.OutcomeCountGenerator\n) -> int", "funcdef": "def"}, "icepool.EvaluateSum": {"fullname": "icepool.EvaluateSum", "modulename": "icepool", "qualname": "EvaluateSum", "type": "class", "doc": "<p>A simple <code>OutcomeCountEvaluator</code> that just sums the outcomes in a generator.</p>\n", "bases": "icepool.outcome_count_evaluator.OutcomeCountEvaluator"}, "icepool.EvaluateSum.__init__": {"fullname": "icepool.EvaluateSum.__init__", "modulename": "icepool", "qualname": "EvaluateSum.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "icepool.EvaluateSum.next_state": {"fullname": "icepool.EvaluateSum.next_state", "modulename": "icepool", "qualname": "EvaluateSum.next_state", "type": "function", "doc": "<p>Add the outcomes to the running total.</p>\n", "signature": "(self, state, outcome, count)", "funcdef": "def"}, "icepool.EvaluateSum.final_outcome": {"fullname": "icepool.EvaluateSum.final_outcome", "modulename": "icepool", "qualname": "EvaluateSum.final_outcome", "type": "function", "doc": "<p>Optional function to generate a final outcome from a final state.</p>\n\n<p>Tthere is no expectation that a subclass be able to handle\nan arbitrary number of generators. Thus, you are free to rename any of\nthe parameters in a subclass, or to replace <code>*generators</code> with a fixed\nset of parameters.</p>\n\n<p>By default, the final outcome is equal to the final state.\nNote that <code>None</code> is not a valid outcome for a <code>Die</code>,\nand if there are no outcomes, the final state will be <code>None</code>.\nSubclasses that want to handle this case should explicitly define what\nhappens.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>final_state:</strong>  A state after all outcomes have been processed.</li>\n<li><strong>*generators:</strong>  One or more <code>OutcomeCountGenerator</code>s being evaluated.\nMost subclasses will expect a fixed number of generators and\ncan replace this variadic parameter with a fixed number of named\nparameters.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A final outcome that will be used as part of constructing the result <code>Die</code>.\n  As usual for <code>Die()</code>, this could itself be a <code>Die</code> or <code>icepool.Reroll</code>.</p>\n</blockquote>\n", "signature": "(self, final_state, *_)", "funcdef": "def"}, "icepool.EvaluateSum.direction": {"fullname": "icepool.EvaluateSum.direction", "modulename": "icepool", "qualname": "EvaluateSum.direction", "type": "function", "doc": "<p>This evaluator doesn't care about direction.</p>\n", "signature": "(self, *_)", "funcdef": "def"}, "icepool.Deck": {"fullname": "icepool.Deck", "modulename": "icepool", "qualname": "Deck", "type": "class", "doc": "<p>EXPERIMENTAL: Sampling without replacement (within a single evaluation).</p>\n\n<p>Quantities represent duplicates.</p>\n", "bases": "abc.ABC, typing.Mapping[typing.Any, int]"}, "icepool.Deck.__init__": {"fullname": "icepool.Deck.__init__", "modulename": "icepool", "qualname": "Deck.__init__", "type": "function", "doc": "<p>Constructor for a <code>Deck</code>.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><p><strong>outcomes:</strong>  The cards of the <code>Deck</code>. This can be one of the following:</p>\n\n<ul>\n<li>A <code>Mapping</code> from outcomes to quantities.</li>\n<li>A sequence of outcomes.</li>\n</ul>\n\n<p>Note that <code>Die</code> and <code>Deck</code> both count as <code>Mapping</code>s.</p>\n\n<p>Each card may be one of the following:</p>\n\n<ul>\n<li>A <code>Mapping</code> from outcomes to quantities.\nThe outcomes of the <code>Mapping</code> will be \"flattened\" into the\nresult. This option will be taken in preference to treating\nthe <code>Mapping</code> itself as an outcome even if the <code>Mapping</code>\nitself is hashable and totally orderable. This means that\n<code>Die</code> and <code>Deck</code> will never be outcomes.</li>\n<li>A tuple of outcomes.\nAny tuple elements that are <code>Mapping</code>s will expand the\ntuple according to their independent joint distribution.\nFor example, <code>(d6, d6)</code> will expand to 36 ordered tuples\nwith dup 1 each. Use this carefully since it may create a\nlarge number of outcomes.</li>\n<li>Anything else will be treated as a single outcome.\nEach outcome must be hashable, and the\nset of outcomes must be totally orderable (after expansion).\nThe same outcome can appear multiple times, in which case\nthe corresponding quantities will be accumulated.</li>\n</ul></li>\n<li><strong>times:</strong>  Multiplies the number of times each element of <code>outcomes</code>\nwill be put into the <code>Deck</code>.\n<code>times</code> can either be a sequence of the same length as\n<code>outcomes</code> or a single <code>int</code> to apply to all elements of\n<code>outcomes</code>.</li>\n</ul>\n", "signature": "(\n    cls,\n    outcomes: Union[Mapping[Any, int], Sequence],\n    times: Union[Sequence[int], int] = 1\n)", "funcdef": "def"}, "icepool.Deck.unary_op_non_elementwise": {"fullname": "icepool.Deck.unary_op_non_elementwise", "modulename": "icepool", "qualname": "Deck.unary_op_non_elementwise", "type": "function", "doc": "<p>As <code>unary_op()</code>, but not elementwise.</p>\n\n<p>This is used for <code>marginals()</code>.</p>\n", "signature": "(self, op: Callable, *args, **kwargs) -> icepool.deck.Deck", "funcdef": "def"}, "icepool.Deck.keys": {"fullname": "icepool.Deck.keys", "modulename": "icepool", "qualname": "Deck.keys", "type": "function", "doc": "<p>The outcomes within the population in sorted order.</p>\n", "signature": "(self) -> icepool.counts.CountsKeysView", "funcdef": "def"}, "icepool.Deck.values": {"fullname": "icepool.Deck.values", "modulename": "icepool", "qualname": "Deck.values", "type": "function", "doc": "<p>The quantities within the population in outcome order.</p>\n", "signature": "(self) -> icepool.counts.CountsValuesView", "funcdef": "def"}, "icepool.Deck.items": {"fullname": "icepool.Deck.items", "modulename": "icepool", "qualname": "Deck.items", "type": "function", "doc": "<p>The (outcome, quantity)s of the population in sorted order.</p>\n", "signature": "(self) -> icepool.counts.CountsItemsView", "funcdef": "def"}, "icepool.Deck.size": {"fullname": "icepool.Deck.size", "modulename": "icepool", "qualname": "Deck.size", "type": "function", "doc": "<p>The sum of all quantities (e.g. weights or duplicates).</p>\n\n<p>For the number of unique outcomes, including those with zero quantity,\nuse <code>len()</code>.</p>\n", "signature": "(self) -> int", "funcdef": "def"}, "icepool.Deck.deal": {"fullname": "icepool.Deck.deal", "modulename": "icepool", "qualname": "Deck.deal", "type": "function", "doc": "<p>Creates a <code>Deal</code> object from this deck.</p>\n\n<p>See <code>Deal()</code> for details.</p>\n", "signature": "(self, *hand_sizes: int) -> icepool.deal.Deal", "funcdef": "def"}, "icepool.Deck.marginals": {"fullname": "icepool.Deck.marginals", "modulename": "icepool", "qualname": "Deck.marginals", "type": "variable", "doc": "<p>A property that applies the <code>[]</code> operator to outcomes.</p>\n\n<p>This is not performed elementwise on tuples, so that this can be used\nto slice tuples. For example, <code>deck.marginals[:2]</code> will marginalize the\nfirst two elements of tuples.</p>\n"}, "icepool.Deal": {"fullname": "icepool.Deal", "modulename": "icepool", "qualname": "Deal", "type": "class", "doc": "<p>EXPERIMENTAL: Represents an sorted/unordered deal of cards from a <code>Deck</code>.</p>\n", "bases": "icepool.outcome_count_generator.OutcomeCountGenerator"}, "icepool.Deal.__init__": {"fullname": "icepool.Deal.__init__", "modulename": "icepool", "qualname": "Deal.__init__", "type": "function", "doc": "<p>Constructor.</p>\n\n<p>For algorithmic reasons, you must pre-commit to the number of cards to\ndeal for each hand.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>deck:</strong>  The <code>Deck</code> to deal from.</li>\n<li><strong>*hand_sizes:</strong>  How many cards to deal. If multiple <code>hand_sizes</code> are\nprovided, <code>OutcomeCountEvaluator.next_state</code> will recieve one count\nper hand in order. Try to keep the number of hands to a minimum\nas this can be computationally intensive.</li>\n</ul>\n", "signature": "(self, deck: icepool.deck.Deck, *hand_sizes: int)", "funcdef": "def"}, "icepool.Deal.deck": {"fullname": "icepool.Deal.deck", "modulename": "icepool", "qualname": "Deal.deck", "type": "function", "doc": "<p>The <code>Deck</code> the cards are dealt from.</p>\n", "signature": "(self) -> icepool.deck.Deck", "funcdef": "def"}, "icepool.Deal.hand_sizes": {"fullname": "icepool.Deal.hand_sizes", "modulename": "icepool", "qualname": "Deal.hand_sizes", "type": "function", "doc": "<p>The number of cards dealt to each hand as a tuple.</p>\n", "signature": "(self) -> tuple[int, ...]", "funcdef": "def"}, "icepool.Deal.total_cards_dealt": {"fullname": "icepool.Deal.total_cards_dealt", "modulename": "icepool", "qualname": "Deal.total_cards_dealt", "type": "function", "doc": "<p>The total number of cards dealt.</p>\n", "signature": "(self) -> int", "funcdef": "def"}, "icepool.Deal.outcomes": {"fullname": "icepool.Deal.outcomes", "modulename": "icepool", "qualname": "Deal.outcomes", "type": "function", "doc": "<p>The outcomes of the <code>Deck</code> in sorted order.</p>\n\n<p>These are also the <code>keys</code> of the <code>Deck</code> as a <code>Mapping</code>.\nPrefer to use the name <code>outcomes</code>.</p>\n", "signature": "(self) -> icepool.counts.CountsKeysView", "funcdef": "def"}, "icepool.Deal.denominator": {"fullname": "icepool.Deal.denominator", "modulename": "icepool", "qualname": "Deal.denominator", "type": "function", "doc": "<p>The total weight of all paths through this generator.</p>\n", "signature": "(self) -> int", "funcdef": "def"}, "icepool.clear_pool_cache": {"fullname": "icepool.clear_pool_cache", "modulename": "icepool", "qualname": "clear_pool_cache", "type": "function", "doc": "<p>Clears the global pool cache.</p>\n", "signature": "()", "funcdef": "def"}}, "docInfo": {"icepool": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 115}, "icepool.standard": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 75}, "icepool.d": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 75}, "icepool.bernoulli": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 49}, "icepool.coin": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 49}, "icepool.Die": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 206}, "icepool.Die.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 778}, "icepool.Die.unary_op": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 157}, "icepool.Die.unary_op_non_elementwise": {"qualname": 5, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 23}, "icepool.Die.binary_op": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 274}, "icepool.Die.keys": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 11}, "icepool.Die.values": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 11}, "icepool.Die.items": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 13}, "icepool.Die.reduce": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 11}, "icepool.Die.reroll": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 227}, "icepool.Die.reroll_until": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 232}, "icepool.Die.truncate": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 89}, "icepool.Die.clip": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 91}, "icepool.Die.set_range": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 78}, "icepool.Die.set_outcomes": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 41}, "icepool.Die.trim": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 8}, "icepool.Die.sub": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 312}, "icepool.Die.explode": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 206}, "icepool.Die.if_else": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 24}, "icepool.Die.pool": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 40}, "icepool.Die.keep_lowest": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 98}, "icepool.Die.keep_highest": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 87}, "icepool.Die.abs": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "icepool.Die.round": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 3}, "icepool.Die.trunc": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "icepool.Die.floor": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "icepool.Die.ceil": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "icepool.Die.marginals": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 47}, "icepool.Die.zero": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 63}, "icepool.Die.zero_outcome": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 28}, "icepool.Die.cmp": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 54}, "icepool.Die.sign": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 42}, "icepool.Die.bool": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 48}, "icepool.Die.key_tuple": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 40}, "icepool.Die.equals": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 191}, "icepool.Population": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 37}, "icepool.Population.keys": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 11}, "icepool.Population.values": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 11}, "icepool.Population.items": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 13}, "icepool.Population.marginals": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 47}, "icepool.Population.outcomes": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 30}, "icepool.Population.outcome_len": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 30}, "icepool.Population.is_empty": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 12}, "icepool.Population.min_outcome": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 6}, "icepool.Population.max_outcome": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 6}, "icepool.Population.nearest_le": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 24}, "icepool.Population.nearest_ge": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 24}, "icepool.Population.quantities": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 32}, "icepool.Population.denominator": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 32}, "icepool.Population.has_zero_quantities": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 18}, "icepool.Population.quantities_le": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 10}, "icepool.Population.quantities_ge": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 10}, "icepool.Population.quantity": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 14}, "icepool.Population.quantity_ne": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 9}, "icepool.Population.quantity_le": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 9}, "icepool.Population.quantity_lt": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 9}, "icepool.Population.quantity_ge": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 9}, "icepool.Population.quantity_gt": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 9}, "icepool.Population.probabilities": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 55}, "icepool.Population.probabilities_le": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 68}, "icepool.Population.probabilities_ge": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 74}, "icepool.Population.probability": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 15}, "icepool.Population.mode": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 24}, "icepool.Population.modal_quantity": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 10}, "icepool.Population.kolmogorov_smirnov": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 11}, "icepool.Population.cramer_von_mises": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 14}, "icepool.Population.median": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 40}, "icepool.Population.median_left": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 13}, "icepool.Population.median_right": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 13}, "icepool.Population.quantile": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 51}, "icepool.Population.quantile_left": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 24}, "icepool.Population.quantile_right": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 24}, "icepool.Population.mean": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "icepool.Population.variance": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 12}, "icepool.Population.standard_deviation": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "icepool.Population.sd": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "icepool.Population.standardized_moment": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 3}, "icepool.Population.skewness": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "icepool.Population.excess_kurtosis": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "icepool.Population.covariance": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "icepool.Population.correlation": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "icepool.Population.sample": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 45}, "icepool.Population.format": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 188}, "icepool.CountsKeysView": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 16}, "icepool.CountsKeysView.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "icepool.CountsValuesView": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 16}, "icepool.CountsValuesView.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "icepool.CountsItemsView": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 8, "doc": 16}, "icepool.CountsItemsView.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "icepool.from_cumulative_quantities": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 87}, "icepool.from_rv": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 111}, "icepool.align": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 51}, "icepool.align_range": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 55}, "icepool.lowest": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 76}, "icepool.highest": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 76}, "icepool.min_outcome": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 9}, "icepool.max_outcome": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 9}, "icepool.reduce": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 110}, "icepool.accumulate": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 158}, "icepool.apply": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 277}, "icepool.apply_sorted": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 152}, "icepool.Reroll": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 3, "signature": 0, "bases": 0, "doc": 13}, "icepool.OutcomeCountGenerator": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 45}, "icepool.OutcomeCountGenerator.outcomes": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 10}, "icepool.OutcomeCountGenerator.denominator": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 12}, "icepool.OutcomeCountGenerator.evaluate": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 126}, "icepool.OutcomeCountGenerator.min_outcome": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "icepool.OutcomeCountGenerator.max_outcome": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "icepool.OutcomeCountGenerator.sum": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 40}, "icepool.OutcomeCountGenerator.sample": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 48}, "icepool.Pool": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 33}, "icepool.Pool.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 219}, "icepool.Pool.size": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 18}, "icepool.Pool.denominator": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 12}, "icepool.Pool.unique_dice": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 11}, "icepool.Pool.outcomes": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 13}, "icepool.Pool.post_roll_counts": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 35}, "icepool.Pool.set_post_roll_counts": {"qualname": 5, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 722}, "icepool.Pool.min_outcome": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 12}, "icepool.Pool.max_outcome": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 12}, "icepool.Pool.lowest": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 71}, "icepool.Pool.highest": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 71}, "icepool.standard_pool": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 43}, "icepool.OutcomeCountEvaluator": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 272}, "icepool.OutcomeCountEvaluator.next_state": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 356}, "icepool.OutcomeCountEvaluator.final_outcome": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 217}, "icepool.OutcomeCountEvaluator.direction": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 192}, "icepool.OutcomeCountEvaluator.alignment": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 137}, "icepool.OutcomeCountEvaluator.range_alignment": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 124}, "icepool.OutcomeCountEvaluator.evaluate": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 144}, "icepool.OutcomeCountEvaluator.sample": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 15}, "icepool.JointEvaluator": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 41}, "icepool.JointEvaluator.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 3}, "icepool.JointEvaluator.next_state": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 22}, "icepool.JointEvaluator.final_outcome": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 24}, "icepool.JointEvaluator.direction": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 37}, "icepool.EvaluateSum": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 16}, "icepool.EvaluateSum.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "icepool.EvaluateSum.next_state": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 10}, "icepool.EvaluateSum.final_outcome": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 217}, "icepool.EvaluateSum.direction": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 10}, "icepool.Deck": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 17}, "icepool.Deck.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 313}, "icepool.Deck.unary_op_non_elementwise": {"qualname": 5, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 23}, "icepool.Deck.keys": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 11}, "icepool.Deck.values": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 11}, "icepool.Deck.items": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 13}, "icepool.Deck.size": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 32}, "icepool.Deck.deal": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 22}, "icepool.Deck.marginals": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 47}, "icepool.Deal": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 15}, "icepool.Deal.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 93}, "icepool.Deal.deck": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 12}, "icepool.Deal.hand_sizes": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 14}, "icepool.Deal.total_cards_dealt": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 9}, "icepool.Deal.outcomes": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 41}, "icepool.Deal.denominator": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 12}, "icepool.clear_pool_cache": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 8}}, "length": 163, "save": true}, "index": {"qualname": {"root": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.CountsKeysView.__init__": {"tf": 1}, "icepool.CountsValuesView.__init__": {"tf": 1}, "icepool.CountsItemsView.__init__": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.JointEvaluator.__init__": {"tf": 1}, "icepool.EvaluateSum.__init__": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}, "icepool.Deal.__init__": {"tf": 1}}, "df": 9, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"icepool.standard": {"tf": 1}, "icepool.Population.standard_deviation": {"tf": 1}, "icepool.standard_pool": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Population.standardized_moment": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.JointEvaluator.next_state": {"tf": 1}, "icepool.EvaluateSum.next_state": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die.set_range": {"tf": 1}, "icepool.Die.set_outcomes": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 3}}, "u": {"docs": {}, "df": 0, "b": {"docs": {"icepool.Die.sub": {"tf": 1}}, "df": 1}, "m": {"docs": {"icepool.OutcomeCountGenerator.sum": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Die.sign": {"tf": 1}}, "df": 1}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Pool.size": {"tf": 1}, "icepool.Deck.size": {"tf": 1}}, "df": 2, "s": {"docs": {"icepool.Deal.hand_sizes": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {"icepool.Population.kolmogorov_smirnov": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {"icepool.Population.sd": {"tf": 1}}, "df": 1}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Population.skewness": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Population.sample": {"tf": 1}, "icepool.OutcomeCountGenerator.sample": {"tf": 1}, "icepool.OutcomeCountEvaluator.sample": {"tf": 1}}, "df": 3}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.apply_sorted": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {"icepool.d": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Die.__init__": {"tf": 1}, "icepool.Die.unary_op": {"tf": 1}, "icepool.Die.unary_op_non_elementwise": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Die.keys": {"tf": 1}, "icepool.Die.values": {"tf": 1}, "icepool.Die.items": {"tf": 1}, "icepool.Die.reduce": {"tf": 1}, "icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.truncate": {"tf": 1}, "icepool.Die.clip": {"tf": 1}, "icepool.Die.set_range": {"tf": 1}, "icepool.Die.set_outcomes": {"tf": 1}, "icepool.Die.trim": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.explode": {"tf": 1}, "icepool.Die.if_else": {"tf": 1}, "icepool.Die.pool": {"tf": 1}, "icepool.Die.keep_lowest": {"tf": 1}, "icepool.Die.keep_highest": {"tf": 1}, "icepool.Die.abs": {"tf": 1}, "icepool.Die.round": {"tf": 1}, "icepool.Die.trunc": {"tf": 1}, "icepool.Die.floor": {"tf": 1}, "icepool.Die.ceil": {"tf": 1}, "icepool.Die.marginals": {"tf": 1}, "icepool.Die.zero": {"tf": 1}, "icepool.Die.zero_outcome": {"tf": 1}, "icepool.Die.cmp": {"tf": 1}, "icepool.Die.sign": {"tf": 1}, "icepool.Die.bool": {"tf": 1}, "icepool.Die.key_tuple": {"tf": 1}, "icepool.Die.equals": {"tf": 1}}, "df": 35}, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Pool.unique_dice": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.JointEvaluator.direction": {"tf": 1}, "icepool.EvaluateSum.direction": {"tf": 1}}, "df": 3}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Population.denominator": {"tf": 1}, "icepool.OutcomeCountGenerator.denominator": {"tf": 1}, "icepool.Pool.denominator": {"tf": 1}, "icepool.Deal.denominator": {"tf": 1}}, "df": 4}}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Population.standard_deviation": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"icepool.Deck": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}, "icepool.Deck.unary_op_non_elementwise": {"tf": 1}, "icepool.Deck.keys": {"tf": 1}, "icepool.Deck.values": {"tf": 1}, "icepool.Deck.items": {"tf": 1}, "icepool.Deck.size": {"tf": 1}, "icepool.Deck.deal": {"tf": 1}, "icepool.Deck.marginals": {"tf": 1}, "icepool.Deal.deck": {"tf": 1}}, "df": 10}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Deck.deal": {"tf": 1}, "icepool.Deal": {"tf": 1}, "icepool.Deal.__init__": {"tf": 1}, "icepool.Deal.deck": {"tf": 1}, "icepool.Deal.hand_sizes": {"tf": 1}, "icepool.Deal.total_cards_dealt": {"tf": 1}, "icepool.Deal.outcomes": {"tf": 1}, "icepool.Deal.denominator": {"tf": 1}}, "df": 8, "t": {"docs": {"icepool.Deal.total_cards_dealt": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"icepool.bernoulli": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Die.binary_op": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Die.bool": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"icepool.coin": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Population.covariance": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Population.correlation": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Pool.post_roll_counts": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 2, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"icepool.CountsKeysView": {"tf": 1}, "icepool.CountsKeysView.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"icepool.CountsValuesView": {"tf": 1}, "icepool.CountsValuesView.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"icepool.CountsItemsView": {"tf": 1}, "icepool.CountsItemsView.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"icepool.Die.clip": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"icepool.clear_pool_cache": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Die.ceil": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"icepool.Die.cmp": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Population.cramer_von_mises": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"icepool.from_cumulative_quantities": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Deal.total_cards_dealt": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"icepool.clear_pool_cache": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.CountsKeysView.__init__": {"tf": 1}, "icepool.CountsValuesView.__init__": {"tf": 1}, "icepool.CountsItemsView.__init__": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.JointEvaluator.__init__": {"tf": 1}, "icepool.EvaluateSum.__init__": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}, "icepool.Deal.__init__": {"tf": 1}}, "df": 9}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Die.items": {"tf": 1}, "icepool.Population.items": {"tf": 1}, "icepool.Deck.items": {"tf": 1}}, "df": 3}}}}, "f": {"docs": {"icepool.Die.if_else": {"tf": 1}}, "df": 1}, "s": {"docs": {"icepool.Population.is_empty": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Die.unary_op": {"tf": 1}, "icepool.Die.unary_op_non_elementwise": {"tf": 1}, "icepool.Deck.unary_op_non_elementwise": {"tf": 1}}, "df": 3}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Die.reroll_until": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Pool.unique_dice": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"icepool.Die.unary_op": {"tf": 1}, "icepool.Die.unary_op_non_elementwise": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Deck.unary_op_non_elementwise": {"tf": 1}}, "df": 4}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.zero_outcome": {"tf": 1}, "icepool.Population.outcome_len": {"tf": 1}, "icepool.Population.min_outcome": {"tf": 1}, "icepool.Population.max_outcome": {"tf": 1}, "icepool.min_outcome": {"tf": 1}, "icepool.max_outcome": {"tf": 1}, "icepool.OutcomeCountGenerator.min_outcome": {"tf": 1}, "icepool.OutcomeCountGenerator.max_outcome": {"tf": 1}, "icepool.Pool.min_outcome": {"tf": 1}, "icepool.Pool.max_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.JointEvaluator.final_outcome": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 13, "s": {"docs": {"icepool.Die.set_outcomes": {"tf": 1}, "icepool.Population.outcomes": {"tf": 1}, "icepool.OutcomeCountGenerator.outcomes": {"tf": 1}, "icepool.Pool.outcomes": {"tf": 1}, "icepool.Deal.outcomes": {"tf": 1}}, "df": 5}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.OutcomeCountGenerator": {"tf": 1}, "icepool.OutcomeCountGenerator.outcomes": {"tf": 1}, "icepool.OutcomeCountGenerator.denominator": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1}, "icepool.OutcomeCountGenerator.min_outcome": {"tf": 1}, "icepool.OutcomeCountGenerator.max_outcome": {"tf": 1}, "icepool.OutcomeCountGenerator.sum": {"tf": 1}, "icepool.OutcomeCountGenerator.sample": {"tf": 1}}, "df": 8}}}}}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.OutcomeCountEvaluator": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.OutcomeCountEvaluator.sample": {"tf": 1}}, "df": 8}}}}}}}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Die.unary_op_non_elementwise": {"tf": 1}, "icepool.Deck.unary_op_non_elementwise": {"tf": 1}}, "df": 2}}, "e": {"docs": {"icepool.Population.quantity_ne": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Population.nearest_le": {"tf": 1}, "icepool.Population.nearest_ge": {"tf": 1}}, "df": 2}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.JointEvaluator.next_state": {"tf": 1}, "icepool.EvaluateSum.next_state": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.unary_op_non_elementwise": {"tf": 1}, "icepool.Deck.unary_op_non_elementwise": {"tf": 1}}, "df": 2}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.if_else": {"tf": 1}}, "df": 1}}}, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.explode": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Population.excess_kurtosis": {"tf": 1}}, "df": 1}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Die.equals": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Population.is_empty": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"icepool.OutcomeCountGenerator.evaluate": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"icepool.EvaluateSum": {"tf": 1}, "icepool.EvaluateSum.__init__": {"tf": 1}, "icepool.EvaluateSum.next_state": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}, "icepool.EvaluateSum.direction": {"tf": 1}}, "df": 5}}}}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Die.key_tuple": {"tf": 1}}, "df": 1, "s": {"docs": {"icepool.Die.keys": {"tf": 1}, "icepool.Population.keys": {"tf": 1}, "icepool.Deck.keys": {"tf": 1}}, "df": 3}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"icepool.Die.keep_lowest": {"tf": 1}, "icepool.Die.keep_highest": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {"icepool.Population.kolmogorov_smirnov": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Population.excess_kurtosis": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Die.values": {"tf": 1}, "icepool.Population.values": {"tf": 1}, "icepool.Deck.values": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Population.variance": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Population.cramer_von_mises": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.reduce": {"tf": 1}, "icepool.reduce": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Reroll": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.set_range": {"tf": 1}, "icepool.align_range": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.round": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Pool.post_roll_counts": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Population.median_right": {"tf": 1}, "icepool.Population.quantile_right": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {"icepool.from_rv": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"icepool.Die.trunc": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.truncate": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {"icepool.Die.trim": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.key_tuple": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Deal.total_cards_dealt": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Die.pool": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.Pool.size": {"tf": 1}, "icepool.Pool.denominator": {"tf": 1}, "icepool.Pool.unique_dice": {"tf": 1}, "icepool.Pool.outcomes": {"tf": 1}, "icepool.Pool.post_roll_counts": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.Pool.min_outcome": {"tf": 1}, "icepool.Pool.max_outcome": {"tf": 1}, "icepool.Pool.lowest": {"tf": 1}, "icepool.Pool.highest": {"tf": 1}, "icepool.standard_pool": {"tf": 1}, "icepool.clear_pool_cache": {"tf": 1}}, "df": 15}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Population": {"tf": 1}, "icepool.Population.keys": {"tf": 1}, "icepool.Population.values": {"tf": 1}, "icepool.Population.items": {"tf": 1}, "icepool.Population.marginals": {"tf": 1}, "icepool.Population.outcomes": {"tf": 1}, "icepool.Population.outcome_len": {"tf": 1}, "icepool.Population.is_empty": {"tf": 1}, "icepool.Population.min_outcome": {"tf": 1}, "icepool.Population.max_outcome": {"tf": 1}, "icepool.Population.nearest_le": {"tf": 1}, "icepool.Population.nearest_ge": {"tf": 1}, "icepool.Population.quantities": {"tf": 1}, "icepool.Population.denominator": {"tf": 1}, "icepool.Population.has_zero_quantities": {"tf": 1}, "icepool.Population.quantities_le": {"tf": 1}, "icepool.Population.quantities_ge": {"tf": 1}, "icepool.Population.quantity": {"tf": 1}, "icepool.Population.quantity_ne": {"tf": 1}, "icepool.Population.quantity_le": {"tf": 1}, "icepool.Population.quantity_lt": {"tf": 1}, "icepool.Population.quantity_ge": {"tf": 1}, "icepool.Population.quantity_gt": {"tf": 1}, "icepool.Population.probabilities": {"tf": 1}, "icepool.Population.probabilities_le": {"tf": 1}, "icepool.Population.probabilities_ge": {"tf": 1}, "icepool.Population.probability": {"tf": 1}, "icepool.Population.mode": {"tf": 1}, "icepool.Population.modal_quantity": {"tf": 1}, "icepool.Population.kolmogorov_smirnov": {"tf": 1}, "icepool.Population.cramer_von_mises": {"tf": 1}, "icepool.Population.median": {"tf": 1}, "icepool.Population.median_left": {"tf": 1}, "icepool.Population.median_right": {"tf": 1}, "icepool.Population.quantile": {"tf": 1}, "icepool.Population.quantile_left": {"tf": 1}, "icepool.Population.quantile_right": {"tf": 1}, "icepool.Population.mean": {"tf": 1}, "icepool.Population.variance": {"tf": 1}, "icepool.Population.standard_deviation": {"tf": 1}, "icepool.Population.sd": {"tf": 1}, "icepool.Population.standardized_moment": {"tf": 1}, "icepool.Population.skewness": {"tf": 1}, "icepool.Population.excess_kurtosis": {"tf": 1}, "icepool.Population.covariance": {"tf": 1}, "icepool.Population.correlation": {"tf": 1}, "icepool.Population.sample": {"tf": 1}, "icepool.Population.format": {"tf": 1}}, "df": 48}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Pool.post_roll_counts": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Population.probabilities": {"tf": 1}, "icepool.Population.probabilities_le": {"tf": 1}, "icepool.Population.probabilities_ge": {"tf": 1}}, "df": 3}}}, "y": {"docs": {"icepool.Population.probability": {"tf": 1}}, "df": 1}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die.keep_lowest": {"tf": 1}, "icepool.lowest": {"tf": 1}, "icepool.Pool.lowest": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {"icepool.Population.nearest_le": {"tf": 1}, "icepool.Population.quantities_le": {"tf": 1}, "icepool.Population.quantity_le": {"tf": 1}, "icepool.Population.probabilities_le": {"tf": 1}}, "df": 4, "n": {"docs": {"icepool.Population.outcome_len": {"tf": 1}}, "df": 1}, "f": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Population.median_left": {"tf": 1}, "icepool.Population.quantile_left": {"tf": 1}}, "df": 2}}}, "t": {"docs": {"icepool.Population.quantity_lt": {"tf": 1}}, "df": 1}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die.keep_highest": {"tf": 1}, "icepool.highest": {"tf": 1}, "icepool.Pool.highest": {"tf": 1}}, "df": 3}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Population.has_zero_quantities": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Deal.hand_sizes": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Die.abs": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"icepool.align": {"tf": 1}, "icepool.align_range": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}}, "df": 2}}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"icepool.accumulate": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.apply": {"tf": 1}, "icepool.apply_sorted": {"tf": 1}}, "df": 2}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Die.floor": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Population.format": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"icepool.from_cumulative_quantities": {"tf": 1}, "icepool.from_rv": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.JointEvaluator.final_outcome": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 3}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Die.marginals": {"tf": 1}, "icepool.Population.marginals": {"tf": 1}, "icepool.Deck.marginals": {"tf": 1}}, "df": 3}}}}}}}, "x": {"docs": {"icepool.Population.max_outcome": {"tf": 1}, "icepool.max_outcome": {"tf": 1}, "icepool.OutcomeCountGenerator.max_outcome": {"tf": 1}, "icepool.Pool.max_outcome": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Population.min_outcome": {"tf": 1}, "icepool.min_outcome": {"tf": 1}, "icepool.OutcomeCountGenerator.min_outcome": {"tf": 1}, "icepool.Pool.min_outcome": {"tf": 1}}, "df": 4}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Population.cramer_von_mises": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Population.mode": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Population.modal_quantity": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Population.standardized_moment": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Population.median": {"tf": 1}, "icepool.Population.median_left": {"tf": 1}, "icepool.Population.median_right": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Population.mean": {"tf": 1}}, "df": 1}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"icepool.Die.zero": {"tf": 1}, "icepool.Die.zero_outcome": {"tf": 1}, "icepool.Population.has_zero_quantities": {"tf": 1}}, "df": 3}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Population.nearest_ge": {"tf": 1}, "icepool.Population.quantities_ge": {"tf": 1}, "icepool.Population.quantity_ge": {"tf": 1}, "icepool.Population.probabilities_ge": {"tf": 1}}, "df": 4}, "t": {"docs": {"icepool.Population.quantity_gt": {"tf": 1}}, "df": 1}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Population.quantities": {"tf": 1}, "icepool.Population.has_zero_quantities": {"tf": 1}, "icepool.Population.quantities_le": {"tf": 1}, "icepool.Population.quantities_ge": {"tf": 1}, "icepool.from_cumulative_quantities": {"tf": 1}}, "df": 5}}}, "y": {"docs": {"icepool.Population.quantity": {"tf": 1}, "icepool.Population.quantity_ne": {"tf": 1}, "icepool.Population.quantity_le": {"tf": 1}, "icepool.Population.quantity_lt": {"tf": 1}, "icepool.Population.quantity_ge": {"tf": 1}, "icepool.Population.quantity_gt": {"tf": 1}, "icepool.Population.modal_quantity": {"tf": 1}}, "df": 7}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Population.quantile": {"tf": 1}, "icepool.Population.quantile_left": {"tf": 1}, "icepool.Population.quantile_right": {"tf": 1}}, "df": 3}}}}}}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.JointEvaluator": {"tf": 1}, "icepool.JointEvaluator.__init__": {"tf": 1}, "icepool.JointEvaluator.next_state": {"tf": 1}, "icepool.JointEvaluator.final_outcome": {"tf": 1}, "icepool.JointEvaluator.direction": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}, "fullname": {"root": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.CountsKeysView.__init__": {"tf": 1}, "icepool.CountsValuesView.__init__": {"tf": 1}, "icepool.CountsItemsView.__init__": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.JointEvaluator.__init__": {"tf": 1}, "icepool.EvaluateSum.__init__": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}, "icepool.Deal.__init__": {"tf": 1}}, "df": 9, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"icepool": {"tf": 1}, "icepool.standard": {"tf": 1}, "icepool.d": {"tf": 1}, "icepool.bernoulli": {"tf": 1}, "icepool.coin": {"tf": 1}, "icepool.Die": {"tf": 1}, "icepool.Die.__init__": {"tf": 1}, "icepool.Die.unary_op": {"tf": 1}, "icepool.Die.unary_op_non_elementwise": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Die.keys": {"tf": 1}, "icepool.Die.values": {"tf": 1}, "icepool.Die.items": {"tf": 1}, "icepool.Die.reduce": {"tf": 1}, "icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.truncate": {"tf": 1}, "icepool.Die.clip": {"tf": 1}, "icepool.Die.set_range": {"tf": 1}, "icepool.Die.set_outcomes": {"tf": 1}, "icepool.Die.trim": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.explode": {"tf": 1}, "icepool.Die.if_else": {"tf": 1}, "icepool.Die.pool": {"tf": 1}, "icepool.Die.keep_lowest": {"tf": 1}, "icepool.Die.keep_highest": {"tf": 1}, "icepool.Die.abs": {"tf": 1}, "icepool.Die.round": {"tf": 1}, "icepool.Die.trunc": {"tf": 1}, "icepool.Die.floor": {"tf": 1}, "icepool.Die.ceil": {"tf": 1}, "icepool.Die.marginals": {"tf": 1}, "icepool.Die.zero": {"tf": 1}, "icepool.Die.zero_outcome": {"tf": 1}, "icepool.Die.cmp": {"tf": 1}, "icepool.Die.sign": {"tf": 1}, "icepool.Die.bool": {"tf": 1}, "icepool.Die.key_tuple": {"tf": 1}, "icepool.Die.equals": {"tf": 1}, "icepool.Population": {"tf": 1}, "icepool.Population.keys": {"tf": 1}, "icepool.Population.values": {"tf": 1}, "icepool.Population.items": {"tf": 1}, "icepool.Population.marginals": {"tf": 1}, "icepool.Population.outcomes": {"tf": 1}, "icepool.Population.outcome_len": {"tf": 1}, "icepool.Population.is_empty": {"tf": 1}, "icepool.Population.min_outcome": {"tf": 1}, "icepool.Population.max_outcome": {"tf": 1}, "icepool.Population.nearest_le": {"tf": 1}, "icepool.Population.nearest_ge": {"tf": 1}, "icepool.Population.quantities": {"tf": 1}, "icepool.Population.denominator": {"tf": 1}, "icepool.Population.has_zero_quantities": {"tf": 1}, "icepool.Population.quantities_le": {"tf": 1}, "icepool.Population.quantities_ge": {"tf": 1}, "icepool.Population.quantity": {"tf": 1}, "icepool.Population.quantity_ne": {"tf": 1}, "icepool.Population.quantity_le": {"tf": 1}, "icepool.Population.quantity_lt": {"tf": 1}, "icepool.Population.quantity_ge": {"tf": 1}, "icepool.Population.quantity_gt": {"tf": 1}, "icepool.Population.probabilities": {"tf": 1}, "icepool.Population.probabilities_le": {"tf": 1}, "icepool.Population.probabilities_ge": {"tf": 1}, "icepool.Population.probability": {"tf": 1}, "icepool.Population.mode": {"tf": 1}, "icepool.Population.modal_quantity": {"tf": 1}, "icepool.Population.kolmogorov_smirnov": {"tf": 1}, "icepool.Population.cramer_von_mises": {"tf": 1}, "icepool.Population.median": {"tf": 1}, "icepool.Population.median_left": {"tf": 1}, "icepool.Population.median_right": {"tf": 1}, "icepool.Population.quantile": {"tf": 1}, "icepool.Population.quantile_left": {"tf": 1}, "icepool.Population.quantile_right": {"tf": 1}, "icepool.Population.mean": {"tf": 1}, "icepool.Population.variance": {"tf": 1}, "icepool.Population.standard_deviation": {"tf": 1}, "icepool.Population.sd": {"tf": 1}, "icepool.Population.standardized_moment": {"tf": 1}, "icepool.Population.skewness": {"tf": 1}, "icepool.Population.excess_kurtosis": {"tf": 1}, "icepool.Population.covariance": {"tf": 1}, "icepool.Population.correlation": {"tf": 1}, "icepool.Population.sample": {"tf": 1}, "icepool.Population.format": {"tf": 1}, "icepool.CountsKeysView": {"tf": 1}, "icepool.CountsKeysView.__init__": {"tf": 1}, "icepool.CountsValuesView": {"tf": 1}, "icepool.CountsValuesView.__init__": {"tf": 1}, "icepool.CountsItemsView": {"tf": 1}, "icepool.CountsItemsView.__init__": {"tf": 1}, "icepool.from_cumulative_quantities": {"tf": 1}, "icepool.from_rv": {"tf": 1}, "icepool.align": {"tf": 1}, "icepool.align_range": {"tf": 1}, "icepool.lowest": {"tf": 1}, "icepool.highest": {"tf": 1}, "icepool.min_outcome": {"tf": 1}, "icepool.max_outcome": {"tf": 1}, "icepool.reduce": {"tf": 1}, "icepool.accumulate": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.apply_sorted": {"tf": 1}, "icepool.Reroll": {"tf": 1}, "icepool.OutcomeCountGenerator": {"tf": 1}, "icepool.OutcomeCountGenerator.outcomes": {"tf": 1}, "icepool.OutcomeCountGenerator.denominator": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1}, "icepool.OutcomeCountGenerator.min_outcome": {"tf": 1}, "icepool.OutcomeCountGenerator.max_outcome": {"tf": 1}, "icepool.OutcomeCountGenerator.sum": {"tf": 1}, "icepool.OutcomeCountGenerator.sample": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.Pool.size": {"tf": 1}, "icepool.Pool.denominator": {"tf": 1}, "icepool.Pool.unique_dice": {"tf": 1}, "icepool.Pool.outcomes": {"tf": 1}, "icepool.Pool.post_roll_counts": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.Pool.min_outcome": {"tf": 1}, "icepool.Pool.max_outcome": {"tf": 1}, "icepool.Pool.lowest": {"tf": 1}, "icepool.Pool.highest": {"tf": 1}, "icepool.standard_pool": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.OutcomeCountEvaluator.sample": {"tf": 1}, "icepool.JointEvaluator": {"tf": 1}, "icepool.JointEvaluator.__init__": {"tf": 1}, "icepool.JointEvaluator.next_state": {"tf": 1}, "icepool.JointEvaluator.final_outcome": {"tf": 1}, "icepool.JointEvaluator.direction": {"tf": 1}, "icepool.EvaluateSum": {"tf": 1}, "icepool.EvaluateSum.__init__": {"tf": 1}, "icepool.EvaluateSum.next_state": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}, "icepool.EvaluateSum.direction": {"tf": 1}, "icepool.Deck": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}, "icepool.Deck.unary_op_non_elementwise": {"tf": 1}, "icepool.Deck.keys": {"tf": 1}, "icepool.Deck.values": {"tf": 1}, "icepool.Deck.items": {"tf": 1}, "icepool.Deck.size": {"tf": 1}, "icepool.Deck.deal": {"tf": 1}, "icepool.Deck.marginals": {"tf": 1}, "icepool.Deal": {"tf": 1}, "icepool.Deal.__init__": {"tf": 1}, "icepool.Deal.deck": {"tf": 1}, "icepool.Deal.hand_sizes": {"tf": 1}, "icepool.Deal.total_cards_dealt": {"tf": 1}, "icepool.Deal.outcomes": {"tf": 1}, "icepool.Deal.denominator": {"tf": 1}, "icepool.clear_pool_cache": {"tf": 1}}, "df": 163}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.CountsKeysView.__init__": {"tf": 1}, "icepool.CountsValuesView.__init__": {"tf": 1}, "icepool.CountsItemsView.__init__": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.JointEvaluator.__init__": {"tf": 1}, "icepool.EvaluateSum.__init__": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}, "icepool.Deal.__init__": {"tf": 1}}, "df": 9}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Die.items": {"tf": 1}, "icepool.Population.items": {"tf": 1}, "icepool.Deck.items": {"tf": 1}}, "df": 3}}}}, "f": {"docs": {"icepool.Die.if_else": {"tf": 1}}, "df": 1}, "s": {"docs": {"icepool.Population.is_empty": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"icepool.standard": {"tf": 1}, "icepool.Population.standard_deviation": {"tf": 1}, "icepool.standard_pool": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Population.standardized_moment": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.JointEvaluator.next_state": {"tf": 1}, "icepool.EvaluateSum.next_state": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die.set_range": {"tf": 1}, "icepool.Die.set_outcomes": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 3}}, "u": {"docs": {}, "df": 0, "b": {"docs": {"icepool.Die.sub": {"tf": 1}}, "df": 1}, "m": {"docs": {"icepool.OutcomeCountGenerator.sum": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Die.sign": {"tf": 1}}, "df": 1}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Pool.size": {"tf": 1}, "icepool.Deck.size": {"tf": 1}}, "df": 2, "s": {"docs": {"icepool.Deal.hand_sizes": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {"icepool.Population.kolmogorov_smirnov": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {"icepool.Population.sd": {"tf": 1}}, "df": 1}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Population.skewness": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Population.sample": {"tf": 1}, "icepool.OutcomeCountGenerator.sample": {"tf": 1}, "icepool.OutcomeCountEvaluator.sample": {"tf": 1}}, "df": 3}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.apply_sorted": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {"icepool.d": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Die.__init__": {"tf": 1}, "icepool.Die.unary_op": {"tf": 1}, "icepool.Die.unary_op_non_elementwise": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Die.keys": {"tf": 1}, "icepool.Die.values": {"tf": 1}, "icepool.Die.items": {"tf": 1}, "icepool.Die.reduce": {"tf": 1}, "icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.truncate": {"tf": 1}, "icepool.Die.clip": {"tf": 1}, "icepool.Die.set_range": {"tf": 1}, "icepool.Die.set_outcomes": {"tf": 1}, "icepool.Die.trim": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.explode": {"tf": 1}, "icepool.Die.if_else": {"tf": 1}, "icepool.Die.pool": {"tf": 1}, "icepool.Die.keep_lowest": {"tf": 1}, "icepool.Die.keep_highest": {"tf": 1}, "icepool.Die.abs": {"tf": 1}, "icepool.Die.round": {"tf": 1}, "icepool.Die.trunc": {"tf": 1}, "icepool.Die.floor": {"tf": 1}, "icepool.Die.ceil": {"tf": 1}, "icepool.Die.marginals": {"tf": 1}, "icepool.Die.zero": {"tf": 1}, "icepool.Die.zero_outcome": {"tf": 1}, "icepool.Die.cmp": {"tf": 1}, "icepool.Die.sign": {"tf": 1}, "icepool.Die.bool": {"tf": 1}, "icepool.Die.key_tuple": {"tf": 1}, "icepool.Die.equals": {"tf": 1}}, "df": 35}, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Pool.unique_dice": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.JointEvaluator.direction": {"tf": 1}, "icepool.EvaluateSum.direction": {"tf": 1}}, "df": 3}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Population.denominator": {"tf": 1}, "icepool.OutcomeCountGenerator.denominator": {"tf": 1}, "icepool.Pool.denominator": {"tf": 1}, "icepool.Deal.denominator": {"tf": 1}}, "df": 4}}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Population.standard_deviation": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"icepool.Deck": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}, "icepool.Deck.unary_op_non_elementwise": {"tf": 1}, "icepool.Deck.keys": {"tf": 1}, "icepool.Deck.values": {"tf": 1}, "icepool.Deck.items": {"tf": 1}, "icepool.Deck.size": {"tf": 1}, "icepool.Deck.deal": {"tf": 1}, "icepool.Deck.marginals": {"tf": 1}, "icepool.Deal.deck": {"tf": 1}}, "df": 10}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Deck.deal": {"tf": 1}, "icepool.Deal": {"tf": 1}, "icepool.Deal.__init__": {"tf": 1}, "icepool.Deal.deck": {"tf": 1}, "icepool.Deal.hand_sizes": {"tf": 1}, "icepool.Deal.total_cards_dealt": {"tf": 1}, "icepool.Deal.outcomes": {"tf": 1}, "icepool.Deal.denominator": {"tf": 1}}, "df": 8, "t": {"docs": {"icepool.Deal.total_cards_dealt": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"icepool.bernoulli": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Die.binary_op": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Die.bool": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"icepool.coin": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Population.covariance": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Population.correlation": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Pool.post_roll_counts": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 2, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"icepool.CountsKeysView": {"tf": 1}, "icepool.CountsKeysView.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"icepool.CountsValuesView": {"tf": 1}, "icepool.CountsValuesView.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"icepool.CountsItemsView": {"tf": 1}, "icepool.CountsItemsView.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"icepool.Die.clip": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"icepool.clear_pool_cache": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Die.ceil": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"icepool.Die.cmp": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Population.cramer_von_mises": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"icepool.from_cumulative_quantities": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Deal.total_cards_dealt": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"icepool.clear_pool_cache": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Die.unary_op": {"tf": 1}, "icepool.Die.unary_op_non_elementwise": {"tf": 1}, "icepool.Deck.unary_op_non_elementwise": {"tf": 1}}, "df": 3}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Die.reroll_until": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Pool.unique_dice": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"icepool.Die.unary_op": {"tf": 1}, "icepool.Die.unary_op_non_elementwise": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Deck.unary_op_non_elementwise": {"tf": 1}}, "df": 4}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.zero_outcome": {"tf": 1}, "icepool.Population.outcome_len": {"tf": 1}, "icepool.Population.min_outcome": {"tf": 1}, "icepool.Population.max_outcome": {"tf": 1}, "icepool.min_outcome": {"tf": 1}, "icepool.max_outcome": {"tf": 1}, "icepool.OutcomeCountGenerator.min_outcome": {"tf": 1}, "icepool.OutcomeCountGenerator.max_outcome": {"tf": 1}, "icepool.Pool.min_outcome": {"tf": 1}, "icepool.Pool.max_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.JointEvaluator.final_outcome": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 13, "s": {"docs": {"icepool.Die.set_outcomes": {"tf": 1}, "icepool.Population.outcomes": {"tf": 1}, "icepool.OutcomeCountGenerator.outcomes": {"tf": 1}, "icepool.Pool.outcomes": {"tf": 1}, "icepool.Deal.outcomes": {"tf": 1}}, "df": 5}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.OutcomeCountGenerator": {"tf": 1}, "icepool.OutcomeCountGenerator.outcomes": {"tf": 1}, "icepool.OutcomeCountGenerator.denominator": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1}, "icepool.OutcomeCountGenerator.min_outcome": {"tf": 1}, "icepool.OutcomeCountGenerator.max_outcome": {"tf": 1}, "icepool.OutcomeCountGenerator.sum": {"tf": 1}, "icepool.OutcomeCountGenerator.sample": {"tf": 1}}, "df": 8}}}}}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.OutcomeCountEvaluator": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.OutcomeCountEvaluator.sample": {"tf": 1}}, "df": 8}}}}}}}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Die.unary_op_non_elementwise": {"tf": 1}, "icepool.Deck.unary_op_non_elementwise": {"tf": 1}}, "df": 2}}, "e": {"docs": {"icepool.Population.quantity_ne": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Population.nearest_le": {"tf": 1}, "icepool.Population.nearest_ge": {"tf": 1}}, "df": 2}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.JointEvaluator.next_state": {"tf": 1}, "icepool.EvaluateSum.next_state": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.unary_op_non_elementwise": {"tf": 1}, "icepool.Deck.unary_op_non_elementwise": {"tf": 1}}, "df": 2}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.if_else": {"tf": 1}}, "df": 1}}}, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.explode": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Population.excess_kurtosis": {"tf": 1}}, "df": 1}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Die.equals": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Population.is_empty": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"icepool.OutcomeCountGenerator.evaluate": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"icepool.EvaluateSum": {"tf": 1}, "icepool.EvaluateSum.__init__": {"tf": 1}, "icepool.EvaluateSum.next_state": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}, "icepool.EvaluateSum.direction": {"tf": 1}}, "df": 5}}}}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Die.key_tuple": {"tf": 1}}, "df": 1, "s": {"docs": {"icepool.Die.keys": {"tf": 1}, "icepool.Population.keys": {"tf": 1}, "icepool.Deck.keys": {"tf": 1}}, "df": 3}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"icepool.Die.keep_lowest": {"tf": 1}, "icepool.Die.keep_highest": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {"icepool.Population.kolmogorov_smirnov": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Population.excess_kurtosis": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Die.values": {"tf": 1}, "icepool.Population.values": {"tf": 1}, "icepool.Deck.values": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Population.variance": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Population.cramer_von_mises": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.reduce": {"tf": 1}, "icepool.reduce": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Reroll": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.set_range": {"tf": 1}, "icepool.align_range": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.round": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Pool.post_roll_counts": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Population.median_right": {"tf": 1}, "icepool.Population.quantile_right": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {"icepool.from_rv": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"icepool.Die.trunc": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.truncate": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {"icepool.Die.trim": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.key_tuple": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Deal.total_cards_dealt": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Die.pool": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.Pool.size": {"tf": 1}, "icepool.Pool.denominator": {"tf": 1}, "icepool.Pool.unique_dice": {"tf": 1}, "icepool.Pool.outcomes": {"tf": 1}, "icepool.Pool.post_roll_counts": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.Pool.min_outcome": {"tf": 1}, "icepool.Pool.max_outcome": {"tf": 1}, "icepool.Pool.lowest": {"tf": 1}, "icepool.Pool.highest": {"tf": 1}, "icepool.standard_pool": {"tf": 1}, "icepool.clear_pool_cache": {"tf": 1}}, "df": 15}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Population": {"tf": 1}, "icepool.Population.keys": {"tf": 1}, "icepool.Population.values": {"tf": 1}, "icepool.Population.items": {"tf": 1}, "icepool.Population.marginals": {"tf": 1}, "icepool.Population.outcomes": {"tf": 1}, "icepool.Population.outcome_len": {"tf": 1}, "icepool.Population.is_empty": {"tf": 1}, "icepool.Population.min_outcome": {"tf": 1}, "icepool.Population.max_outcome": {"tf": 1}, "icepool.Population.nearest_le": {"tf": 1}, "icepool.Population.nearest_ge": {"tf": 1}, "icepool.Population.quantities": {"tf": 1}, "icepool.Population.denominator": {"tf": 1}, "icepool.Population.has_zero_quantities": {"tf": 1}, "icepool.Population.quantities_le": {"tf": 1}, "icepool.Population.quantities_ge": {"tf": 1}, "icepool.Population.quantity": {"tf": 1}, "icepool.Population.quantity_ne": {"tf": 1}, "icepool.Population.quantity_le": {"tf": 1}, "icepool.Population.quantity_lt": {"tf": 1}, "icepool.Population.quantity_ge": {"tf": 1}, "icepool.Population.quantity_gt": {"tf": 1}, "icepool.Population.probabilities": {"tf": 1}, "icepool.Population.probabilities_le": {"tf": 1}, "icepool.Population.probabilities_ge": {"tf": 1}, "icepool.Population.probability": {"tf": 1}, "icepool.Population.mode": {"tf": 1}, "icepool.Population.modal_quantity": {"tf": 1}, "icepool.Population.kolmogorov_smirnov": {"tf": 1}, "icepool.Population.cramer_von_mises": {"tf": 1}, "icepool.Population.median": {"tf": 1}, "icepool.Population.median_left": {"tf": 1}, "icepool.Population.median_right": {"tf": 1}, "icepool.Population.quantile": {"tf": 1}, "icepool.Population.quantile_left": {"tf": 1}, "icepool.Population.quantile_right": {"tf": 1}, "icepool.Population.mean": {"tf": 1}, "icepool.Population.variance": {"tf": 1}, "icepool.Population.standard_deviation": {"tf": 1}, "icepool.Population.sd": {"tf": 1}, "icepool.Population.standardized_moment": {"tf": 1}, "icepool.Population.skewness": {"tf": 1}, "icepool.Population.excess_kurtosis": {"tf": 1}, "icepool.Population.covariance": {"tf": 1}, "icepool.Population.correlation": {"tf": 1}, "icepool.Population.sample": {"tf": 1}, "icepool.Population.format": {"tf": 1}}, "df": 48}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Pool.post_roll_counts": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Population.probabilities": {"tf": 1}, "icepool.Population.probabilities_le": {"tf": 1}, "icepool.Population.probabilities_ge": {"tf": 1}}, "df": 3}}}, "y": {"docs": {"icepool.Population.probability": {"tf": 1}}, "df": 1}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die.keep_lowest": {"tf": 1}, "icepool.lowest": {"tf": 1}, "icepool.Pool.lowest": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {"icepool.Population.nearest_le": {"tf": 1}, "icepool.Population.quantities_le": {"tf": 1}, "icepool.Population.quantity_le": {"tf": 1}, "icepool.Population.probabilities_le": {"tf": 1}}, "df": 4, "n": {"docs": {"icepool.Population.outcome_len": {"tf": 1}}, "df": 1}, "f": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Population.median_left": {"tf": 1}, "icepool.Population.quantile_left": {"tf": 1}}, "df": 2}}}, "t": {"docs": {"icepool.Population.quantity_lt": {"tf": 1}}, "df": 1}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die.keep_highest": {"tf": 1}, "icepool.highest": {"tf": 1}, "icepool.Pool.highest": {"tf": 1}}, "df": 3}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Population.has_zero_quantities": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Deal.hand_sizes": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Die.abs": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"icepool.align": {"tf": 1}, "icepool.align_range": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}}, "df": 2}}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"icepool.accumulate": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.apply": {"tf": 1}, "icepool.apply_sorted": {"tf": 1}}, "df": 2}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Die.floor": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Population.format": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"icepool.from_cumulative_quantities": {"tf": 1}, "icepool.from_rv": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.JointEvaluator.final_outcome": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 3}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Die.marginals": {"tf": 1}, "icepool.Population.marginals": {"tf": 1}, "icepool.Deck.marginals": {"tf": 1}}, "df": 3}}}}}}}, "x": {"docs": {"icepool.Population.max_outcome": {"tf": 1}, "icepool.max_outcome": {"tf": 1}, "icepool.OutcomeCountGenerator.max_outcome": {"tf": 1}, "icepool.Pool.max_outcome": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Population.min_outcome": {"tf": 1}, "icepool.min_outcome": {"tf": 1}, "icepool.OutcomeCountGenerator.min_outcome": {"tf": 1}, "icepool.Pool.min_outcome": {"tf": 1}}, "df": 4}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Population.cramer_von_mises": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Population.mode": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Population.modal_quantity": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Population.standardized_moment": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Population.median": {"tf": 1}, "icepool.Population.median_left": {"tf": 1}, "icepool.Population.median_right": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Population.mean": {"tf": 1}}, "df": 1}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"icepool.Die.zero": {"tf": 1}, "icepool.Die.zero_outcome": {"tf": 1}, "icepool.Population.has_zero_quantities": {"tf": 1}}, "df": 3}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Population.nearest_ge": {"tf": 1}, "icepool.Population.quantities_ge": {"tf": 1}, "icepool.Population.quantity_ge": {"tf": 1}, "icepool.Population.probabilities_ge": {"tf": 1}}, "df": 4}, "t": {"docs": {"icepool.Population.quantity_gt": {"tf": 1}}, "df": 1}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Population.quantities": {"tf": 1}, "icepool.Population.has_zero_quantities": {"tf": 1}, "icepool.Population.quantities_le": {"tf": 1}, "icepool.Population.quantities_ge": {"tf": 1}, "icepool.from_cumulative_quantities": {"tf": 1}}, "df": 5}}}, "y": {"docs": {"icepool.Population.quantity": {"tf": 1}, "icepool.Population.quantity_ne": {"tf": 1}, "icepool.Population.quantity_le": {"tf": 1}, "icepool.Population.quantity_lt": {"tf": 1}, "icepool.Population.quantity_ge": {"tf": 1}, "icepool.Population.quantity_gt": {"tf": 1}, "icepool.Population.modal_quantity": {"tf": 1}}, "df": 7}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Population.quantile": {"tf": 1}, "icepool.Population.quantile_left": {"tf": 1}, "icepool.Population.quantile_right": {"tf": 1}}, "df": 3}}}}}}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.JointEvaluator": {"tf": 1}, "icepool.JointEvaluator.__init__": {"tf": 1}, "icepool.JointEvaluator.next_state": {"tf": 1}, "icepool.JointEvaluator.final_outcome": {"tf": 1}, "icepool.JointEvaluator.direction": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}, "annotation": {"root": {"docs": {}, "df": 0}}, "default_value": {"root": {"docs": {"icepool.Reroll": {"tf": 1.7320508075688772}}, "df": 1}}, "signature": {"root": {"0": {"docs": {"icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.explode": {"tf": 1}, "icepool.Die.keep_lowest": {"tf": 1}, "icepool.Die.keep_highest": {"tf": 1}, "icepool.lowest": {"tf": 1}, "icepool.highest": {"tf": 1}, "icepool.Pool.lowest": {"tf": 1}, "icepool.Pool.highest": {"tf": 1}}, "df": 10}, "1": {"0": {"0": {"docs": {"icepool.Population.quantile": {"tf": 1}, "icepool.Population.quantile_left": {"tf": 1}, "icepool.Population.quantile_right": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0}, "docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.pool": {"tf": 1}, "icepool.Die.keep_lowest": {"tf": 1}, "icepool.Die.keep_highest": {"tf": 1}, "icepool.lowest": {"tf": 1}, "icepool.highest": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.Pool.lowest": {"tf": 1}, "icepool.Pool.highest": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 11}, "9": {"docs": {"icepool.Die.explode": {"tf": 1}}, "df": 1}, "docs": {"icepool.standard": {"tf": 1.7320508075688772}, "icepool.d": {"tf": 1.7320508075688772}, "icepool.bernoulli": {"tf": 1.7320508075688772}, "icepool.coin": {"tf": 1.7320508075688772}, "icepool.Die.__init__": {"tf": 1.4142135623730951}, "icepool.Die.unary_op": {"tf": 1.4142135623730951}, "icepool.Die.unary_op_non_elementwise": {"tf": 1.4142135623730951}, "icepool.Die.binary_op": {"tf": 1.4142135623730951}, "icepool.Die.keys": {"tf": 1.4142135623730951}, "icepool.Die.values": {"tf": 1.4142135623730951}, "icepool.Die.items": {"tf": 1.4142135623730951}, "icepool.Die.reduce": {"tf": 1.4142135623730951}, "icepool.Die.reroll": {"tf": 1.7320508075688772}, "icepool.Die.reroll_until": {"tf": 1.7320508075688772}, "icepool.Die.truncate": {"tf": 1.4142135623730951}, "icepool.Die.clip": {"tf": 1.4142135623730951}, "icepool.Die.set_range": {"tf": 2}, "icepool.Die.set_outcomes": {"tf": 1.4142135623730951}, "icepool.Die.trim": {"tf": 1.4142135623730951}, "icepool.Die.sub": {"tf": 2}, "icepool.Die.explode": {"tf": 1.4142135623730951}, "icepool.Die.if_else": {"tf": 2}, "icepool.Die.pool": {"tf": 1.7320508075688772}, "icepool.Die.keep_lowest": {"tf": 1.7320508075688772}, "icepool.Die.keep_highest": {"tf": 1.7320508075688772}, "icepool.Die.abs": {"tf": 1.4142135623730951}, "icepool.Die.round": {"tf": 1.4142135623730951}, "icepool.Die.trunc": {"tf": 1.4142135623730951}, "icepool.Die.floor": {"tf": 1.4142135623730951}, "icepool.Die.ceil": {"tf": 1.4142135623730951}, "icepool.Die.zero": {"tf": 1.4142135623730951}, "icepool.Die.zero_outcome": {"tf": 1.4142135623730951}, "icepool.Die.cmp": {"tf": 1.4142135623730951}, "icepool.Die.sign": {"tf": 1.4142135623730951}, "icepool.Die.bool": {"tf": 1.4142135623730951}, "icepool.Die.key_tuple": {"tf": 1.4142135623730951}, "icepool.Die.equals": {"tf": 1.7320508075688772}, "icepool.Population.keys": {"tf": 1.4142135623730951}, "icepool.Population.values": {"tf": 1.4142135623730951}, "icepool.Population.items": {"tf": 1.4142135623730951}, "icepool.Population.outcomes": {"tf": 1.4142135623730951}, "icepool.Population.outcome_len": {"tf": 1.7320508075688772}, "icepool.Population.is_empty": {"tf": 1.4142135623730951}, "icepool.Population.min_outcome": {"tf": 1.4142135623730951}, "icepool.Population.max_outcome": {"tf": 1.4142135623730951}, "icepool.Population.nearest_le": {"tf": 1.4142135623730951}, "icepool.Population.nearest_ge": {"tf": 1.4142135623730951}, "icepool.Population.quantities": {"tf": 1.4142135623730951}, "icepool.Population.denominator": {"tf": 1.4142135623730951}, "icepool.Population.has_zero_quantities": {"tf": 1.4142135623730951}, "icepool.Population.quantities_le": {"tf": 1.4142135623730951}, "icepool.Population.quantities_ge": {"tf": 1.4142135623730951}, "icepool.Population.quantity": {"tf": 1.4142135623730951}, "icepool.Population.quantity_ne": {"tf": 1.4142135623730951}, "icepool.Population.quantity_le": {"tf": 1.4142135623730951}, "icepool.Population.quantity_lt": {"tf": 1.4142135623730951}, "icepool.Population.quantity_ge": {"tf": 1.4142135623730951}, "icepool.Population.quantity_gt": {"tf": 1.4142135623730951}, "icepool.Population.probabilities": {"tf": 1.4142135623730951}, "icepool.Population.probabilities_le": {"tf": 1.4142135623730951}, "icepool.Population.probabilities_ge": {"tf": 1.4142135623730951}, "icepool.Population.probability": {"tf": 1.4142135623730951}, "icepool.Population.mode": {"tf": 1.4142135623730951}, "icepool.Population.modal_quantity": {"tf": 1.4142135623730951}, "icepool.Population.kolmogorov_smirnov": {"tf": 1.4142135623730951}, "icepool.Population.cramer_von_mises": {"tf": 1.4142135623730951}, "icepool.Population.median": {"tf": 1.4142135623730951}, "icepool.Population.median_left": {"tf": 1.4142135623730951}, "icepool.Population.median_right": {"tf": 1.4142135623730951}, "icepool.Population.quantile": {"tf": 1.4142135623730951}, "icepool.Population.quantile_left": {"tf": 1.4142135623730951}, "icepool.Population.quantile_right": {"tf": 1.4142135623730951}, "icepool.Population.mean": {"tf": 1.4142135623730951}, "icepool.Population.variance": {"tf": 1.4142135623730951}, "icepool.Population.standard_deviation": {"tf": 1.4142135623730951}, "icepool.Population.sd": {"tf": 1.4142135623730951}, "icepool.Population.standardized_moment": {"tf": 1.4142135623730951}, "icepool.Population.skewness": {"tf": 1.4142135623730951}, "icepool.Population.excess_kurtosis": {"tf": 1.4142135623730951}, "icepool.Population.covariance": {"tf": 1.4142135623730951}, "icepool.Population.correlation": {"tf": 1.4142135623730951}, "icepool.Population.sample": {"tf": 1.4142135623730951}, "icepool.Population.format": {"tf": 1.4142135623730951}, "icepool.CountsKeysView.__init__": {"tf": 1.4142135623730951}, "icepool.CountsValuesView.__init__": {"tf": 1.4142135623730951}, "icepool.CountsItemsView.__init__": {"tf": 1.4142135623730951}, "icepool.from_cumulative_quantities": {"tf": 1.7320508075688772}, "icepool.from_rv": {"tf": 1.7320508075688772}, "icepool.align": {"tf": 1.7320508075688772}, "icepool.align_range": {"tf": 1.7320508075688772}, "icepool.lowest": {"tf": 1.4142135623730951}, "icepool.highest": {"tf": 1.4142135623730951}, "icepool.min_outcome": {"tf": 1.4142135623730951}, "icepool.max_outcome": {"tf": 1.4142135623730951}, "icepool.reduce": {"tf": 1.7320508075688772}, "icepool.accumulate": {"tf": 1.7320508075688772}, "icepool.apply": {"tf": 1.4142135623730951}, "icepool.apply_sorted": {"tf": 1.4142135623730951}, "icepool.OutcomeCountGenerator.outcomes": {"tf": 1.4142135623730951}, "icepool.OutcomeCountGenerator.denominator": {"tf": 1.4142135623730951}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1.7320508075688772}, "icepool.OutcomeCountGenerator.min_outcome": {"tf": 1.4142135623730951}, "icepool.OutcomeCountGenerator.max_outcome": {"tf": 1.4142135623730951}, "icepool.OutcomeCountGenerator.sum": {"tf": 1.4142135623730951}, "icepool.OutcomeCountGenerator.sample": {"tf": 1.7320508075688772}, "icepool.Pool.__init__": {"tf": 1.4142135623730951}, "icepool.Pool.size": {"tf": 1.4142135623730951}, "icepool.Pool.denominator": {"tf": 1.4142135623730951}, "icepool.Pool.unique_dice": {"tf": 1.4142135623730951}, "icepool.Pool.outcomes": {"tf": 1.4142135623730951}, "icepool.Pool.post_roll_counts": {"tf": 1.7320508075688772}, "icepool.Pool.set_post_roll_counts": {"tf": 2.23606797749979}, "icepool.Pool.min_outcome": {"tf": 1.4142135623730951}, "icepool.Pool.max_outcome": {"tf": 1.4142135623730951}, "icepool.Pool.lowest": {"tf": 1.4142135623730951}, "icepool.Pool.highest": {"tf": 1.4142135623730951}, "icepool.standard_pool": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.sample": {"tf": 1.4142135623730951}, "icepool.JointEvaluator.__init__": {"tf": 1.4142135623730951}, "icepool.JointEvaluator.next_state": {"tf": 1.7320508075688772}, "icepool.JointEvaluator.final_outcome": {"tf": 1.4142135623730951}, "icepool.JointEvaluator.direction": {"tf": 1.4142135623730951}, "icepool.EvaluateSum.__init__": {"tf": 1.4142135623730951}, "icepool.EvaluateSum.next_state": {"tf": 1.4142135623730951}, "icepool.EvaluateSum.final_outcome": {"tf": 1.7320508075688772}, "icepool.EvaluateSum.direction": {"tf": 1.7320508075688772}, "icepool.Deck.__init__": {"tf": 1.4142135623730951}, "icepool.Deck.unary_op_non_elementwise": {"tf": 1.4142135623730951}, "icepool.Deck.keys": {"tf": 1.4142135623730951}, "icepool.Deck.values": {"tf": 1.4142135623730951}, "icepool.Deck.items": {"tf": 1.4142135623730951}, "icepool.Deck.size": {"tf": 1.4142135623730951}, "icepool.Deck.deal": {"tf": 1.4142135623730951}, "icepool.Deal.__init__": {"tf": 1.4142135623730951}, "icepool.Deal.deck": {"tf": 1.4142135623730951}, "icepool.Deal.hand_sizes": {"tf": 1.7320508075688772}, "icepool.Deal.total_cards_dealt": {"tf": 1.4142135623730951}, "icepool.Deal.outcomes": {"tf": 1.4142135623730951}, "icepool.Deal.denominator": {"tf": 1.4142135623730951}, "icepool.clear_pool_cache": {"tf": 1.4142135623730951}}, "df": 146, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.standard": {"tf": 1}, "icepool.d": {"tf": 1}}, "df": 2}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.standard_pool": {"tf": 1}, "icepool.Deck.deal": {"tf": 1}, "icepool.Deal.__init__": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.from_cumulative_quantities": {"tf": 1}, "icepool.OutcomeCountGenerator.outcomes": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.Pool.outcomes": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.OutcomeCountEvaluator.sample": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 9, "[": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Population.quantities_le": {"tf": 1}, "icepool.Population.quantities_ge": {"tf": 1}, "icepool.from_cumulative_quantities": {"tf": 1}, "icepool.from_rv": {"tf": 1}}, "df": 4}}}}}}}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"icepool.Die.unary_op": {"tf": 1}, "icepool.Die.unary_op_non_elementwise": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Die.keys": {"tf": 1}, "icepool.Die.values": {"tf": 1}, "icepool.Die.items": {"tf": 1}, "icepool.Die.reduce": {"tf": 1}, "icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.truncate": {"tf": 1}, "icepool.Die.clip": {"tf": 1}, "icepool.Die.set_range": {"tf": 1}, "icepool.Die.set_outcomes": {"tf": 1}, "icepool.Die.trim": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.explode": {"tf": 1}, "icepool.Die.if_else": {"tf": 1}, "icepool.Die.pool": {"tf": 1}, "icepool.Die.keep_lowest": {"tf": 1}, "icepool.Die.keep_highest": {"tf": 1}, "icepool.Die.abs": {"tf": 1}, "icepool.Die.round": {"tf": 1}, "icepool.Die.trunc": {"tf": 1}, "icepool.Die.floor": {"tf": 1}, "icepool.Die.ceil": {"tf": 1}, "icepool.Die.zero": {"tf": 1}, "icepool.Die.zero_outcome": {"tf": 1}, "icepool.Die.cmp": {"tf": 1}, "icepool.Die.sign": {"tf": 1}, "icepool.Die.bool": {"tf": 1}, "icepool.Die.key_tuple": {"tf": 1}, "icepool.Die.equals": {"tf": 1}, "icepool.Population.keys": {"tf": 1}, "icepool.Population.values": {"tf": 1}, "icepool.Population.items": {"tf": 1}, "icepool.Population.outcomes": {"tf": 1}, "icepool.Population.outcome_len": {"tf": 1}, "icepool.Population.is_empty": {"tf": 1}, "icepool.Population.min_outcome": {"tf": 1}, "icepool.Population.max_outcome": {"tf": 1}, "icepool.Population.nearest_le": {"tf": 1}, "icepool.Population.nearest_ge": {"tf": 1}, "icepool.Population.quantities": {"tf": 1}, "icepool.Population.denominator": {"tf": 1}, "icepool.Population.has_zero_quantities": {"tf": 1}, "icepool.Population.quantities_le": {"tf": 1}, "icepool.Population.quantities_ge": {"tf": 1}, "icepool.Population.quantity": {"tf": 1}, "icepool.Population.quantity_ne": {"tf": 1}, "icepool.Population.quantity_le": {"tf": 1}, "icepool.Population.quantity_lt": {"tf": 1}, "icepool.Population.quantity_ge": {"tf": 1}, "icepool.Population.quantity_gt": {"tf": 1}, "icepool.Population.probabilities": {"tf": 1}, "icepool.Population.probabilities_le": {"tf": 1}, "icepool.Population.probabilities_ge": {"tf": 1}, "icepool.Population.probability": {"tf": 1}, "icepool.Population.mode": {"tf": 1}, "icepool.Population.modal_quantity": {"tf": 1}, "icepool.Population.kolmogorov_smirnov": {"tf": 1}, "icepool.Population.cramer_von_mises": {"tf": 1}, "icepool.Population.median": {"tf": 1}, "icepool.Population.median_left": {"tf": 1}, "icepool.Population.median_right": {"tf": 1}, "icepool.Population.quantile": {"tf": 1}, "icepool.Population.quantile_left": {"tf": 1}, "icepool.Population.quantile_right": {"tf": 1}, "icepool.Population.mean": {"tf": 1}, "icepool.Population.variance": {"tf": 1}, "icepool.Population.standard_deviation": {"tf": 1}, "icepool.Population.sd": {"tf": 1}, "icepool.Population.standardized_moment": {"tf": 1}, "icepool.Population.skewness": {"tf": 1}, "icepool.Population.excess_kurtosis": {"tf": 1}, "icepool.Population.covariance": {"tf": 1}, "icepool.Population.correlation": {"tf": 1}, "icepool.Population.sample": {"tf": 1}, "icepool.Population.format": {"tf": 1}, "icepool.CountsKeysView.__init__": {"tf": 1}, "icepool.CountsValuesView.__init__": {"tf": 1}, "icepool.CountsItemsView.__init__": {"tf": 1}, "icepool.OutcomeCountGenerator.outcomes": {"tf": 1}, "icepool.OutcomeCountGenerator.denominator": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1}, "icepool.OutcomeCountGenerator.min_outcome": {"tf": 1}, "icepool.OutcomeCountGenerator.max_outcome": {"tf": 1}, "icepool.OutcomeCountGenerator.sum": {"tf": 1}, "icepool.OutcomeCountGenerator.sample": {"tf": 1}, "icepool.Pool.size": {"tf": 1}, "icepool.Pool.denominator": {"tf": 1}, "icepool.Pool.unique_dice": {"tf": 1}, "icepool.Pool.outcomes": {"tf": 1}, "icepool.Pool.post_roll_counts": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.Pool.min_outcome": {"tf": 1}, "icepool.Pool.max_outcome": {"tf": 1}, "icepool.Pool.lowest": {"tf": 1}, "icepool.Pool.highest": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.OutcomeCountEvaluator.sample": {"tf": 1}, "icepool.JointEvaluator.__init__": {"tf": 1}, "icepool.JointEvaluator.next_state": {"tf": 1}, "icepool.JointEvaluator.final_outcome": {"tf": 1}, "icepool.JointEvaluator.direction": {"tf": 1}, "icepool.EvaluateSum.next_state": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}, "icepool.EvaluateSum.direction": {"tf": 1}, "icepool.Deck.unary_op_non_elementwise": {"tf": 1}, "icepool.Deck.keys": {"tf": 1}, "icepool.Deck.values": {"tf": 1}, "icepool.Deck.items": {"tf": 1}, "icepool.Deck.size": {"tf": 1}, "icepool.Deck.deal": {"tf": 1}, "icepool.Deal.__init__": {"tf": 1}, "icepool.Deal.deck": {"tf": 1}, "icepool.Deal.hand_sizes": {"tf": 1}, "icepool.Deal.total_cards_dealt": {"tf": 1}, "icepool.Deal.outcomes": {"tf": 1}, "icepool.Deal.denominator": {"tf": 1}}, "df": 124}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.if_else": {"tf": 1}, "icepool.Population.format": {"tf": 1.4142135623730951}}, "df": 4}, "a": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.explode": {"tf": 1}}, "df": 4}, "t": {"docs": {}, "df": 0, "e": {"docs": {"icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.JointEvaluator.next_state": {"tf": 1}, "icepool.JointEvaluator.final_outcome": {"tf": 1}, "icepool.EvaluateSum.next_state": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 6}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {"icepool.Population.format": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {"icepool.JointEvaluator.__init__": {"tf": 1}}, "df": 1}}}, "i": {"docs": {"icepool.Population.covariance": {"tf": 1}, "icepool.Population.correlation": {"tf": 1}}, "df": 2, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.standard": {"tf": 1}, "icepool.d": {"tf": 1}, "icepool.bernoulli": {"tf": 1.4142135623730951}, "icepool.coin": {"tf": 1.4142135623730951}, "icepool.Die.__init__": {"tf": 1.4142135623730951}, "icepool.Die.reroll": {"tf": 1.4142135623730951}, "icepool.Die.reroll_until": {"tf": 1.4142135623730951}, "icepool.Die.set_range": {"tf": 1.4142135623730951}, "icepool.Die.sub": {"tf": 1.4142135623730951}, "icepool.Die.explode": {"tf": 1.4142135623730951}, "icepool.Die.pool": {"tf": 1}, "icepool.Die.keep_lowest": {"tf": 1.7320508075688772}, "icepool.Die.keep_highest": {"tf": 1.7320508075688772}, "icepool.Die.round": {"tf": 1}, "icepool.Population.outcome_len": {"tf": 1}, "icepool.Population.denominator": {"tf": 1}, "icepool.Population.quantity": {"tf": 1}, "icepool.Population.quantity_ne": {"tf": 1}, "icepool.Population.quantity_le": {"tf": 1}, "icepool.Population.quantity_lt": {"tf": 1}, "icepool.Population.quantity_ge": {"tf": 1}, "icepool.Population.quantity_gt": {"tf": 1}, "icepool.Population.modal_quantity": {"tf": 1}, "icepool.Population.quantile": {"tf": 1.4142135623730951}, "icepool.Population.quantile_left": {"tf": 1.4142135623730951}, "icepool.Population.quantile_right": {"tf": 1.4142135623730951}, "icepool.Population.standardized_moment": {"tf": 1}, "icepool.Population.covariance": {"tf": 1.4142135623730951}, "icepool.Population.correlation": {"tf": 1.4142135623730951}, "icepool.from_rv": {"tf": 1}, "icepool.lowest": {"tf": 1.4142135623730951}, "icepool.highest": {"tf": 1.4142135623730951}, "icepool.OutcomeCountGenerator.denominator": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1.4142135623730951}, "icepool.Pool.size": {"tf": 1}, "icepool.Pool.denominator": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.Pool.lowest": {"tf": 1.4142135623730951}, "icepool.Pool.highest": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.OutcomeCountEvaluator.sample": {"tf": 1}, "icepool.JointEvaluator.next_state": {"tf": 1}, "icepool.JointEvaluator.direction": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1.4142135623730951}, "icepool.Deck.size": {"tf": 1}, "icepool.Deck.deal": {"tf": 1}, "icepool.Deal.__init__": {"tf": 1}, "icepool.Deal.total_cards_dealt": {"tf": 1}, "icepool.Deal.denominator": {"tf": 1}}, "df": 51}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.reduce": {"tf": 1}, "icepool.accumulate": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"icepool.standard": {"tf": 1}, "icepool.d": {"tf": 1}, "icepool.bernoulli": {"tf": 1}, "icepool.coin": {"tf": 1}, "icepool.Die.unary_op": {"tf": 1}, "icepool.Die.unary_op_non_elementwise": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1.4142135623730951}, "icepool.Die.keys": {"tf": 1}, "icepool.Die.values": {"tf": 1}, "icepool.Die.items": {"tf": 1}, "icepool.Die.reduce": {"tf": 1}, "icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.truncate": {"tf": 1}, "icepool.Die.clip": {"tf": 1}, "icepool.Die.set_range": {"tf": 1}, "icepool.Die.set_outcomes": {"tf": 1}, "icepool.Die.trim": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.explode": {"tf": 1}, "icepool.Die.if_else": {"tf": 1}, "icepool.Die.pool": {"tf": 1}, "icepool.Die.keep_lowest": {"tf": 1}, "icepool.Die.keep_highest": {"tf": 1}, "icepool.Die.abs": {"tf": 1}, "icepool.Die.round": {"tf": 1}, "icepool.Die.trunc": {"tf": 1}, "icepool.Die.floor": {"tf": 1}, "icepool.Die.ceil": {"tf": 1}, "icepool.Die.zero": {"tf": 1}, "icepool.Die.cmp": {"tf": 1}, "icepool.Die.sign": {"tf": 1}, "icepool.Die.bool": {"tf": 1}, "icepool.Population.keys": {"tf": 1}, "icepool.Population.values": {"tf": 1}, "icepool.Population.items": {"tf": 1}, "icepool.Population.outcomes": {"tf": 1}, "icepool.Population.quantities": {"tf": 1}, "icepool.CountsKeysView.__init__": {"tf": 1}, "icepool.CountsValuesView.__init__": {"tf": 1}, "icepool.CountsItemsView.__init__": {"tf": 1}, "icepool.from_cumulative_quantities": {"tf": 1}, "icepool.lowest": {"tf": 1}, "icepool.highest": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.apply_sorted": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1}, "icepool.OutcomeCountGenerator.sum": {"tf": 1}, "icepool.Pool.lowest": {"tf": 1}, "icepool.Pool.highest": {"tf": 1}, "icepool.standard_pool": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.JointEvaluator.__init__": {"tf": 1}, "icepool.JointEvaluator.final_outcome": {"tf": 1}, "icepool.JointEvaluator.direction": {"tf": 1}, "icepool.Deck.unary_op_non_elementwise": {"tf": 1}, "icepool.Deck.keys": {"tf": 1}, "icepool.Deck.values": {"tf": 1}, "icepool.Deck.items": {"tf": 1}, "icepool.Deck.deal": {"tf": 1}, "icepool.Deal.__init__": {"tf": 1}, "icepool.Deal.deck": {"tf": 1}, "icepool.Deal.outcomes": {"tf": 1}}, "df": 67}}}}}}, "f": {"docs": {"icepool.Die.if_else": {"tf": 1.4142135623730951}}, "df": 1}}, "d": {"docs": {"icepool.Population.quantile": {"tf": 1}, "icepool.Population.quantile_left": {"tf": 1}, "icepool.Population.quantile_right": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "e": {"docs": {"icepool.standard": {"tf": 1.7320508075688772}, "icepool.d": {"tf": 1.7320508075688772}, "icepool.bernoulli": {"tf": 1.7320508075688772}, "icepool.coin": {"tf": 1.7320508075688772}, "icepool.Die.unary_op": {"tf": 1.7320508075688772}, "icepool.Die.unary_op_non_elementwise": {"tf": 1.7320508075688772}, "icepool.Die.binary_op": {"tf": 2.449489742783178}, "icepool.Die.reduce": {"tf": 1.7320508075688772}, "icepool.Die.reroll": {"tf": 1.7320508075688772}, "icepool.Die.reroll_until": {"tf": 1.7320508075688772}, "icepool.Die.truncate": {"tf": 1.7320508075688772}, "icepool.Die.clip": {"tf": 1.7320508075688772}, "icepool.Die.set_range": {"tf": 1.7320508075688772}, "icepool.Die.set_outcomes": {"tf": 1.7320508075688772}, "icepool.Die.trim": {"tf": 1.7320508075688772}, "icepool.Die.sub": {"tf": 1.7320508075688772}, "icepool.Die.explode": {"tf": 1.7320508075688772}, "icepool.Die.if_else": {"tf": 1.7320508075688772}, "icepool.Die.keep_lowest": {"tf": 1.7320508075688772}, "icepool.Die.keep_highest": {"tf": 1.7320508075688772}, "icepool.Die.abs": {"tf": 1.7320508075688772}, "icepool.Die.round": {"tf": 1.7320508075688772}, "icepool.Die.trunc": {"tf": 1.7320508075688772}, "icepool.Die.floor": {"tf": 1.7320508075688772}, "icepool.Die.ceil": {"tf": 1.7320508075688772}, "icepool.Die.zero": {"tf": 1.7320508075688772}, "icepool.Die.cmp": {"tf": 1.7320508075688772}, "icepool.Die.sign": {"tf": 1.7320508075688772}, "icepool.Die.bool": {"tf": 1.7320508075688772}, "icepool.from_cumulative_quantities": {"tf": 1.7320508075688772}, "icepool.align": {"tf": 1.7320508075688772}, "icepool.align_range": {"tf": 1.7320508075688772}, "icepool.lowest": {"tf": 1.7320508075688772}, "icepool.highest": {"tf": 1.7320508075688772}, "icepool.apply": {"tf": 1.7320508075688772}, "icepool.apply_sorted": {"tf": 1.7320508075688772}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1.7320508075688772}, "icepool.OutcomeCountGenerator.sum": {"tf": 1.7320508075688772}, "icepool.Pool.unique_dice": {"tf": 1.7320508075688772}, "icepool.Pool.lowest": {"tf": 1.7320508075688772}, "icepool.Pool.highest": {"tf": 1.7320508075688772}, "icepool.standard_pool": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1.7320508075688772}}, "df": 43}, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.align": {"tf": 1}, "icepool.align_range": {"tf": 1}, "icepool.lowest": {"tf": 1}, "icepool.highest": {"tf": 1}, "icepool.min_outcome": {"tf": 1}, "icepool.max_outcome": {"tf": 1}, "icepool.reduce": {"tf": 1}, "icepool.accumulate": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.apply_sorted": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}}, "df": 11}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.bernoulli": {"tf": 1}, "icepool.coin": {"tf": 1}, "icepool.Die.__init__": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.if_else": {"tf": 1}, "icepool.from_rv": {"tf": 1}}, "df": 6}}}}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.explode": {"tf": 1}}, "df": 4}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"icepool.Deck.unary_op_non_elementwise": {"tf": 1.4142135623730951}, "icepool.Deal.__init__": {"tf": 1.7320508075688772}, "icepool.Deal.deck": {"tf": 1.4142135623730951}}, "df": 3}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Deck.deal": {"tf": 1.4142135623730951}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"icepool.Die.keep_lowest": {"tf": 1}, "icepool.Die.keep_highest": {"tf": 1}, "icepool.lowest": {"tf": 1}, "icepool.highest": {"tf": 1}, "icepool.Pool.lowest": {"tf": 1}, "icepool.Pool.highest": {"tf": 1}}, "df": 6}}}}, "n": {"docs": {"icepool.Population.quantile": {"tf": 1}, "icepool.Population.quantile_left": {"tf": 1}, "icepool.Population.quantile_right": {"tf": 1}}, "df": 3, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.bernoulli": {"tf": 1}, "icepool.coin": {"tf": 1}}, "df": 2}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.reroll": {"tf": 1.7320508075688772}, "icepool.Die.reroll_until": {"tf": 1.4142135623730951}, "icepool.Die.truncate": {"tf": 1.4142135623730951}, "icepool.Die.clip": {"tf": 1.4142135623730951}, "icepool.Die.set_range": {"tf": 2}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.explode": {"tf": 1}, "icepool.Die.round": {"tf": 1}, "icepool.Population.outcome_len": {"tf": 1}, "icepool.reduce": {"tf": 1}, "icepool.accumulate": {"tf": 1}}, "df": 11, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.reroll": {"tf": 1}, "icepool.Die.explode": {"tf": 1}}, "df": 2}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Die.round": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.unary_op": {"tf": 1}, "icepool.Die.unary_op_non_elementwise": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.apply_sorted": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1}, "icepool.Deck.unary_op_non_elementwise": {"tf": 1}}, "df": 7, "[": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Die.sub": {"tf": 1}, "icepool.reduce": {"tf": 1}, "icepool.accumulate": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.OutcomeCountGenerator.evaluate": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.OutcomeCountEvaluator.sample": {"tf": 1}, "icepool.JointEvaluator.__init__": {"tf": 1}, "icepool.JointEvaluator.final_outcome": {"tf": 1}, "icepool.JointEvaluator.direction": {"tf": 1}, "icepool.EvaluateSum.next_state": {"tf": 1}}, "df": 11, "s": {"docs": {"icepool.Die.keys": {"tf": 1}, "icepool.Die.values": {"tf": 1}, "icepool.Die.items": {"tf": 1}, "icepool.Population.keys": {"tf": 1}, "icepool.Population.values": {"tf": 1}, "icepool.Population.items": {"tf": 1}, "icepool.Population.outcomes": {"tf": 1}, "icepool.Population.quantities": {"tf": 1}, "icepool.CountsKeysView.__init__": {"tf": 1.7320508075688772}, "icepool.CountsValuesView.__init__": {"tf": 1.7320508075688772}, "icepool.CountsItemsView.__init__": {"tf": 1.7320508075688772}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.JointEvaluator.next_state": {"tf": 1}, "icepool.Deck.keys": {"tf": 1}, "icepool.Deck.values": {"tf": 1}, "icepool.Deck.items": {"tf": 1}, "icepool.Deal.outcomes": {"tf": 1}}, "df": 18, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"icepool.Die.keys": {"tf": 1}, "icepool.Population.keys": {"tf": 1}, "icepool.Population.outcomes": {"tf": 1}, "icepool.Deck.keys": {"tf": 1}, "icepool.Deal.outcomes": {"tf": 1}}, "df": 5}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"icepool.Die.values": {"tf": 1}, "icepool.Population.values": {"tf": 1}, "icepool.Population.quantities": {"tf": 1}, "icepool.Deck.values": {"tf": 1}}, "df": 4}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"icepool.Die.items": {"tf": 1}, "icepool.Population.items": {"tf": 1}, "icepool.Deck.items": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.explode": {"tf": 1}}, "df": 3}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.OutcomeCountEvaluator.alignment": {"tf": 1}}, "df": 1, "[": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Pool.unique_dice": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.standard_pool": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"icepool.from_cumulative_quantities": {"tf": 1}}, "df": 1}}}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.truncate": {"tf": 1.4142135623730951}, "icepool.Die.clip": {"tf": 1.4142135623730951}, "icepool.Die.set_range": {"tf": 1.4142135623730951}, "icepool.Die.if_else": {"tf": 1.4142135623730951}, "icepool.Population.nearest_le": {"tf": 1}, "icepool.Population.nearest_ge": {"tf": 1}, "icepool.Population.quantity": {"tf": 1}, "icepool.Population.quantity_ne": {"tf": 1}, "icepool.Population.quantity_le": {"tf": 1}, "icepool.Population.quantity_lt": {"tf": 1}, "icepool.Population.quantity_ge": {"tf": 1}, "icepool.Population.quantity_gt": {"tf": 1}, "icepool.Population.probability": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.OutcomeCountEvaluator.sample": {"tf": 1}, "icepool.JointEvaluator.__init__": {"tf": 1}, "icepool.JointEvaluator.next_state": {"tf": 1}, "icepool.JointEvaluator.final_outcome": {"tf": 1}, "icepool.JointEvaluator.direction": {"tf": 1}, "icepool.EvaluateSum.next_state": {"tf": 1}}, "df": 26, "s": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.set_outcomes": {"tf": 1}, "icepool.Die.explode": {"tf": 1}, "icepool.from_cumulative_quantities": {"tf": 1}, "icepool.from_rv": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 8}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.OutcomeCountGenerator.evaluate": {"tf": 1}, "icepool.JointEvaluator.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.OutcomeCountEvaluator.sample": {"tf": 1}, "icepool.JointEvaluator.final_outcome": {"tf": 1}, "icepool.JointEvaluator.direction": {"tf": 1}}, "df": 8}}}}}}}}}}}}}}}}}}}}, "p": {"docs": {"icepool.Die.unary_op": {"tf": 1}, "icepool.Die.unary_op_non_elementwise": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Deck.unary_op_non_elementwise": {"tf": 1}}, "df": 4}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Die.binary_op": {"tf": 1}, "icepool.Die.cmp": {"tf": 1}, "icepool.Die.equals": {"tf": 1}, "icepool.Population.kolmogorov_smirnov": {"tf": 1}, "icepool.Population.cramer_von_mises": {"tf": 1}}, "df": 5}}}}, "r": {"docs": {"icepool.OutcomeCountGenerator.evaluate": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Die.sub": {"tf": 1}}, "df": 1, "[": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 3}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.explode": {"tf": 1}}, "df": 3}}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"icepool.OutcomeCountGenerator.evaluate": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.OutcomeCountEvaluator.sample": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.if_else": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.key_tuple": {"tf": 1}, "icepool.Population.mode": {"tf": 1}}, "df": 2, "[": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"icepool.align": {"tf": 1}, "icepool.align_range": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Pool.post_roll_counts": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.Deal.hand_sizes": {"tf": 1}}, "df": 3}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.OutcomeCountGenerator.sample": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.JointEvaluator.next_state": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.if_else": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.truncate": {"tf": 1}, "icepool.Die.clip": {"tf": 1}, "icepool.Die.set_range": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.explode": {"tf": 1}}, "df": 7}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.OutcomeCountEvaluator.sample": {"tf": 1}}, "df": 2}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Die.truncate": {"tf": 1}, "icepool.Die.clip": {"tf": 1}, "icepool.Die.set_range": {"tf": 1}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "m": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.if_else": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Die.unary_op": {"tf": 1}, "icepool.Die.unary_op_non_elementwise": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.explode": {"tf": 1}, "icepool.Deck.unary_op_non_elementwise": {"tf": 1}}, "df": 8}}}, "n": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Die.sub": {"tf": 1}, "icepool.reduce": {"tf": 1.4142135623730951}, "icepool.accumulate": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}}, "df": 4}}}, "k": {"docs": {"icepool.Population.standardized_moment": {"tf": 1}}, "df": 1, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Die.unary_op": {"tf": 1}, "icepool.Die.unary_op_non_elementwise": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Population.format": {"tf": 1}, "icepool.from_rv": {"tf": 1}, "icepool.Deck.unary_op_non_elementwise": {"tf": 1}}, "df": 6}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"icepool.Die.keep_lowest": {"tf": 1}, "icepool.Die.keep_highest": {"tf": 1}, "icepool.lowest": {"tf": 1}, "icepool.highest": {"tf": 1}, "icepool.Pool.lowest": {"tf": 1}, "icepool.Pool.highest": {"tf": 1}}, "df": 6}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.explode": {"tf": 1}, "icepool.Population.is_empty": {"tf": 1}, "icepool.Population.has_zero_quantities": {"tf": 1}, "icepool.Population.probabilities": {"tf": 1}, "icepool.Population.probabilities_le": {"tf": 1}, "icepool.Population.probabilities_ge": {"tf": 1}, "icepool.from_cumulative_quantities": {"tf": 1}}, "df": 9}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.explode": {"tf": 1}}, "df": 4}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.OutcomeCountGenerator.evaluate": {"tf": 1.4142135623730951}, "icepool.JointEvaluator.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {"icepool.JointEvaluator.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Die.sub": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.equals": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"icepool.from_cumulative_quantities": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 1, "s": {"docs": {"icepool.Die.pool": {"tf": 1}, "icepool.Die.keep_lowest": {"tf": 1}, "icepool.Die.keep_highest": {"tf": 1}}, "df": 3}}}}, "v": {"docs": {"icepool.from_rv": {"tf": 1}}, "df": 1}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.if_else": {"tf": 1}, "icepool.Die.equals": {"tf": 1}, "icepool.Population.probabilities": {"tf": 1}, "icepool.Population.probabilities_le": {"tf": 1}, "icepool.Population.probabilities_ge": {"tf": 1}, "icepool.from_cumulative_quantities": {"tf": 1}}, "df": 6}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Population.format": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"icepool.from_rv": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"icepool.reduce": {"tf": 1}, "icepool.accumulate": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.apply_sorted": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1}}, "df": 5}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.JointEvaluator.final_outcome": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 3}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Die.pool": {"tf": 1.4142135623730951}, "icepool.standard_pool": {"tf": 1.4142135623730951}}, "df": 2}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Population.probabilities": {"tf": 1}, "icepool.Population.probabilities_le": {"tf": 1}, "icepool.Population.probabilities_ge": {"tf": 1}}, "df": 3}}}}}}}, "j": {"docs": {"icepool.Population.covariance": {"tf": 1}, "icepool.Population.correlation": {"tf": 1}}, "df": 2}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.from_cumulative_quantities": {"tf": 1}}, "df": 1}}}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.OutcomeCountEvaluator.next_state": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.JointEvaluator.next_state": {"tf": 1}}, "df": 3}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Deck.deal": {"tf": 1}, "icepool.Deal.__init__": {"tf": 1}}, "df": 2}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.OutcomeCountEvaluator.sample": {"tf": 1}, "icepool.JointEvaluator.final_outcome": {"tf": 1}, "icepool.JointEvaluator.direction": {"tf": 1}}, "df": 8, "s": {"docs": {"icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.OutcomeCountEvaluator.sample": {"tf": 1}, "icepool.JointEvaluator.final_outcome": {"tf": 1}, "icepool.JointEvaluator.direction": {"tf": 1}}, "df": 8}}}}}}}}}}}}, "bases": {"root": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "c": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}, "icepool.Population": {"tf": 1.4142135623730951}, "icepool.OutcomeCountGenerator": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator": {"tf": 1.4142135623730951}, "icepool.Deck": {"tf": 1.4142135623730951}}, "df": 5}}, "n": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Population": {"tf": 1}, "icepool.CountsItemsView": {"tf": 1.4142135623730951}, "icepool.Deck": {"tf": 1}}, "df": 4}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Population": {"tf": 1}, "icepool.CountsKeysView": {"tf": 1.4142135623730951}, "icepool.CountsValuesView": {"tf": 1.4142135623730951}, "icepool.CountsItemsView": {"tf": 1.4142135623730951}, "icepool.Deck": {"tf": 1}}, "df": 6}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Population": {"tf": 1}, "icepool.Deck": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Population": {"tf": 1}, "icepool.CountsItemsView": {"tf": 1.4142135623730951}, "icepool.Deck": {"tf": 1}}, "df": 4}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.CountsItemsView": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Pool": {"tf": 1}, "icepool.JointEvaluator": {"tf": 1}, "icepool.EvaluateSum": {"tf": 1}, "icepool.Deal": {"tf": 1}}, "df": 4}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"icepool.CountsKeysView": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.CountsKeysView": {"tf": 1}}, "df": 1, "[": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.CountsValuesView": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.CountsItemsView": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.CountsValuesView": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Pool": {"tf": 1}, "icepool.JointEvaluator": {"tf": 1}, "icepool.EvaluateSum": {"tf": 1}, "icepool.Deal": {"tf": 1}}, "df": 4, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Pool": {"tf": 1}, "icepool.Deal": {"tf": 1}}, "df": 2}}}}}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.JointEvaluator": {"tf": 1}, "icepool.EvaluateSum": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Pool": {"tf": 1}, "icepool.JointEvaluator": {"tf": 1}, "icepool.EvaluateSum": {"tf": 1}, "icepool.Deal": {"tf": 1}}, "df": 4}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Pool": {"tf": 1}, "icepool.Deal": {"tf": 1}}, "df": 2}}}}}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.JointEvaluator": {"tf": 1}, "icepool.EvaluateSum": {"tf": 1}}, "df": 2}}}}}}}}}}}, "doc": {"root": {"0": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Die.zero_outcome": {"tf": 1}, "icepool.Die.cmp": {"tf": 1}, "icepool.Die.sign": {"tf": 2.449489742783178}, "icepool.Population.quantity": {"tf": 1}, "icepool.Population.probabilities": {"tf": 1.4142135623730951}, "icepool.Population.probabilities_le": {"tf": 1.4142135623730951}, "icepool.Population.probabilities_ge": {"tf": 1.4142135623730951}, "icepool.Population.probability": {"tf": 1.4142135623730951}, "icepool.Population.format": {"tf": 1.4142135623730951}, "icepool.apply": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 2.8284271247461903}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1.7320508075688772}}, "df": 13}, "1": {"0": {"0": {"docs": {"icepool.Population.probabilities": {"tf": 1}, "icepool.Population.probabilities_le": {"tf": 1}, "icepool.Population.probabilities_ge": {"tf": 1}, "icepool.Population.format": {"tf": 1}}, "df": 4}, "docs": {}, "df": 0, "*": {"docs": {}, "df": 0, "*": {"3": {"0": {"docs": {"icepool.Population.format": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {"icepool.standard": {"tf": 1.4142135623730951}, "icepool.d": {"tf": 1.4142135623730951}, "icepool.Die.__init__": {"tf": 2}, "icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.explode": {"tf": 1}, "icepool.Die.cmp": {"tf": 1.4142135623730951}, "icepool.Die.sign": {"tf": 1.4142135623730951}, "icepool.Population.probabilities": {"tf": 1}, "icepool.Population.probabilities_le": {"tf": 1}, "icepool.Population.probabilities_ge": {"tf": 1}, "icepool.Population.format": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 4.358898943540674}, "icepool.OutcomeCountEvaluator": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 17, ":": {"1": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.equals": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "s": {"docs": {"icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 1}}, "2": {"docs": {"icepool.Die.__init__": {"tf": 1.7320508075688772}, "icepool.Pool.set_post_roll_counts": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 3, ":": {"1": {"docs": {"icepool.Die.__init__": {"tf": 1}}, "df": 1}, "2": {"docs": {"icepool.Die.equals": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, ":": {"5": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "s": {"docs": {"icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 1}}, "3": {"6": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 2}, "docs": {"icepool.Die.__init__": {"tf": 1.7320508075688772}, "icepool.Pool.set_post_roll_counts": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 3, ":": {"1": {"docs": {"icepool.Die.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "s": {"docs": {"icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 1}}, "4": {"docs": {"icepool.Die.__init__": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 2, ":": {"1": {"docs": {"icepool.Die.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "s": {"docs": {"icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 1}}, "5": {"docs": {"icepool.Die.__init__": {"tf": 1.7320508075688772}, "icepool.Pool.set_post_roll_counts": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 3, ":": {"1": {"docs": {"icepool.Die.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "s": {"docs": {"icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 1}}, "6": {"docs": {"icepool.standard": {"tf": 1.7320508075688772}, "icepool.d": {"tf": 1.7320508075688772}, "icepool.Die.__init__": {"tf": 2.6457513110645907}, "icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 4, ":": {"1": {"docs": {"icepool.Die.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "s": {"docs": {"icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 1}}, "docs": {"icepool": {"tf": 5.5677643628300215}, "icepool.standard": {"tf": 5.830951894845301}, "icepool.d": {"tf": 5.830951894845301}, "icepool.bernoulli": {"tf": 4.58257569495584}, "icepool.coin": {"tf": 4.58257569495584}, "icepool.Die": {"tf": 6.782329983125268}, "icepool.Die.__init__": {"tf": 15.620499351813308}, "icepool.Die.unary_op": {"tf": 7.416198487095663}, "icepool.Die.unary_op_non_elementwise": {"tf": 3.4641016151377544}, "icepool.Die.binary_op": {"tf": 9.38083151964686}, "icepool.Die.keys": {"tf": 1.7320508075688772}, "icepool.Die.values": {"tf": 1.7320508075688772}, "icepool.Die.items": {"tf": 1.7320508075688772}, "icepool.Die.reduce": {"tf": 1.7320508075688772}, "icepool.Die.reroll": {"tf": 9.1104335791443}, "icepool.Die.reroll_until": {"tf": 9.273618495495704}, "icepool.Die.truncate": {"tf": 4.47213595499958}, "icepool.Die.clip": {"tf": 3.7416573867739413}, "icepool.Die.set_range": {"tf": 5.196152422706632}, "icepool.Die.set_outcomes": {"tf": 2.8284271247461903}, "icepool.Die.trim": {"tf": 1.7320508075688772}, "icepool.Die.sub": {"tf": 10.344080432788601}, "icepool.Die.explode": {"tf": 8.48528137423857}, "icepool.Die.if_else": {"tf": 2.449489742783178}, "icepool.Die.pool": {"tf": 4.47213595499958}, "icepool.Die.keep_lowest": {"tf": 6.244997998398398}, "icepool.Die.keep_highest": {"tf": 6.082762530298219}, "icepool.Die.abs": {"tf": 1.7320508075688772}, "icepool.Die.round": {"tf": 1.7320508075688772}, "icepool.Die.trunc": {"tf": 1.7320508075688772}, "icepool.Die.floor": {"tf": 1.7320508075688772}, "icepool.Die.ceil": {"tf": 1.7320508075688772}, "icepool.Die.marginals": {"tf": 3.3166247903554}, "icepool.Die.zero": {"tf": 4.47213595499958}, "icepool.Die.zero_outcome": {"tf": 3.3166247903554}, "icepool.Die.cmp": {"tf": 3.872983346207417}, "icepool.Die.sign": {"tf": 3.605551275463989}, "icepool.Die.bool": {"tf": 4.358898943540674}, "icepool.Die.key_tuple": {"tf": 3}, "icepool.Die.equals": {"tf": 7.54983443527075}, "icepool.Population": {"tf": 3.872983346207417}, "icepool.Population.keys": {"tf": 1.7320508075688772}, "icepool.Population.values": {"tf": 1.7320508075688772}, "icepool.Population.items": {"tf": 1.7320508075688772}, "icepool.Population.marginals": {"tf": 3.3166247903554}, "icepool.Population.outcomes": {"tf": 3.1622776601683795}, "icepool.Population.outcome_len": {"tf": 2.8284271247461903}, "icepool.Population.is_empty": {"tf": 2.23606797749979}, "icepool.Population.min_outcome": {"tf": 1.7320508075688772}, "icepool.Population.max_outcome": {"tf": 1.7320508075688772}, "icepool.Population.nearest_le": {"tf": 2.8284271247461903}, "icepool.Population.nearest_ge": {"tf": 2.8284271247461903}, "icepool.Population.quantities": {"tf": 3.1622776601683795}, "icepool.Population.denominator": {"tf": 3}, "icepool.Population.has_zero_quantities": {"tf": 2.6457513110645907}, "icepool.Population.quantities_le": {"tf": 1.7320508075688772}, "icepool.Population.quantities_ge": {"tf": 1.7320508075688772}, "icepool.Population.quantity": {"tf": 1.7320508075688772}, "icepool.Population.quantity_ne": {"tf": 2}, "icepool.Population.quantity_le": {"tf": 1.7320508075688772}, "icepool.Population.quantity_lt": {"tf": 1.7320508075688772}, "icepool.Population.quantity_ge": {"tf": 1.7320508075688772}, "icepool.Population.quantity_gt": {"tf": 1.7320508075688772}, "icepool.Population.probabilities": {"tf": 4.123105625617661}, "icepool.Population.probabilities_le": {"tf": 4.123105625617661}, "icepool.Population.probabilities_ge": {"tf": 4.123105625617661}, "icepool.Population.probability": {"tf": 1.7320508075688772}, "icepool.Population.mode": {"tf": 2.449489742783178}, "icepool.Population.modal_quantity": {"tf": 1.7320508075688772}, "icepool.Population.kolmogorov_smirnov": {"tf": 1.7320508075688772}, "icepool.Population.cramer_von_mises": {"tf": 1.7320508075688772}, "icepool.Population.median": {"tf": 3.1622776601683795}, "icepool.Population.median_left": {"tf": 1.7320508075688772}, "icepool.Population.median_right": {"tf": 1.7320508075688772}, "icepool.Population.quantile": {"tf": 3.605551275463989}, "icepool.Population.quantile_left": {"tf": 2.449489742783178}, "icepool.Population.quantile_right": {"tf": 2.449489742783178}, "icepool.Population.mean": {"tf": 1.7320508075688772}, "icepool.Population.variance": {"tf": 1.7320508075688772}, "icepool.Population.standard_deviation": {"tf": 1.7320508075688772}, "icepool.Population.sd": {"tf": 1.7320508075688772}, "icepool.Population.standardized_moment": {"tf": 1.7320508075688772}, "icepool.Population.skewness": {"tf": 1.7320508075688772}, "icepool.Population.excess_kurtosis": {"tf": 1.7320508075688772}, "icepool.Population.covariance": {"tf": 1.7320508075688772}, "icepool.Population.correlation": {"tf": 1.7320508075688772}, "icepool.Population.sample": {"tf": 3.605551275463989}, "icepool.Population.format": {"tf": 9.219544457292887}, "icepool.CountsKeysView": {"tf": 2.6457513110645907}, "icepool.CountsKeysView.__init__": {"tf": 1.7320508075688772}, "icepool.CountsValuesView": {"tf": 2.6457513110645907}, "icepool.CountsValuesView.__init__": {"tf": 1.7320508075688772}, "icepool.CountsItemsView": {"tf": 2.6457513110645907}, "icepool.CountsItemsView.__init__": {"tf": 1.7320508075688772}, "icepool.from_cumulative_quantities": {"tf": 5.0990195135927845}, "icepool.from_rv": {"tf": 6.708203932499369}, "icepool.align": {"tf": 5}, "icepool.align_range": {"tf": 5.196152422706632}, "icepool.lowest": {"tf": 5.0990195135927845}, "icepool.highest": {"tf": 5.0990195135927845}, "icepool.min_outcome": {"tf": 1.7320508075688772}, "icepool.max_outcome": {"tf": 1.7320508075688772}, "icepool.reduce": {"tf": 5.916079783099616}, "icepool.accumulate": {"tf": 6.708203932499369}, "icepool.apply": {"tf": 9.327379053088816}, "icepool.apply_sorted": {"tf": 7.211102550927978}, "icepool.Reroll": {"tf": 1.7320508075688772}, "icepool.OutcomeCountGenerator": {"tf": 4.242640687119285}, "icepool.OutcomeCountGenerator.outcomes": {"tf": 1.7320508075688772}, "icepool.OutcomeCountGenerator.denominator": {"tf": 1.7320508075688772}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 5.656854249492381}, "icepool.OutcomeCountGenerator.min_outcome": {"tf": 1.7320508075688772}, "icepool.OutcomeCountGenerator.max_outcome": {"tf": 1.7320508075688772}, "icepool.OutcomeCountGenerator.sum": {"tf": 4.358898943540674}, "icepool.OutcomeCountGenerator.sample": {"tf": 4.123105625617661}, "icepool.Pool": {"tf": 2.8284271247461903}, "icepool.Pool.__init__": {"tf": 8.831760866327848}, "icepool.Pool.size": {"tf": 2.23606797749979}, "icepool.Pool.denominator": {"tf": 1.7320508075688772}, "icepool.Pool.unique_dice": {"tf": 1.7320508075688772}, "icepool.Pool.outcomes": {"tf": 1.7320508075688772}, "icepool.Pool.post_roll_counts": {"tf": 2.8284271247461903}, "icepool.Pool.set_post_roll_counts": {"tf": 15.033296378372908}, "icepool.Pool.min_outcome": {"tf": 1.7320508075688772}, "icepool.Pool.max_outcome": {"tf": 1.7320508075688772}, "icepool.Pool.lowest": {"tf": 4.898979485566356}, "icepool.Pool.highest": {"tf": 4.898979485566356}, "icepool.standard_pool": {"tf": 4.242640687119285}, "icepool.OutcomeCountEvaluator": {"tf": 8.366600265340756}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 8.54400374531753}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 7.211102550927978}, "icepool.OutcomeCountEvaluator.direction": {"tf": 7.280109889280518}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 5.5677643628300215}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 6.4031242374328485}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 7.416198487095663}, "icepool.OutcomeCountEvaluator.sample": {"tf": 1.7320508075688772}, "icepool.JointEvaluator": {"tf": 2.8284271247461903}, "icepool.JointEvaluator.__init__": {"tf": 1.7320508075688772}, "icepool.JointEvaluator.next_state": {"tf": 2.8284271247461903}, "icepool.JointEvaluator.final_outcome": {"tf": 2.8284271247461903}, "icepool.JointEvaluator.direction": {"tf": 3.7416573867739413}, "icepool.EvaluateSum": {"tf": 2.23606797749979}, "icepool.EvaluateSum.__init__": {"tf": 1.7320508075688772}, "icepool.EvaluateSum.next_state": {"tf": 1.7320508075688772}, "icepool.EvaluateSum.final_outcome": {"tf": 7.211102550927978}, "icepool.EvaluateSum.direction": {"tf": 1.7320508075688772}, "icepool.Deck": {"tf": 2.449489742783178}, "icepool.Deck.__init__": {"tf": 9.38083151964686}, "icepool.Deck.unary_op_non_elementwise": {"tf": 3.4641016151377544}, "icepool.Deck.keys": {"tf": 1.7320508075688772}, "icepool.Deck.values": {"tf": 1.7320508075688772}, "icepool.Deck.items": {"tf": 1.7320508075688772}, "icepool.Deck.size": {"tf": 3}, "icepool.Deck.deal": {"tf": 3.3166247903554}, "icepool.Deck.marginals": {"tf": 3.3166247903554}, "icepool.Deal": {"tf": 2.23606797749979}, "icepool.Deal.__init__": {"tf": 5.291502622129181}, "icepool.Deal.deck": {"tf": 2.23606797749979}, "icepool.Deal.hand_sizes": {"tf": 1.7320508075688772}, "icepool.Deal.total_cards_dealt": {"tf": 1.7320508075688772}, "icepool.Deal.outcomes": {"tf": 4}, "icepool.Deal.denominator": {"tf": 1.7320508075688772}, "icepool.clear_pool_cache": {"tf": 1.7320508075688772}}, "df": 163, "p": {"docs": {"icepool.Population.format": {"tf": 1.7320508075688772}}, "df": 1, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"icepool": {"tf": 1}, "icepool.Population.sample": {"tf": 1}, "icepool.OutcomeCountGenerator.sample": {"tf": 1}}, "df": 3}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"icepool": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Die.binary_op": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Die.key_tuple": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.accumulate": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 4, "s": {"docs": {"icepool.OutcomeCountEvaluator.next_state": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1.4142135623730951}, "icepool.EvaluateSum.final_outcome": {"tf": 1.7320508075688772}}, "df": 6}}}}}}}}, "d": {"docs": {}, "df": 0, "s": {"docs": {"icepool.align": {"tf": 1}, "icepool.align_range": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {"icepool.OutcomeCountGenerator.denominator": {"tf": 1}, "icepool.Pool.denominator": {"tf": 1}, "icepool.Deal.denominator": {"tf": 1}}, "df": 3}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.OutcomeCountGenerator.evaluate": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool": {"tf": 1}, "icepool.Population.format": {"tf": 1.4142135623730951}}, "df": 2}}}, "y": {"docs": {"icepool.bernoulli": {"tf": 1}, "icepool.coin": {"tf": 1}, "icepool.Die": {"tf": 1}, "icepool.Die.keep_lowest": {"tf": 1}, "icepool.Die.keep_highest": {"tf": 1}, "icepool.Population.probabilities": {"tf": 1.4142135623730951}, "icepool.Population.probabilities_le": {"tf": 1}, "icepool.Population.probabilities_ge": {"tf": 1}, "icepool.Population.probability": {"tf": 1}}, "df": 9}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"icepool.apply": {"tf": 1.4142135623730951}}, "df": 1}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"icepool": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Die.marginals": {"tf": 1}, "icepool.Population.marginals": {"tf": 1}, "icepool.Deck.marginals": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Die.key_tuple": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {"icepool.Die.__init__": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.apply": {"tf": 1}}, "df": 2}, "e": {"docs": {"icepool.OutcomeCountEvaluator.next_state": {"tf": 1}}, "df": 1, "d": {"docs": {"icepool.OutcomeCountEvaluator": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1.4142135623730951}}, "df": 2}, "s": {"docs": {"icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.reroll": {"tf": 1}, "icepool.Die.truncate": {"tf": 1}, "icepool.Die.clip": {"tf": 1}, "icepool.Die.keep_lowest": {"tf": 1}, "icepool.Die.keep_highest": {"tf": 1}, "icepool.from_rv": {"tf": 1}, "icepool.lowest": {"tf": 1}, "icepool.highest": {"tf": 1}, "icepool.reduce": {"tf": 1}, "icepool.accumulate": {"tf": 1.4142135623730951}, "icepool.Pool.__init__": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1.4142135623730951}, "icepool.JointEvaluator": {"tf": 1}, "icepool.Deal.__init__": {"tf": 1}}, "df": 14}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {"icepool.Deal.__init__": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Population.outcomes": {"tf": 1}, "icepool.Population.quantities": {"tf": 1}, "icepool.Deal.outcomes": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die.set_outcomes": {"tf": 1.4142135623730951}, "icepool.Population.quantity": {"tf": 1}, "icepool.Population.probability": {"tf": 1}}, "df": 3}, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"icepool.OutcomeCountEvaluator.next_state": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"icepool": {"tf": 1}, "icepool.Die": {"tf": 1}, "icepool.Die.__init__": {"tf": 1.7320508075688772}, "icepool.Die.pool": {"tf": 1.4142135623730951}, "icepool.apply": {"tf": 1}, "icepool.OutcomeCountGenerator": {"tf": 1}, "icepool.OutcomeCountGenerator.sum": {"tf": 1}, "icepool.Pool.__init__": {"tf": 2.6457513110645907}, "icepool.Pool.size": {"tf": 1}, "icepool.Pool.unique_dice": {"tf": 1}, "icepool.Pool.outcomes": {"tf": 1}, "icepool.Pool.post_roll_counts": {"tf": 1.4142135623730951}, "icepool.Pool.set_post_roll_counts": {"tf": 4.358898943540674}, "icepool.Pool.min_outcome": {"tf": 1}, "icepool.Pool.max_outcome": {"tf": 1}, "icepool.Pool.lowest": {"tf": 1.4142135623730951}, "icepool.Pool.highest": {"tf": 1.4142135623730951}, "icepool.standard_pool": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.clear_pool_cache": {"tf": 1}}, "df": 20, "s": {"docs": {"icepool.OutcomeCountGenerator": {"tf": 1}}, "df": 1}, "[": {"0": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 1}, "1": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 2}}, "df": 1}, "2": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 1}, "3": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 1, ":": {"5": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 1, ":": {"5": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "docs": {}, "df": 0, ":": {"5": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Die.__init__": {"tf": 1}, "icepool.apply_sorted": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.explode": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}}, "df": 5}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.cmp": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 2.449489742783178}, "icepool.Pool.lowest": {"tf": 1}, "icepool.Pool.highest": {"tf": 1}}, "df": 3}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Die.keys": {"tf": 1}, "icepool.Die.values": {"tf": 1}, "icepool.Die.items": {"tf": 1}, "icepool.Population.keys": {"tf": 1}, "icepool.Population.values": {"tf": 1}, "icepool.Population.items": {"tf": 1}, "icepool.Population.mode": {"tf": 1}, "icepool.Population.variance": {"tf": 1}, "icepool.Population.sample": {"tf": 1}, "icepool.Deck.keys": {"tf": 1}, "icepool.Deck.values": {"tf": 1}, "icepool.Deck.items": {"tf": 1}}, "df": 12}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die.sub": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1, "d": {"docs": {"icepool.reduce": {"tf": 1}, "icepool.accumulate": {"tf": 1}}, "df": 2}}}, "n": {"docs": {"icepool.OutcomeCountGenerator.evaluate": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.align": {"tf": 1}, "icepool.align_range": {"tf": 1}, "icepool.apply": {"tf": 1.4142135623730951}, "icepool.apply_sorted": {"tf": 1.4142135623730951}, "icepool.Pool.post_roll_counts": {"tf": 1}, "icepool.Deal.__init__": {"tf": 1}}, "df": 6, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.unary_op": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1.4142135623730951}, "icepool.Die.marginals": {"tf": 1}, "icepool.Population.marginals": {"tf": 1}, "icepool.Deck.marginals": {"tf": 1}}, "df": 6}}, "s": {"docs": {"icepool.Die.unary_op": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Die.truncate": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.OutcomeCountEvaluator.next_state": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Population.probabilities": {"tf": 1.4142135623730951}, "icepool.Population.probabilities_le": {"tf": 1.4142135623730951}, "icepool.Population.probabilities_ge": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die.pool": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1.7320508075688772}, "icepool.Deck.__init__": {"tf": 1}}, "df": 3}, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.equals": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 2}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"icepool.Pool.__init__": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "f": {"docs": {"icepool.Population.probabilities": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool": {"tf": 1.4142135623730951}, "icepool.Die": {"tf": 1}, "icepool.Die.__init__": {"tf": 2.23606797749979}, "icepool.Die.unary_op": {"tf": 1.7320508075688772}, "icepool.Die.unary_op_non_elementwise": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Die.sub": {"tf": 1.4142135623730951}, "icepool.Die.marginals": {"tf": 1}, "icepool.Die.zero": {"tf": 1}, "icepool.Die.zero_outcome": {"tf": 1.4142135623730951}, "icepool.Die.sign": {"tf": 1}, "icepool.Population.marginals": {"tf": 1}, "icepool.Population.denominator": {"tf": 1}, "icepool.Population.sample": {"tf": 1}, "icepool.apply": {"tf": 1.4142135623730951}, "icepool.apply_sorted": {"tf": 1}, "icepool.OutcomeCountGenerator": {"tf": 1}, "icepool.OutcomeCountGenerator.sample": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1.4142135623730951}, "icepool.Pool.set_post_roll_counts": {"tf": 2}, "icepool.standard_pool": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1.4142135623730951}, "icepool.JointEvaluator.next_state": {"tf": 1}, "icepool.JointEvaluator.final_outcome": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1.4142135623730951}, "icepool.Deck.__init__": {"tf": 1.4142135623730951}, "icepool.Deck.unary_op_non_elementwise": {"tf": 1}, "icepool.Deck.size": {"tf": 1}, "icepool.Deck.deal": {"tf": 1}, "icepool.Deck.marginals": {"tf": 1}, "icepool.Deal.__init__": {"tf": 1.4142135623730951}}, "df": 34, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die.key_tuple": {"tf": 1}, "icepool.Population.format": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"icepool.Population.format": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"icepool.Population.format": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Die.__init__": {"tf": 1.4142135623730951}, "icepool.Die.sub": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1.4142135623730951}}, "df": 5}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Population.format": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"icepool": {"tf": 1}, "icepool.standard": {"tf": 1}, "icepool.d": {"tf": 1}, "icepool.Die.__init__": {"tf": 2.23606797749979}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.pool": {"tf": 1}, "icepool.Die.keep_lowest": {"tf": 1}, "icepool.Die.keep_highest": {"tf": 1}, "icepool.Die.key_tuple": {"tf": 1}, "icepool.Population": {"tf": 1}, "icepool.Population.mode": {"tf": 1}, "icepool.Population.sample": {"tf": 1}, "icepool.from_cumulative_quantities": {"tf": 1}, "icepool.from_rv": {"tf": 1}, "icepool.reduce": {"tf": 1.4142135623730951}, "icepool.accumulate": {"tf": 1.4142135623730951}, "icepool.apply": {"tf": 1}, "icepool.apply_sorted": {"tf": 1}, "icepool.OutcomeCountGenerator.sample": {"tf": 1}, "icepool.Pool.post_roll_counts": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.sample": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1.4142135623730951}, "icepool.Deck.deal": {"tf": 1}, "icepool.Deal": {"tf": 1}, "icepool.Deal.__init__": {"tf": 1}, "icepool.Deal.deck": {"tf": 1}}, "df": 31}, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.reduce": {"tf": 1}, "icepool.accumulate": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {"icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 6}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"icepool.bernoulli": {"tf": 1.4142135623730951}, "icepool.coin": {"tf": 1.4142135623730951}, "icepool.Die.equals": {"tf": 1}}, "df": 3}, "y": {"docs": {"icepool.Die.if_else": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Die.__init__": {"tf": 1.4142135623730951}}, "df": 1}}, "t": {"docs": {"icepool.Die.binary_op": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Population.median": {"tf": 1}, "icepool.Population.quantile": {"tf": 1}}, "df": 2}}, "r": {"docs": {"icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"icepool.Die": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"icepool.reduce": {"tf": 1}, "icepool.accumulate": {"tf": 1}, "icepool.apply": {"tf": 2}, "icepool.apply_sorted": {"tf": 2}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1}}, "df": 5, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.explode": {"tf": 1}, "icepool.Die.equals": {"tf": 1}, "icepool.Population.probabilities": {"tf": 1}, "icepool.Population.probabilities_le": {"tf": 1}, "icepool.Population.probabilities_ge": {"tf": 1.4142135623730951}, "icepool.from_cumulative_quantities": {"tf": 1}, "icepool.reduce": {"tf": 2.23606797749979}, "icepool.accumulate": {"tf": 2.449489742783178}, "icepool.apply": {"tf": 1}, "icepool.apply_sorted": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 20, "s": {"docs": {"icepool.CountsKeysView": {"tf": 1}, "icepool.CountsValuesView": {"tf": 1}, "icepool.CountsItemsView": {"tf": 1}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"icepool.reduce": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"icepool.OutcomeCountEvaluator.next_state": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"icepool.OutcomeCountEvaluator.next_state": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Die.unary_op": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die.sign": {"tf": 1}, "icepool.from_rv": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.apply": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.if_else": {"tf": 1}, "icepool.Die.marginals": {"tf": 1}, "icepool.Population.marginals": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.Deck.marginals": {"tf": 1}}, "df": 7}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 2.6457513110645907}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.JointEvaluator.final_outcome": {"tf": 1.7320508075688772}, "icepool.EvaluateSum.final_outcome": {"tf": 2.6457513110645907}}, "df": 7}}}, "t": {"docs": {"icepool.Die.clip": {"tf": 1}}, "df": 1}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.sub": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1.7320508075688772}}, "df": 9}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Deal.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Die.binary_op": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Die.equals": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die.reroll_until": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Population.probabilities_ge": {"tf": 1}}, "df": 1}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Die.reduce": {"tf": 1}, "icepool.Population.outcome_len": {"tf": 1}, "icepool.Population.mode": {"tf": 1}, "icepool.JointEvaluator.direction": {"tf": 1}}, "df": 4}}, "a": {"docs": {"icepool.Population.format": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Deal.__init__": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"icepool": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.OutcomeCountGenerator.sum": {"tf": 1}, "icepool.JointEvaluator": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die.equals": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.binary_op": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.apply": {"tf": 1}, "icepool.apply_sorted": {"tf": 1}}, "df": 2}}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool": {"tf": 1}, "icepool.Die.bool": {"tf": 1}, "icepool.lowest": {"tf": 1}, "icepool.highest": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}}, "df": 5}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.apply": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1.4142135623730951}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Die.__init__": {"tf": null}, "icepool.Die.zero": {"tf": null}, "icepool.Pool.__init__": {"tf": null}, "icepool.Deck.__init__": {"tf": null}, "icepool.Deal.__init__": {"tf": null}}, "df": 5}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.from_cumulative_quantities": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 4}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"icepool.from_cumulative_quantities": {"tf": 1}, "icepool.from_rv": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.apply": {"tf": 1}, "icepool.apply_sorted": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}}, "df": 4}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"icepool.align_range": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}}, "df": 3}}}}}}}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"icepool.standard": {"tf": 1}, "icepool.d": {"tf": 1}, "icepool.Die.__init__": {"tf": 1.4142135623730951}}, "df": 3, "d": {"docs": {"icepool.Die.truncate": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.JointEvaluator.direction": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.equals": {"tf": 1}, "icepool.standard_pool": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.explode": {"tf": 1}}, "df": 3}}, "s": {"docs": {"icepool.Population.has_zero_quantities": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Population.mode": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Die.if_else": {"tf": 1}}, "df": 1}}}}}}}}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Pool": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Die.__init__": {"tf": 1}, "icepool.Die.unary_op": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator": {"tf": 2.449489742783178}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 2.23606797749979}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1.4142135623730951}, "icepool.Deck.__init__": {"tf": 1}, "icepool.Deal.__init__": {"tf": 1}}, "df": 9, "s": {"docs": {"icepool.OutcomeCountGenerator": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 3.3166247903554}, "icepool.Pool.lowest": {"tf": 1}, "icepool.Pool.highest": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1.7320508075688772}}, "df": 6}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Pool.size": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Pool.post_roll_counts": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1.7320508075688772}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 3}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Die.__init__": {"tf": 1.7320508075688772}, "icepool.Die.unary_op": {"tf": 1}, "icepool.apply_sorted": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 4}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Die.pool": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Die.equals": {"tf": 1.4142135623730951}}, "df": 1}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Population.format": {"tf": 1}}, "df": 1, "s": {"docs": {"icepool.Population.format": {"tf": 1.4142135623730951}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Pool.unique_dice": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}}, "df": 2}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"icepool": {"tf": 1}, "icepool.OutcomeCountGenerator": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 3, "s": {"docs": {"icepool.Deck.__init__": {"tf": 1}, "icepool.Deal": {"tf": 1}, "icepool.Deal.__init__": {"tf": 1.4142135623730951}, "icepool.Deal.deck": {"tf": 1}, "icepool.Deal.hand_sizes": {"tf": 1}, "icepool.Deal.total_cards_dealt": {"tf": 1}}, "df": 6}}, "e": {"docs": {"icepool.EvaluateSum.direction": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.OutcomeCountGenerator.evaluate": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"icepool.OutcomeCountGenerator.evaluate": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1.4142135623730951}, "icepool.clear_pool_cache": {"tf": 1}}, "df": 3}}}, "n": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Die.__init__": {"tf": 2}, "icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.sub": {"tf": 1.4142135623730951}, "icepool.Die.explode": {"tf": 1}, "icepool.Die.marginals": {"tf": 1}, "icepool.Population.marginals": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.OutcomeCountGenerator": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1.4142135623730951}, "icepool.Pool.__init__": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1.7320508075688772}, "icepool.Deck.marginals": {"tf": 1}, "icepool.Deal.__init__": {"tf": 1}}, "df": 22, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Die.__init__": {"tf": 1}, "icepool.Population.median": {"tf": 1.4142135623730951}, "icepool.Population.median_left": {"tf": 1}, "icepool.Population.median_right": {"tf": 1}, "icepool.Population.quantile": {"tf": 1.4142135623730951}, "icepool.Population.quantile_left": {"tf": 1}, "icepool.Population.quantile_right": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1.4142135623730951}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 14, "s": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.binary_op": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.apply_sorted": {"tf": 1}}, "df": 3}, "r": {"docs": {"icepool.Die.equals": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.reroll": {"tf": 2}, "icepool.Die.reroll_until": {"tf": 2}, "icepool.Die.sub": {"tf": 2}, "icepool.Die.explode": {"tf": 2}, "icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 5}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Die.zero": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.clip": {"tf": 1}}, "df": 1, "s": {"docs": {"icepool.Die.explode": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"icepool": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"icepool.Die.sub": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Population.format": {"tf": 1}}, "df": 1, "s": {"docs": {"icepool.Population.format": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 5, "s": {"docs": {"icepool.Die.binary_op": {"tf": 1}, "icepool.Die.pool": {"tf": 1}, "icepool.Deck.deal": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "\u00e9": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Population.cramer_von_mises": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Population.sample": {"tf": 1}, "icepool.OutcomeCountGenerator.sample": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Die.unary_op": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.OutcomeCountGenerator": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {"icepool.Die.truncate": {"tf": 1}}, "df": 1, "s": {"docs": {"icepool.Die.clip": {"tf": 1}}, "df": 1}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.clip": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"icepool.clear_pool_cache": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Die.unary_op": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"icepool.OutcomeCountEvaluator.next_state": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"icepool.Die.binary_op": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Population.probabilities_le": {"tf": 1}, "icepool.Population.probabilities_ge": {"tf": 1}, "icepool.from_cumulative_quantities": {"tf": 1.7320508075688772}}, "df": 3, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.reduce": {"tf": 1}, "icepool.accumulate": {"tf": 1}}, "df": 2}}}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1.7320508075688772}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "f": {"docs": {"icepool.Population.probabilities_le": {"tf": 1}, "icepool.Population.quantile": {"tf": 1}, "icepool.Population.quantile_left": {"tf": 1}, "icepool.Population.quantile_right": {"tf": 1}, "icepool.from_rv": {"tf": 1}}, "df": 5, "s": {"docs": {"icepool.Population.kolmogorov_smirnov": {"tf": 1}, "icepool.Population.cramer_von_mises": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "f": {"docs": {"icepool.Population.probabilities_ge": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "v": {"docs": {"icepool.Population.format": {"tf": 1}}, "df": 1}}}, "d": {"1": {"0": {"docs": {"icepool.Pool.__init__": {"tf": 1}}, "df": 1}, "2": {"docs": {"icepool.Pool.__init__": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "3": {"docs": {"icepool.Die.__init__": {"tf": 1.4142135623730951}}, "df": 1, "+": {"3": {"docs": {"icepool.Die.__init__": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}}, "4": {"docs": {"icepool.Pool.__init__": {"tf": 1}}, "df": 1}, "6": {"docs": {"icepool.standard": {"tf": 1}, "icepool.d": {"tf": 1}, "icepool.Die.__init__": {"tf": 3}, "icepool.apply": {"tf": 2}, "icepool.Pool.__init__": {"tf": 1}, "icepool.standard_pool": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1.4142135623730951}}, "df": 7}, "8": {"docs": {"icepool.Pool.__init__": {"tf": 1}, "icepool.standard_pool": {"tf": 1}}, "df": 2}, "docs": {"icepool.standard": {"tf": 1}, "icepool.d": {"tf": 1}, "icepool.bernoulli": {"tf": 1}, "icepool.coin": {"tf": 1}, "icepool.Die.__init__": {"tf": 2}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Population.quantile": {"tf": 1}, "icepool.Population.quantile_left": {"tf": 1}, "icepool.Population.quantile_right": {"tf": 1}}, "df": 9, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool": {"tf": 1.4142135623730951}, "icepool.Die": {"tf": 1.7320508075688772}, "icepool.Die.__init__": {"tf": 1.7320508075688772}, "icepool.Die.binary_op": {"tf": 1.7320508075688772}, "icepool.Die.sub": {"tf": 1.4142135623730951}, "icepool.Die.explode": {"tf": 1}, "icepool.Die.keep_lowest": {"tf": 2}, "icepool.Die.keep_highest": {"tf": 1.7320508075688772}, "icepool.Die.equals": {"tf": 2}, "icepool.align": {"tf": 1.7320508075688772}, "icepool.align_range": {"tf": 1.7320508075688772}, "icepool.lowest": {"tf": 2.449489742783178}, "icepool.highest": {"tf": 2.449489742783178}, "icepool.min_outcome": {"tf": 1}, "icepool.max_outcome": {"tf": 1}, "icepool.reduce": {"tf": 2.23606797749979}, "icepool.accumulate": {"tf": 2.449489742783178}, "icepool.apply": {"tf": 3}, "icepool.apply_sorted": {"tf": 2.23606797749979}, "icepool.OutcomeCountGenerator": {"tf": 1}, "icepool.OutcomeCountGenerator.sum": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.Pool.__init__": {"tf": 2.449489742783178}, "icepool.Pool.size": {"tf": 1}, "icepool.Pool.unique_dice": {"tf": 1}, "icepool.Pool.outcomes": {"tf": 1}, "icepool.Pool.post_roll_counts": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 3.3166247903554}, "icepool.Pool.min_outcome": {"tf": 1}, "icepool.Pool.max_outcome": {"tf": 1}, "icepool.Pool.lowest": {"tf": 1.7320508075688772}, "icepool.Pool.highest": {"tf": 1.7320508075688772}, "icepool.standard_pool": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1.4142135623730951}}, "df": 35}, "t": {"docs": {"icepool.Die.__init__": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool": {"tf": 1}, "icepool.Die": {"tf": 1}, "icepool.Die.__init__": {"tf": 1}, "icepool.Die.keep_lowest": {"tf": 1}, "icepool.Die.keep_highest": {"tf": 1}, "icepool.Population.probabilities_le": {"tf": 1}, "icepool.Population.probabilities_ge": {"tf": 1}, "icepool.from_cumulative_quantities": {"tf": 1}, "icepool.from_rv": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 11, "s": {"docs": {"icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Pool": {"tf": 1}}, "df": 1}}}}}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"icepool.from_rv": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {"icepool.standard": {"tf": 2}, "icepool.d": {"tf": 2}, "icepool.bernoulli": {"tf": 1.4142135623730951}, "icepool.coin": {"tf": 1.4142135623730951}, "icepool.Die": {"tf": 1.7320508075688772}, "icepool.Die.__init__": {"tf": 3.872983346207417}, "icepool.Die.unary_op": {"tf": 1}, "icepool.Die.binary_op": {"tf": 2.449489742783178}, "icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.truncate": {"tf": 1.4142135623730951}, "icepool.Die.clip": {"tf": 1}, "icepool.Die.set_range": {"tf": 1.7320508075688772}, "icepool.Die.set_outcomes": {"tf": 1}, "icepool.Die.sub": {"tf": 2.23606797749979}, "icepool.Die.pool": {"tf": 1.4142135623730951}, "icepool.Die.keep_lowest": {"tf": 1.4142135623730951}, "icepool.Die.keep_highest": {"tf": 1.4142135623730951}, "icepool.Die.marginals": {"tf": 1}, "icepool.Die.zero": {"tf": 1.4142135623730951}, "icepool.Die.zero_outcome": {"tf": 1.4142135623730951}, "icepool.Die.cmp": {"tf": 1}, "icepool.Die.bool": {"tf": 1}, "icepool.Die.key_tuple": {"tf": 1}, "icepool.Die.equals": {"tf": 2.449489742783178}, "icepool.Population": {"tf": 1}, "icepool.from_cumulative_quantities": {"tf": 1.4142135623730951}, "icepool.from_rv": {"tf": 1.7320508075688772}, "icepool.align": {"tf": 1}, "icepool.align_range": {"tf": 1}, "icepool.lowest": {"tf": 1}, "icepool.highest": {"tf": 1}, "icepool.apply": {"tf": 2.6457513110645907}, "icepool.apply_sorted": {"tf": 2}, "icepool.OutcomeCountGenerator.sum": {"tf": 1}, "icepool.Pool.__init__": {"tf": 2}, "icepool.Pool.size": {"tf": 1}, "icepool.Pool.post_roll_counts": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 2.8284271247461903}, "icepool.standard_pool": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 2}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 2}, "icepool.Deck.__init__": {"tf": 1.4142135623730951}}, "df": 45}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.OutcomeCountEvaluator.direction": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Population.outcome_len": {"tf": 1}}, "df": 2}, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Population.kolmogorov_smirnov": {"tf": 1}, "icepool.Population.cramer_von_mises": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 3}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.__init__": {"tf": 1}}, "df": 1}, "s": {"docs": {"icepool.Die.reduce": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Population.median": {"tf": 1}, "icepool.Population.quantile": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Die.unary_op": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1.4142135623730951}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.JointEvaluator": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.JointEvaluator.direction": {"tf": 1}, "icepool.EvaluateSum.direction": {"tf": 1}}, "df": 4, "s": {"docs": {"icepool.JointEvaluator.direction": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {"icepool.Die.zero": {"tf": 1}}, "df": 1}}, "o": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}, "icepool.Population.median": {"tf": 1}, "icepool.Population.quantile": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}}, "df": 4, "n": {"docs": {"icepool.standard": {"tf": 1}, "icepool.d": {"tf": 1}, "icepool.Die.__init__": {"tf": 1.4142135623730951}}, "df": 3, "e": {"docs": {"icepool.Die.zero": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Die.binary_op": {"tf": 1}, "icepool.Die.equals": {"tf": 1.4142135623730951}}, "df": 2, "n": {"docs": {"icepool.EvaluateSum.direction": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 2, "d": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.explode": {"tf": 1}, "icepool.Population.format": {"tf": 1}, "icepool.accumulate": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 8}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"icepool.Die.__init__": {"tf": 1.4142135623730951}, "icepool.Population": {"tf": 1}, "icepool.Population.sample": {"tf": 1}, "icepool.OutcomeCountGenerator": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.Deck.__init__": {"tf": 2.23606797749979}, "icepool.Deck.deal": {"tf": 1}, "icepool.Deck.marginals": {"tf": 1}, "icepool.Deal": {"tf": 1}, "icepool.Deal.__init__": {"tf": 1.4142135623730951}, "icepool.Deal.deck": {"tf": 1}, "icepool.Deal.outcomes": {"tf": 1.4142135623730951}}, "df": 12, "s": {"docs": {"icepool.OutcomeCountGenerator": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Deck.deal": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.__init__": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}}, "df": 2, "d": {"docs": {"icepool.Die.equals": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}}, "df": 2}, "s": {"docs": {"icepool.JointEvaluator.direction": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Die.__init__": {"tf": 1.4142135623730951}, "icepool.Die.reduce": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.zero": {"tf": 1}, "icepool.from_rv": {"tf": 1.4142135623730951}}, "df": 5, "s": {"docs": {"icepool.Die.__init__": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.explode": {"tf": 1}, "icepool.Reroll": {"tf": 1}}, "df": 5}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.OutcomeCountEvaluator.next_state": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.JointEvaluator.direction": {"tf": 1}}, "df": 3}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Deck.deal": {"tf": 1.4142135623730951}, "icepool.Deal": {"tf": 1}, "icepool.Deal.__init__": {"tf": 1.7320508075688772}}, "df": 3, "t": {"docs": {"icepool.Deal.deck": {"tf": 1}, "icepool.Deal.hand_sizes": {"tf": 1}, "icepool.Deal.total_cards_dealt": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.keep_lowest": {"tf": 1}, "icepool.Die.keep_highest": {"tf": 1}, "icepool.lowest": {"tf": 1}, "icepool.highest": {"tf": 1}, "icepool.Pool.lowest": {"tf": 1}, "icepool.Pool.highest": {"tf": 1}}, "df": 7, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.keep_lowest": {"tf": 1}, "icepool.Die.keep_highest": {"tf": 1}, "icepool.lowest": {"tf": 1}, "icepool.highest": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.Pool.lowest": {"tf": 1}, "icepool.Pool.highest": {"tf": 1}}, "df": 8}}}}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Die.equals": {"tf": 1}}, "df": 1}}, "p": {"docs": {"icepool.Deck.__init__": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Population.denominator": {"tf": 1}, "icepool.Deck": {"tf": 1}, "icepool.Deck.size": {"tf": 1}}, "df": 3}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"icepool.Die.equals": {"tf": 1}}, "df": 1}}}, "x": {"docs": {"icepool.standard_pool": {"tf": 1}}, "df": 1}}, "a": {"docs": {"icepool": {"tf": 1.4142135623730951}, "icepool.standard": {"tf": 1.7320508075688772}, "icepool.d": {"tf": 1.7320508075688772}, "icepool.bernoulli": {"tf": 1}, "icepool.coin": {"tf": 1}, "icepool.Die": {"tf": 2.449489742783178}, "icepool.Die.__init__": {"tf": 4.69041575982343}, "icepool.Die.unary_op": {"tf": 1.7320508075688772}, "icepool.Die.binary_op": {"tf": 2}, "icepool.Die.reroll": {"tf": 2.23606797749979}, "icepool.Die.reroll_until": {"tf": 2.23606797749979}, "icepool.Die.sub": {"tf": 2.8284271247461903}, "icepool.Die.explode": {"tf": 2}, "icepool.Die.pool": {"tf": 1}, "icepool.Die.keep_lowest": {"tf": 1}, "icepool.Die.keep_highest": {"tf": 1}, "icepool.Die.marginals": {"tf": 1}, "icepool.Die.zero": {"tf": 1}, "icepool.Die.zero_outcome": {"tf": 1.4142135623730951}, "icepool.Die.cmp": {"tf": 1}, "icepool.Die.bool": {"tf": 1.7320508075688772}, "icepool.Die.key_tuple": {"tf": 1}, "icepool.Die.equals": {"tf": 2.8284271247461903}, "icepool.Population": {"tf": 1}, "icepool.Population.marginals": {"tf": 1}, "icepool.Population.quantity": {"tf": 1}, "icepool.Population.quantity_ne": {"tf": 1}, "icepool.Population.quantity_le": {"tf": 1}, "icepool.Population.quantity_lt": {"tf": 1}, "icepool.Population.quantity_ge": {"tf": 1}, "icepool.Population.quantity_gt": {"tf": 1}, "icepool.Population.probability": {"tf": 1}, "icepool.Population.mode": {"tf": 1}, "icepool.Population.median": {"tf": 1}, "icepool.Population.median_left": {"tf": 1}, "icepool.Population.median_right": {"tf": 1}, "icepool.Population.quantile": {"tf": 1}, "icepool.Population.quantile_left": {"tf": 1}, "icepool.Population.quantile_right": {"tf": 1}, "icepool.Population.sample": {"tf": 1}, "icepool.Population.format": {"tf": 1.4142135623730951}, "icepool.CountsKeysView": {"tf": 1.4142135623730951}, "icepool.CountsValuesView": {"tf": 1.4142135623730951}, "icepool.CountsItemsView": {"tf": 1}, "icepool.from_cumulative_quantities": {"tf": 1.7320508075688772}, "icepool.from_rv": {"tf": 1.7320508075688772}, "icepool.align": {"tf": 1}, "icepool.align_range": {"tf": 1}, "icepool.reduce": {"tf": 1.7320508075688772}, "icepool.accumulate": {"tf": 1.7320508075688772}, "icepool.apply": {"tf": 2.449489742783178}, "icepool.apply_sorted": {"tf": 1.4142135623730951}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1.7320508075688772}, "icepool.OutcomeCountGenerator.sum": {"tf": 1}, "icepool.OutcomeCountGenerator.sample": {"tf": 1.4142135623730951}, "icepool.Pool": {"tf": 1.4142135623730951}, "icepool.Pool.__init__": {"tf": 3}, "icepool.Pool.set_post_roll_counts": {"tf": 3.872983346207417}, "icepool.standard_pool": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 2}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 2.6457513110645907}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 3.4641016151377544}, "icepool.OutcomeCountEvaluator.direction": {"tf": 2.23606797749979}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 2.449489742783178}, "icepool.JointEvaluator": {"tf": 1.4142135623730951}, "icepool.JointEvaluator.next_state": {"tf": 1}, "icepool.JointEvaluator.final_outcome": {"tf": 1}, "icepool.EvaluateSum": {"tf": 1.4142135623730951}, "icepool.EvaluateSum.final_outcome": {"tf": 3.4641016151377544}, "icepool.Deck": {"tf": 1}, "icepool.Deck.__init__": {"tf": 3}, "icepool.Deck.deal": {"tf": 1}, "icepool.Deck.marginals": {"tf": 1}, "icepool.Deal": {"tf": 1}, "icepool.Deal.__init__": {"tf": 1}, "icepool.Deal.hand_sizes": {"tf": 1}, "icepool.Deal.outcomes": {"tf": 1}}, "df": 79, "n": {"docs": {"icepool": {"tf": 1}, "icepool.Die.__init__": {"tf": 1.4142135623730951}, "icepool.Die.unary_op": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Die.reroll": {"tf": 1.4142135623730951}, "icepool.Die.reroll_until": {"tf": 1.4142135623730951}, "icepool.Die.explode": {"tf": 1.4142135623730951}, "icepool.Die.equals": {"tf": 1}, "icepool.CountsItemsView": {"tf": 1}, "icepool.from_rv": {"tf": 1}, "icepool.reduce": {"tf": 1}, "icepool.accumulate": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.apply_sorted": {"tf": 1}, "icepool.Reroll": {"tf": 1}, "icepool.OutcomeCountGenerator": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1.7320508075688772}, "icepool.Pool.set_post_roll_counts": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.JointEvaluator": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}, "icepool.Deal": {"tf": 1}}, "df": 29, "d": {"docs": {"icepool": {"tf": 2}, "icepool.bernoulli": {"tf": 1.4142135623730951}, "icepool.coin": {"tf": 1.4142135623730951}, "icepool.Die": {"tf": 1.7320508075688772}, "icepool.Die.__init__": {"tf": 2.8284271247461903}, "icepool.Die.unary_op": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1.4142135623730951}, "icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.explode": {"tf": 1.4142135623730951}, "icepool.Die.if_else": {"tf": 1}, "icepool.Die.keep_lowest": {"tf": 1}, "icepool.Die.keep_highest": {"tf": 1}, "icepool.Die.cmp": {"tf": 1.4142135623730951}, "icepool.Die.sign": {"tf": 1.4142135623730951}, "icepool.Die.key_tuple": {"tf": 1}, "icepool.Die.equals": {"tf": 1.7320508075688772}, "icepool.Population": {"tf": 1.4142135623730951}, "icepool.Population.sample": {"tf": 1}, "icepool.CountsKeysView": {"tf": 1}, "icepool.CountsValuesView": {"tf": 1}, "icepool.CountsItemsView": {"tf": 1}, "icepool.accumulate": {"tf": 1}, "icepool.apply": {"tf": 1.7320508075688772}, "icepool.apply_sorted": {"tf": 1.4142135623730951}, "icepool.OutcomeCountGenerator": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1.4142135623730951}, "icepool.OutcomeCountGenerator.sample": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 2.449489742783178}, "icepool.OutcomeCountEvaluator": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.sample": {"tf": 1}, "icepool.JointEvaluator.direction": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1.4142135623730951}, "icepool.Deck.__init__": {"tf": 2}}, "df": 38, "/": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Die.set_outcomes": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}, "icepool.Die.__init__": {"tf": 1}, "icepool.Die.key_tuple": {"tf": 1.4142135623730951}, "icepool.Population.modal_quantity": {"tf": 1}, "icepool.Population.format": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.apply_sorted": {"tf": 1}, "icepool.Pool.lowest": {"tf": 1}, "icepool.Pool.highest": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1.7320508075688772}, "icepool.EvaluateSum.final_outcome": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 17, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool": {"tf": 1}, "icepool.Die.__init__": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 3}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"icepool.reduce": {"tf": 1}, "icepool.accumulate": {"tf": 1}}, "df": 2}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"icepool": {"tf": 1.4142135623730951}, "icepool.standard": {"tf": 1}, "icepool.d": {"tf": 1}, "icepool.Die": {"tf": 1.4142135623730951}, "icepool.Die.__init__": {"tf": 2}, "icepool.Die.unary_op": {"tf": 1.4142135623730951}, "icepool.Die.binary_op": {"tf": 2}, "icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.truncate": {"tf": 1}, "icepool.Die.clip": {"tf": 1}, "icepool.Die.set_outcomes": {"tf": 1.4142135623730951}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.explode": {"tf": 1}, "icepool.Die.zero_outcome": {"tf": 1}, "icepool.Die.cmp": {"tf": 1}, "icepool.Die.equals": {"tf": 1}, "icepool.Population.outcomes": {"tf": 1}, "icepool.Population.outcome_len": {"tf": 1.4142135623730951}, "icepool.Population.quantities": {"tf": 1}, "icepool.Population.probabilities_ge": {"tf": 1.4142135623730951}, "icepool.Population.mode": {"tf": 1}, "icepool.Population.sample": {"tf": 1}, "icepool.Population.format": {"tf": 1}, "icepool.from_cumulative_quantities": {"tf": 1}, "icepool.reduce": {"tf": 1}, "icepool.accumulate": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1.4142135623730951}, "icepool.Pool.set_post_roll_counts": {"tf": 2.23606797749979}, "icepool.OutcomeCountEvaluator": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 2.449489742783178}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.JointEvaluator.direction": {"tf": 1.4142135623730951}, "icepool.EvaluateSum.final_outcome": {"tf": 1.4142135623730951}, "icepool.Deck.__init__": {"tf": 1}, "icepool.Deal.__init__": {"tf": 1}, "icepool.Deal.deck": {"tf": 1}, "icepool.Deal.outcomes": {"tf": 1}}, "df": 42}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die.__init__": {"tf": 2.23606797749979}, "icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.set_outcomes": {"tf": 1.4142135623730951}, "icepool.Die.sub": {"tf": 1.4142135623730951}, "icepool.Die.explode": {"tf": 1}, "icepool.Die.if_else": {"tf": 1.4142135623730951}, "icepool.Population.nearest_le": {"tf": 1}, "icepool.Population.nearest_ge": {"tf": 1}, "icepool.align": {"tf": 1}, "icepool.align_range": {"tf": 1}, "icepool.apply": {"tf": 1.7320508075688772}, "icepool.apply_sorted": {"tf": 1.7320508075688772}, "icepool.Pool.__init__": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 15, "s": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Die.__init__": {"tf": 1.4142135623730951}, "icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.truncate": {"tf": 1}, "icepool.Die.clip": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.explode": {"tf": 1}, "icepool.Die.zero": {"tf": 1}, "icepool.from_cumulative_quantities": {"tf": 1}, "icepool.reduce": {"tf": 1.4142135623730951}, "icepool.accumulate": {"tf": 1.4142135623730951}, "icepool.apply": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}}, "df": 15}}}}}}, "s": {"docs": {"icepool.Die.__init__": {"tf": 1.4142135623730951}, "icepool.Die.reroll": {"tf": 2}, "icepool.Die.reroll_until": {"tf": 2}, "icepool.Die.set_range": {"tf": 1}, "icepool.Die.sub": {"tf": 2}, "icepool.Die.explode": {"tf": 2}, "icepool.Die.pool": {"tf": 1}, "icepool.Die.keep_lowest": {"tf": 1}, "icepool.Die.keep_highest": {"tf": 1}, "icepool.Die.equals": {"tf": 1}, "icepool.Population.probabilities": {"tf": 1}, "icepool.Population.probabilities_le": {"tf": 1}, "icepool.Population.probabilities_ge": {"tf": 1}, "icepool.from_cumulative_quantities": {"tf": 1}, "icepool.from_rv": {"tf": 1}, "icepool.align": {"tf": 1}, "icepool.align_range": {"tf": 1}, "icepool.lowest": {"tf": 1}, "icepool.highest": {"tf": 1}, "icepool.reduce": {"tf": 1}, "icepool.accumulate": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.apply_sorted": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.Pool.lowest": {"tf": 1.4142135623730951}, "icepool.Pool.highest": {"tf": 1.4142135623730951}, "icepool.standard_pool": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}, "icepool.Deal.__init__": {"tf": 1}}, "df": 36}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"icepool.OutcomeCountEvaluator": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 7}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"icepool": {"tf": 1}, "icepool.Die.key_tuple": {"tf": 1}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.reduce": {"tf": 1.4142135623730951}, "icepool.accumulate": {"tf": 1.4142135623730951}, "icepool.apply": {"tf": 2}, "icepool.apply_sorted": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 7, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Die.unary_op": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.truncate": {"tf": 1}, "icepool.Die.clip": {"tf": 1}, "icepool.Population.format": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Die.marginals": {"tf": 1}, "icepool.Population.marginals": {"tf": 1}, "icepool.reduce": {"tf": 1}, "icepool.accumulate": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.apply_sorted": {"tf": 1}, "icepool.Deck.marginals": {"tf": 1}}, "df": 7}, "d": {"docs": {"icepool.reduce": {"tf": 1}, "icepool.accumulate": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1.7320508075688772}}, "df": 1, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1.4142135623730951}}, "df": 1}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 3}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"icepool.accumulate": {"tf": 1}}, "df": 1, "d": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.reroll_until": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"icepool": {"tf": 1}, "icepool.Die": {"tf": 1}, "icepool.Die.__init__": {"tf": 1.7320508075688772}, "icepool.Die.reduce": {"tf": 1}, "icepool.Die.trim": {"tf": 1}, "icepool.Die.keep_lowest": {"tf": 1}, "icepool.Die.zero": {"tf": 1}, "icepool.Die.cmp": {"tf": 1}, "icepool.Die.sign": {"tf": 1}, "icepool.Die.bool": {"tf": 1}, "icepool.Population.denominator": {"tf": 1}, "icepool.align": {"tf": 1}, "icepool.align_range": {"tf": 1}, "icepool.apply": {"tf": 1.4142135623730951}, "icepool.apply_sorted": {"tf": 2}, "icepool.OutcomeCountGenerator.denominator": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1.7320508075688772}, "icepool.Pool.denominator": {"tf": 1}, "icepool.Pool.outcomes": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.Pool.min_outcome": {"tf": 1}, "icepool.Pool.max_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.JointEvaluator.next_state": {"tf": 1}, "icepool.JointEvaluator.final_outcome": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}, "icepool.Deck.size": {"tf": 1}, "icepool.Deal.denominator": {"tf": 1}}, "df": 32, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {"icepool.from_cumulative_quantities": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"icepool.standard": {"tf": 1}, "icepool.d": {"tf": 1}, "icepool.Die.__init__": {"tf": 1.4142135623730951}, "icepool.Population.sample": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}}, "df": 8}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.align": {"tf": 1}, "icepool.align_range": {"tf": 1}}, "df": 2}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.OutcomeCountEvaluator.next_state": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1.7320508075688772}}, "df": 3}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {"icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Die.__init__": {"tf": 1.4142135623730951}, "icepool.Population.outcomes": {"tf": 1}, "icepool.Population.quantities": {"tf": 1}, "icepool.Population.probabilities": {"tf": 1}, "icepool.Population.probabilities_le": {"tf": 1}, "icepool.Population.probabilities_ge": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1.4142135623730951}, "icepool.Deal.outcomes": {"tf": 1}}, "df": 9}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 3}}}}}, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {"icepool.Die.binary_op": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "c": {"docs": {"icepool.Deal.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"icepool.bernoulli": {"tf": 1}, "icepool.coin": {"tf": 1}, "icepool.Die": {"tf": 1}, "icepool.Die.__init__": {"tf": 2.23606797749979}, "icepool.Die.unary_op": {"tf": 1.7320508075688772}, "icepool.Die.unary_op_non_elementwise": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Die.reroll": {"tf": 1.4142135623730951}, "icepool.Die.reroll_until": {"tf": 1.4142135623730951}, "icepool.Die.clip": {"tf": 1}, "icepool.Die.sub": {"tf": 2.23606797749979}, "icepool.Die.explode": {"tf": 1.4142135623730951}, "icepool.Die.keep_lowest": {"tf": 1}, "icepool.Die.zero": {"tf": 1}, "icepool.Die.bool": {"tf": 1}, "icepool.Die.key_tuple": {"tf": 1}, "icepool.Die.equals": {"tf": 1}, "icepool.Population.probabilities": {"tf": 1}, "icepool.Population.probabilities_le": {"tf": 1}, "icepool.Population.probabilities_ge": {"tf": 1}, "icepool.Population.format": {"tf": 1}, "icepool.CountsKeysView": {"tf": 1}, "icepool.CountsValuesView": {"tf": 1}, "icepool.CountsItemsView": {"tf": 1}, "icepool.from_rv": {"tf": 1.4142135623730951}, "icepool.accumulate": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1.4142135623730951}, "icepool.Pool.set_post_roll_counts": {"tf": 2.8284271247461903}, "icepool.OutcomeCountEvaluator": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1.4142135623730951}, "icepool.JointEvaluator": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1.4142135623730951}, "icepool.Deck.__init__": {"tf": 2}, "icepool.Deck.unary_op_non_elementwise": {"tf": 1}, "icepool.Deal.__init__": {"tf": 1}, "icepool.Deal.hand_sizes": {"tf": 1}, "icepool.Deal.outcomes": {"tf": 1}}, "df": 38, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1.4142135623730951}, "icepool.JointEvaluator.direction": {"tf": 1}}, "df": 5}}}}}}}}, "t": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Die.clip": {"tf": 1}, "icepool.Population.has_zero_quantities": {"tf": 1}, "icepool.lowest": {"tf": 1}, "icepool.highest": {"tf": 1}, "icepool.reduce": {"tf": 1}, "icepool.accumulate": {"tf": 1}, "icepool.apply": {"tf": 1.4142135623730951}, "icepool.apply_sorted": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 11}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.sub": {"tf": 1.4142135623730951}, "icepool.Die.explode": {"tf": 1}, "icepool.Population.format": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 11}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.apply": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"icepool.EvaluateSum.direction": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"icepool.Die.unary_op": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Population.kolmogorov_smirnov": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"icepool.OutcomeCountGenerator": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.OutcomeCountEvaluator": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 7}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.set_outcomes": {"tf": 1}, "icepool.EvaluateSum.next_state": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Die.unary_op": {"tf": 1}, "icepool.Die.explode": {"tf": 1}, "icepool.accumulate": {"tf": 1}, "icepool.apply": {"tf": 1}}, "df": 4, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Die.binary_op": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.explode": {"tf": 1}}, "df": 1}}}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.clip": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"icepool.Die.binary_op": {"tf": 1}}, "df": 1}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Population.probabilities_le": {"tf": 1}, "icepool.Population.probabilities_ge": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.lowest": {"tf": 1}, "icepool.highest": {"tf": 1}, "icepool.min_outcome": {"tf": 1}, "icepool.max_outcome": {"tf": 1}, "icepool.Pool.outcomes": {"tf": 1}, "icepool.Pool.min_outcome": {"tf": 1}, "icepool.Pool.max_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}}, "df": 8}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Die.explode": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.OutcomeCountEvaluator.direction": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "s": {"docs": {"icepool.standard": {"tf": 1}, "icepool.d": {"tf": 1}, "icepool.Die": {"tf": 1.4142135623730951}, "icepool.Die.__init__": {"tf": 1.4142135623730951}, "icepool.Die.items": {"tf": 1}, "icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.explode": {"tf": 1}, "icepool.Die.zero": {"tf": 1}, "icepool.Die.zero_outcome": {"tf": 1}, "icepool.Die.sign": {"tf": 1}, "icepool.Population.items": {"tf": 1}, "icepool.Population.mode": {"tf": 1}, "icepool.from_rv": {"tf": 1.7320508075688772}, "icepool.OutcomeCountGenerator": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.sample": {"tf": 1}, "icepool.JointEvaluator": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1.4142135623730951}, "icepool.Deck.items": {"tf": 1}}, "df": 28, "e": {"docs": {}, "df": 0, "e": {"docs": {"icepool": {"tf": 1}, "icepool.Die.__init__": {"tf": 1}, "icepool.Die.unary_op": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.Deck.deal": {"tf": 1}}, "df": 7, "n": {"docs": {"icepool.OutcomeCountEvaluator.next_state": {"tf": 2.23606797749979}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1.4142135623730951}}, "df": 2}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"icepool": {"tf": 1}}, "df": 1, "d": {"docs": {"icepool.Population.format": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "t": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Die.__init__": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.set_outcomes": {"tf": 1}, "icepool.Die.sub": {"tf": 1.4142135623730951}, "icepool.Die.explode": {"tf": 1}, "icepool.Population.probabilities": {"tf": 1}, "icepool.Population.probabilities_le": {"tf": 1}, "icepool.Population.probabilities_ge": {"tf": 1}, "icepool.from_rv": {"tf": 1}, "icepool.align": {"tf": 1}, "icepool.align_range": {"tf": 1}, "icepool.OutcomeCountGenerator.outcomes": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1.4142135623730951}, "icepool.EvaluateSum.final_outcome": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 23, "s": {"docs": {"icepool.Die.set_range": {"tf": 1}, "icepool.Die.set_outcomes": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.__init__": {"tf": 1.4142135623730951}, "icepool.Die.sub": {"tf": 1}, "icepool.CountsKeysView": {"tf": 1}, "icepool.CountsValuesView": {"tf": 1}, "icepool.CountsItemsView": {"tf": 1}, "icepool.from_cumulative_quantities": {"tf": 1}, "icepool.reduce": {"tf": 1.7320508075688772}, "icepool.accumulate": {"tf": 1.7320508075688772}, "icepool.Pool.__init__": {"tf": 1.4142135623730951}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1.4142135623730951}}, "df": 13}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Die.__init__": {"tf": 1.4142135623730951}, "icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1.7320508075688772}}, "df": 2}}, "s": {"docs": {"icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}}, "df": 2}}}}, "f": {"docs": {"icepool.Die.keep_lowest": {"tf": 1}, "icepool.Die.cmp": {"tf": 1.4142135623730951}, "icepool.Population.has_zero_quantities": {"tf": 1}}, "df": 3}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.if_else": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Population.sample": {"tf": 1}, "icepool.OutcomeCountGenerator.sample": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Die.keep_lowest": {"tf": 1}, "icepool.Die.keep_highest": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {"icepool.Population.format": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool": {"tf": 1.4142135623730951}, "icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 2}}, "c": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Die.__init__": {"tf": 1}, "icepool.Die.unary_op": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}}, "df": 4, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.standard": {"tf": 1}, "icepool.d": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 3}}}}}}, "y": {"docs": {"icepool.OutcomeCountEvaluator.alignment": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Die.sub": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Die.sub": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Population.format": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {"icepool.Die.marginals": {"tf": 1}, "icepool.Population.marginals": {"tf": 1}, "icepool.align": {"tf": 1}, "icepool.align_range": {"tf": 1}, "icepool.Deck.marginals": {"tf": 1}}, "df": 5, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.keys": {"tf": 1}, "icepool.Die.items": {"tf": 1}, "icepool.Die.keep_lowest": {"tf": 1}, "icepool.Die.keep_highest": {"tf": 1}, "icepool.Population.keys": {"tf": 1}, "icepool.Population.items": {"tf": 1}, "icepool.Population.outcomes": {"tf": 1}, "icepool.Population.quantities": {"tf": 1}, "icepool.Population.mode": {"tf": 1}, "icepool.from_cumulative_quantities": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.apply_sorted": {"tf": 1.7320508075688772}, "icepool.OutcomeCountGenerator.outcomes": {"tf": 1}, "icepool.OutcomeCountGenerator.sample": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.Deck.keys": {"tf": 1}, "icepool.Deck.items": {"tf": 1}, "icepool.Deal.outcomes": {"tf": 1}}, "df": 18, "/": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Pool": {"tf": 1}, "icepool.Deal": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.unary_op": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Die.clip": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.JointEvaluator.direction": {"tf": 1}}, "df": 6}}, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"icepool.apply": {"tf": 1.4142135623730951}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"icepool.standard": {"tf": 1}, "icepool.d": {"tf": 1}, "icepool.Die.unary_op": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1.4142135623730951}, "icepool.Population.sample": {"tf": 1}, "icepool.OutcomeCountGenerator.sample": {"tf": 1}, "icepool.standard_pool": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}}, "df": 8}}}}}, "r": {"docs": {"icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.explode": {"tf": 1}}, "df": 4, "t": {"docs": {"icepool.Population.format": {"tf": 1}}, "df": 1}}, "y": {"docs": {"icepool.Die.sub": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"icepool.Population.kolmogorov_smirnov": {"tf": 1}, "icepool.Population.cramer_von_mises": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {"icepool.from_rv": {"tf": 1.4142135623730951}}, "df": 1}, "e": {"docs": {"icepool.OutcomeCountGenerator.evaluate": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator": {"tf": 4.69041575982343}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 3.1622776601683795}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 2.23606797749979}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1.7320508075688772}, "icepool.JointEvaluator.next_state": {"tf": 1.4142135623730951}, "icepool.JointEvaluator.final_outcome": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 2.23606797749979}, "icepool.Deal.__init__": {"tf": 1}}, "df": 10, "s": {"docs": {"icepool.OutcomeCountEvaluator.next_state": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Die.sub": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"icepool.apply": {"tf": 1}, "icepool.apply_sorted": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Population.format": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.binary_op": {"tf": 1}, "icepool.Die.truncate": {"tf": 1}, "icepool.Die.clip": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1.4142135623730951}, "icepool.Pool.set_post_roll_counts": {"tf": 1.4142135623730951}}, "df": 5, "s": {"docs": {"icepool.standard": {"tf": 1}, "icepool.d": {"tf": 1}}, "df": 2}, "d": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 1}}}, "x": {"docs": {"icepool.Die.__init__": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.equals": {"tf": 1}, "icepool.Population.sample": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 4}}, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.__init__": {"tf": 1.4142135623730951}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.zero": {"tf": 1}, "icepool.Population.quantity": {"tf": 1}, "icepool.Population.quantity_ne": {"tf": 1}, "icepool.Population.quantity_le": {"tf": 1}, "icepool.Population.quantity_lt": {"tf": 1}, "icepool.Population.quantity_ge": {"tf": 1}, "icepool.Population.quantity_gt": {"tf": 1}, "icepool.Population.probability": {"tf": 1}, "icepool.Population.modal_quantity": {"tf": 1}, "icepool.Population.sample": {"tf": 1}, "icepool.OutcomeCountGenerator.sample": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1.4142135623730951}, "icepool.Pool.set_post_roll_counts": {"tf": 2}, "icepool.Deck": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1.4142135623730951}}, "df": 17}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Die.clip": {"tf": 1}, "icepool.OutcomeCountGenerator.sum": {"tf": 1}}, "df": 2}, "e": {"docs": {"icepool.EvaluateSum": {"tf": 1}}, "df": 1}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 3}, "icepool.standard_pool": {"tf": 1}}, "df": 2, "s": {"docs": {"icepool.standard_pool": {"tf": 1}, "icepool.Deal.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Deck": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"icepool.Population.variance": {"tf": 1}, "icepool.Population.sample": {"tf": 1}, "icepool.OutcomeCountGenerator.sample": {"tf": 1}}, "df": 3, "s": {"docs": {"icepool.OutcomeCountEvaluator.sample": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Die.__init__": {"tf": 1.7320508075688772}, "icepool.Die.binary_op": {"tf": 1.4142135623730951}, "icepool.Die.clip": {"tf": 1}, "icepool.Die.sub": {"tf": 1.4142135623730951}, "icepool.Die.keep_lowest": {"tf": 1}, "icepool.Die.zero": {"tf": 1}, "icepool.Die.equals": {"tf": 1}, "icepool.align": {"tf": 1}, "icepool.align_range": {"tf": 1}, "icepool.accumulate": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.Pool.__init__": {"tf": 2}, "icepool.Pool.size": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.JointEvaluator": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1.4142135623730951}}, "df": 18}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Population.nearest_le": {"tf": 1}, "icepool.Population.nearest_ge": {"tf": 1}}, "df": 3}}, "b": {"docs": {"icepool.Die.unary_op": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Die.sub": {"tf": 1.7320508075688772}, "icepool.JointEvaluator": {"tf": 1}}, "df": 4, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"icepool.OutcomeCountEvaluator.next_state": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1.4142135623730951}, "icepool.EvaluateSum.final_outcome": {"tf": 1.4142135623730951}}, "df": 6, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Population": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1.4142135623730951}}, "df": 5}}}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"icepool.JointEvaluator.next_state": {"tf": 1}, "icepool.JointEvaluator.final_outcome": {"tf": 1}, "icepool.JointEvaluator.direction": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.JointEvaluator.next_state": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.JointEvaluator.final_outcome": {"tf": 1}}, "df": 1}}}}}}}}}, "m": {"docs": {"icepool.Die.binary_op": {"tf": 1}, "icepool.Die.keep_lowest": {"tf": 1.4142135623730951}, "icepool.Die.keep_highest": {"tf": 1.4142135623730951}, "icepool.Population.denominator": {"tf": 1}, "icepool.Population.cramer_von_mises": {"tf": 1}, "icepool.lowest": {"tf": 1}, "icepool.highest": {"tf": 1}, "icepool.OutcomeCountGenerator.sum": {"tf": 1.7320508075688772}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.Pool.lowest": {"tf": 1}, "icepool.Pool.highest": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1.4142135623730951}, "icepool.Deck.size": {"tf": 1}}, "df": 13, "s": {"docs": {"icepool.Die.binary_op": {"tf": 1}, "icepool.EvaluateSum": {"tf": 1}}, "df": 2}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.lowest": {"tf": 1.4142135623730951}, "icepool.highest": {"tf": 1.4142135623730951}, "icepool.Pool.lowest": {"tf": 1.4142135623730951}, "icepool.Pool.highest": {"tf": 1.4142135623730951}}, "df": 4}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.reroll": {"tf": 1.7320508075688772}, "icepool.Die.reroll_until": {"tf": 1.7320508075688772}, "icepool.Die.sub": {"tf": 1.7320508075688772}, "icepool.Die.explode": {"tf": 2.23606797749979}}, "df": 4}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Population.median": {"tf": 1}, "icepool.Population.quantile": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Population.probabilities_ge": {"tf": 1}, "icepool.from_cumulative_quantities": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {"icepool.OutcomeCountEvaluator.next_state": {"tf": 1}}, "df": 1}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 1}}}}}}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.explode": {"tf": 1}, "icepool.Population.format": {"tf": 1.4142135623730951}, "icepool.reduce": {"tf": 1}, "icepool.accumulate": {"tf": 1}, "icepool.Reroll": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 15}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.marginals": {"tf": 1}, "icepool.Population.marginals": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.Deck.marginals": {"tf": 1}}, "df": 4}}}}, "f": {"docs": {"icepool.Population.probabilities_ge": {"tf": 1}}, "df": 1}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Population.cramer_von_mises": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"icepool.from_rv": {"tf": 1.4142135623730951}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"icepool.standard": {"tf": 1}, "icepool.d": {"tf": 1}, "icepool.Die.__init__": {"tf": 1.4142135623730951}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.EvaluateSum.direction": {"tf": 1}}, "df": 5, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"icepool": {"tf": 1}, "icepool.standard": {"tf": 1}, "icepool.d": {"tf": 1}, "icepool.Die": {"tf": 1}, "icepool.Die.__init__": {"tf": 3.1622776601683795}, "icepool.Die.unary_op": {"tf": 1.7320508075688772}, "icepool.Die.unary_op_non_elementwise": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1.7320508075688772}, "icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.truncate": {"tf": 1.4142135623730951}, "icepool.Die.clip": {"tf": 2.23606797749979}, "icepool.Die.set_range": {"tf": 1.7320508075688772}, "icepool.Die.set_outcomes": {"tf": 1.4142135623730951}, "icepool.Die.sub": {"tf": 2.449489742783178}, "icepool.Die.explode": {"tf": 1}, "icepool.Die.if_else": {"tf": 1}, "icepool.Die.pool": {"tf": 1.4142135623730951}, "icepool.Die.keep_lowest": {"tf": 1.4142135623730951}, "icepool.Die.keep_highest": {"tf": 1.4142135623730951}, "icepool.Die.marginals": {"tf": 1.4142135623730951}, "icepool.Die.zero": {"tf": 1.7320508075688772}, "icepool.Die.zero_outcome": {"tf": 1}, "icepool.Die.cmp": {"tf": 1}, "icepool.Die.key_tuple": {"tf": 1.4142135623730951}, "icepool.Die.equals": {"tf": 1.7320508075688772}, "icepool.Population.marginals": {"tf": 1.4142135623730951}, "icepool.Population.outcome_len": {"tf": 1}, "icepool.Population.is_empty": {"tf": 1}, "icepool.Population.probabilities_le": {"tf": 1}, "icepool.Population.median": {"tf": 1.4142135623730951}, "icepool.Population.quantile": {"tf": 1.4142135623730951}, "icepool.Population.variance": {"tf": 1}, "icepool.Population.sample": {"tf": 1.7320508075688772}, "icepool.Population.format": {"tf": 1.4142135623730951}, "icepool.CountsKeysView": {"tf": 1}, "icepool.CountsValuesView": {"tf": 1}, "icepool.CountsItemsView": {"tf": 1}, "icepool.from_cumulative_quantities": {"tf": 1.4142135623730951}, "icepool.from_rv": {"tf": 1}, "icepool.lowest": {"tf": 1}, "icepool.highest": {"tf": 1}, "icepool.reduce": {"tf": 1}, "icepool.accumulate": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.apply_sorted": {"tf": 1}, "icepool.OutcomeCountGenerator.denominator": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 2.23606797749979}, "icepool.OutcomeCountGenerator.sum": {"tf": 1.4142135623730951}, "icepool.OutcomeCountGenerator.sample": {"tf": 1.7320508075688772}, "icepool.Pool": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.Pool.size": {"tf": 1}, "icepool.Pool.denominator": {"tf": 1}, "icepool.Pool.unique_dice": {"tf": 1}, "icepool.Pool.outcomes": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 3.1622776601683795}, "icepool.Pool.min_outcome": {"tf": 1}, "icepool.Pool.max_outcome": {"tf": 1}, "icepool.Pool.lowest": {"tf": 1.4142135623730951}, "icepool.Pool.highest": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.JointEvaluator": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1.7320508075688772}, "icepool.EvaluateSum.direction": {"tf": 1}, "icepool.Deck.__init__": {"tf": 2}, "icepool.Deck.unary_op_non_elementwise": {"tf": 1}, "icepool.Deck.deal": {"tf": 1}, "icepool.Deck.marginals": {"tf": 1.4142135623730951}, "icepool.Deal.__init__": {"tf": 1}, "icepool.Deal.denominator": {"tf": 1}}, "df": 76}, "n": {"docs": {}, "df": 0, "k": {"docs": {"icepool.Die.sub": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"icepool": {"tf": 2}, "icepool.standard": {"tf": 1.4142135623730951}, "icepool.d": {"tf": 1.4142135623730951}, "icepool.bernoulli": {"tf": 1}, "icepool.coin": {"tf": 1}, "icepool.Die": {"tf": 2}, "icepool.Die.__init__": {"tf": 5.916079783099616}, "icepool.Die.unary_op": {"tf": 2.8284271247461903}, "icepool.Die.binary_op": {"tf": 4.47213595499958}, "icepool.Die.keys": {"tf": 1.4142135623730951}, "icepool.Die.values": {"tf": 1.4142135623730951}, "icepool.Die.items": {"tf": 1.4142135623730951}, "icepool.Die.reroll": {"tf": 2.8284271247461903}, "icepool.Die.reroll_until": {"tf": 2.8284271247461903}, "icepool.Die.truncate": {"tf": 2.6457513110645907}, "icepool.Die.clip": {"tf": 3}, "icepool.Die.set_range": {"tf": 2.8284271247461903}, "icepool.Die.set_outcomes": {"tf": 1.7320508075688772}, "icepool.Die.sub": {"tf": 3.4641016151377544}, "icepool.Die.explode": {"tf": 2.23606797749979}, "icepool.Die.if_else": {"tf": 1.4142135623730951}, "icepool.Die.pool": {"tf": 1.4142135623730951}, "icepool.Die.keep_lowest": {"tf": 2.6457513110645907}, "icepool.Die.keep_highest": {"tf": 2.449489742783178}, "icepool.Die.marginals": {"tf": 1.4142135623730951}, "icepool.Die.zero": {"tf": 2}, "icepool.Die.cmp": {"tf": 1.7320508075688772}, "icepool.Die.bool": {"tf": 1.4142135623730951}, "icepool.Die.equals": {"tf": 2.8284271247461903}, "icepool.Population.keys": {"tf": 1.4142135623730951}, "icepool.Population.values": {"tf": 1.4142135623730951}, "icepool.Population.items": {"tf": 1.4142135623730951}, "icepool.Population.marginals": {"tf": 1.4142135623730951}, "icepool.Population.outcomes": {"tf": 2.23606797749979}, "icepool.Population.outcome_len": {"tf": 1}, "icepool.Population.min_outcome": {"tf": 1}, "icepool.Population.max_outcome": {"tf": 1}, "icepool.Population.nearest_le": {"tf": 1.4142135623730951}, "icepool.Population.nearest_ge": {"tf": 1.4142135623730951}, "icepool.Population.quantities": {"tf": 2.23606797749979}, "icepool.Population.denominator": {"tf": 1.4142135623730951}, "icepool.Population.quantities_le": {"tf": 1}, "icepool.Population.quantities_ge": {"tf": 1}, "icepool.Population.quantity": {"tf": 1}, "icepool.Population.quantity_ne": {"tf": 1}, "icepool.Population.quantity_le": {"tf": 1}, "icepool.Population.quantity_lt": {"tf": 1}, "icepool.Population.quantity_ge": {"tf": 1}, "icepool.Population.quantity_gt": {"tf": 1}, "icepool.Population.probabilities": {"tf": 2}, "icepool.Population.probabilities_le": {"tf": 2}, "icepool.Population.probabilities_ge": {"tf": 2}, "icepool.Population.probability": {"tf": 1}, "icepool.Population.mode": {"tf": 1.4142135623730951}, "icepool.Population.modal_quantity": {"tf": 1}, "icepool.Population.kolmogorov_smirnov": {"tf": 1}, "icepool.Population.cramer_von_mises": {"tf": 1}, "icepool.Population.median": {"tf": 1.7320508075688772}, "icepool.Population.median_left": {"tf": 1.4142135623730951}, "icepool.Population.median_right": {"tf": 1.4142135623730951}, "icepool.Population.quantile": {"tf": 2.23606797749979}, "icepool.Population.quantile_left": {"tf": 2}, "icepool.Population.quantile_right": {"tf": 2}, "icepool.Population.variance": {"tf": 1.4142135623730951}, "icepool.Population.sample": {"tf": 1}, "icepool.Population.format": {"tf": 1.7320508075688772}, "icepool.from_cumulative_quantities": {"tf": 2.449489742783178}, "icepool.from_rv": {"tf": 2.23606797749979}, "icepool.align": {"tf": 1}, "icepool.align_range": {"tf": 1}, "icepool.lowest": {"tf": 2.23606797749979}, "icepool.highest": {"tf": 2.23606797749979}, "icepool.min_outcome": {"tf": 1.4142135623730951}, "icepool.max_outcome": {"tf": 1.4142135623730951}, "icepool.reduce": {"tf": 2.449489742783178}, "icepool.accumulate": {"tf": 3}, "icepool.apply": {"tf": 3.3166247903554}, "icepool.apply_sorted": {"tf": 2}, "icepool.OutcomeCountGenerator.outcomes": {"tf": 1}, "icepool.OutcomeCountGenerator.denominator": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1.7320508075688772}, "icepool.OutcomeCountGenerator.sum": {"tf": 1.4142135623730951}, "icepool.OutcomeCountGenerator.sample": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.Pool.__init__": {"tf": 3}, "icepool.Pool.size": {"tf": 1.4142135623730951}, "icepool.Pool.denominator": {"tf": 1}, "icepool.Pool.unique_dice": {"tf": 1}, "icepool.Pool.outcomes": {"tf": 1}, "icepool.Pool.post_roll_counts": {"tf": 2}, "icepool.Pool.set_post_roll_counts": {"tf": 6.082762530298219}, "icepool.Pool.min_outcome": {"tf": 1}, "icepool.Pool.max_outcome": {"tf": 1}, "icepool.Pool.lowest": {"tf": 2.23606797749979}, "icepool.Pool.highest": {"tf": 2.23606797749979}, "icepool.standard_pool": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 4}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 2.23606797749979}, "icepool.OutcomeCountEvaluator.direction": {"tf": 2.449489742783178}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 2}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 3}, "icepool.OutcomeCountEvaluator.sample": {"tf": 1.4142135623730951}, "icepool.JointEvaluator": {"tf": 1.4142135623730951}, "icepool.JointEvaluator.next_state": {"tf": 1.4142135623730951}, "icepool.JointEvaluator.final_outcome": {"tf": 1.4142135623730951}, "icepool.JointEvaluator.direction": {"tf": 1.4142135623730951}, "icepool.EvaluateSum": {"tf": 1}, "icepool.EvaluateSum.next_state": {"tf": 1.4142135623730951}, "icepool.EvaluateSum.final_outcome": {"tf": 2.23606797749979}, "icepool.Deck.__init__": {"tf": 4}, "icepool.Deck.keys": {"tf": 1.4142135623730951}, "icepool.Deck.values": {"tf": 1.4142135623730951}, "icepool.Deck.items": {"tf": 1.4142135623730951}, "icepool.Deck.size": {"tf": 1.4142135623730951}, "icepool.Deck.marginals": {"tf": 1.4142135623730951}, "icepool.Deal.__init__": {"tf": 1.7320508075688772}, "icepool.Deal.deck": {"tf": 1.4142135623730951}, "icepool.Deal.hand_sizes": {"tf": 1}, "icepool.Deal.total_cards_dealt": {"tf": 1}, "icepool.Deal.outcomes": {"tf": 2.23606797749979}, "icepool.Deal.denominator": {"tf": 1}, "icepool.clear_pool_cache": {"tf": 1}}, "df": 124, "y": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Die.__init__": {"tf": 1}, "icepool.Die.set_outcomes": {"tf": 1.4142135623730951}, "icepool.Die.cmp": {"tf": 1}, "icepool.Die.equals": {"tf": 1.4142135623730951}, "icepool.Population.probabilities_ge": {"tf": 1}, "icepool.from_cumulative_quantities": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 2}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}}, "df": 10}, "s": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}, "icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.explode": {"tf": 1}, "icepool.Die.equals": {"tf": 1.4142135623730951}, "icepool.Population.outcomes": {"tf": 1}, "icepool.Population.quantities": {"tf": 1}, "icepool.Population.probabilities_ge": {"tf": 1}, "icepool.Population.mode": {"tf": 1}, "icepool.from_rv": {"tf": 1}, "icepool.OutcomeCountGenerator": {"tf": 1.4142135623730951}, "icepool.Pool.set_post_roll_counts": {"tf": 1.4142135623730951}, "icepool.standard_pool": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1}, "icepool.Deal.outcomes": {"tf": 1}}, "df": 16}}, "m": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Die.__init__": {"tf": 1.4142135623730951}, "icepool.Die.reduce": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 4}}, "n": {"docs": {"icepool.Die.__init__": {"tf": 1.4142135623730951}, "icepool.Die.binary_op": {"tf": 1}}, "df": 2}, "r": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Population.outcome_len": {"tf": 1}, "icepool.Population.nearest_le": {"tf": 1}, "icepool.Population.nearest_ge": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 10, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"icepool": {"tf": 1}, "icepool.standard": {"tf": 1}, "icepool.d": {"tf": 1}, "icepool.bernoulli": {"tf": 1}, "icepool.coin": {"tf": 1}, "icepool.Die": {"tf": 1}, "icepool.Die.__init__": {"tf": 2.449489742783178}, "icepool.Die.binary_op": {"tf": 1.7320508075688772}, "icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.truncate": {"tf": 1}, "icepool.Die.clip": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.explode": {"tf": 1}, "icepool.Die.marginals": {"tf": 1.4142135623730951}, "icepool.Die.sign": {"tf": 1}, "icepool.Die.bool": {"tf": 1}, "icepool.Die.key_tuple": {"tf": 1}, "icepool.Die.equals": {"tf": 1}, "icepool.Population.marginals": {"tf": 1.4142135623730951}, "icepool.Population.nearest_le": {"tf": 1}, "icepool.Population.nearest_ge": {"tf": 1}, "icepool.Population.sample": {"tf": 1}, "icepool.from_rv": {"tf": 1}, "icepool.align": {"tf": 1}, "icepool.align_range": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.apply_sorted": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 2}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 2}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1.4142135623730951}, "icepool.JointEvaluator": {"tf": 1}, "icepool.EvaluateSum": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 2}, "icepool.Deck.__init__": {"tf": 1.7320508075688772}, "icepool.Deck.marginals": {"tf": 1.4142135623730951}}, "df": 42}, "n": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}, "icepool.Die.unary_op": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.sign": {"tf": 1.4142135623730951}, "icepool.apply": {"tf": 2}, "icepool.apply_sorted": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 2.6457513110645907}}, "df": 9}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}, "icepool.Die.__init__": {"tf": 1}, "icepool.Population.probabilities_le": {"tf": 1}, "icepool.Population.probabilities_ge": {"tf": 1}, "icepool.accumulate": {"tf": 1}}, "df": 5}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.truncate": {"tf": 1}, "icepool.Population.denominator": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.Deck.size": {"tf": 1}}, "df": 4}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Population.quantile": {"tf": 1}, "icepool.Population.quantile_left": {"tf": 1}, "icepool.Population.quantile_right": {"tf": 1}, "icepool.OutcomeCountGenerator.denominator": {"tf": 1}, "icepool.Pool.denominator": {"tf": 1}, "icepool.Deal.denominator": {"tf": 1}}, "df": 7}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.cmp": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {"icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 6}}}, "o": {"docs": {"icepool": {"tf": 1.4142135623730951}, "icepool.standard": {"tf": 1}, "icepool.d": {"tf": 1}, "icepool.Die": {"tf": 1.7320508075688772}, "icepool.Die.__init__": {"tf": 3.3166247903554}, "icepool.Die.unary_op": {"tf": 1.4142135623730951}, "icepool.Die.binary_op": {"tf": 1.4142135623730951}, "icepool.Die.reroll": {"tf": 2.449489742783178}, "icepool.Die.reroll_until": {"tf": 2.449489742783178}, "icepool.Die.truncate": {"tf": 1.7320508075688772}, "icepool.Die.clip": {"tf": 2}, "icepool.Die.set_range": {"tf": 1}, "icepool.Die.set_outcomes": {"tf": 1}, "icepool.Die.sub": {"tf": 2.449489742783178}, "icepool.Die.explode": {"tf": 2.8284271247461903}, "icepool.Die.pool": {"tf": 1}, "icepool.Die.keep_lowest": {"tf": 1.4142135623730951}, "icepool.Die.keep_highest": {"tf": 1.4142135623730951}, "icepool.Die.marginals": {"tf": 1.4142135623730951}, "icepool.Die.zero": {"tf": 1}, "icepool.Die.cmp": {"tf": 1}, "icepool.Die.bool": {"tf": 1}, "icepool.Die.key_tuple": {"tf": 1}, "icepool.Die.equals": {"tf": 1.4142135623730951}, "icepool.Population": {"tf": 1}, "icepool.Population.marginals": {"tf": 1.4142135623730951}, "icepool.Population.outcomes": {"tf": 1}, "icepool.Population.quantities": {"tf": 1}, "icepool.Population.mode": {"tf": 1}, "icepool.from_cumulative_quantities": {"tf": 1}, "icepool.from_rv": {"tf": 1.4142135623730951}, "icepool.lowest": {"tf": 1.4142135623730951}, "icepool.highest": {"tf": 1.4142135623730951}, "icepool.reduce": {"tf": 2.6457513110645907}, "icepool.accumulate": {"tf": 2.8284271247461903}, "icepool.apply": {"tf": 2}, "icepool.apply_sorted": {"tf": 1.4142135623730951}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 2}, "icepool.OutcomeCountGenerator.sum": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.Pool.__init__": {"tf": 2}, "icepool.Pool.post_roll_counts": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 2.23606797749979}, "icepool.Pool.lowest": {"tf": 1}, "icepool.Pool.highest": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 2}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 3.1622776601683795}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 2.449489742783178}, "icepool.OutcomeCountEvaluator.direction": {"tf": 2}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 2.449489742783178}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 2.23606797749979}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1.4142135623730951}, "icepool.JointEvaluator": {"tf": 1}, "icepool.EvaluateSum.next_state": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 2.449489742783178}, "icepool.Deck.__init__": {"tf": 2.6457513110645907}, "icepool.Deck.marginals": {"tf": 1.4142135623730951}, "icepool.Deal.__init__": {"tf": 2.449489742783178}, "icepool.Deal.hand_sizes": {"tf": 1}, "icepool.Deal.outcomes": {"tf": 1}}, "df": 60, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Die.__init__": {"tf": 1.7320508075688772}, "icepool.Die.explode": {"tf": 1}, "icepool.Population.probabilities": {"tf": 1.4142135623730951}, "icepool.Population.probabilities_le": {"tf": 1.4142135623730951}, "icepool.Population.probabilities_ge": {"tf": 1.4142135623730951}, "icepool.OutcomeCountGenerator.denominator": {"tf": 1}, "icepool.Pool.denominator": {"tf": 1}, "icepool.EvaluateSum.next_state": {"tf": 1}, "icepool.Deal.total_cards_dealt": {"tf": 1}, "icepool.Deal.denominator": {"tf": 1}}, "df": 10, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Die.__init__": {"tf": 1.4142135623730951}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Die.key_tuple": {"tf": 1}, "icepool.Population": {"tf": 1}, "icepool.apply_sorted": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1.4142135623730951}}, "df": 9}}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"icepool.bernoulli": {"tf": 1.4142135623730951}, "icepool.coin": {"tf": 1.4142135623730951}, "icepool.Die.reroll": {"tf": 1.4142135623730951}, "icepool.Die.reroll_until": {"tf": 1.4142135623730951}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.explode": {"tf": 1.4142135623730951}, "icepool.Die.equals": {"tf": 1.4142135623730951}, "icepool.Population.is_empty": {"tf": 1}, "icepool.Population.has_zero_quantities": {"tf": 1}, "icepool.from_cumulative_quantities": {"tf": 1}}, "df": 10}, "n": {"docs": {}, "df": 0, "c": {"docs": {"icepool.Die.unary_op": {"tf": 1}, "icepool.Die.truncate": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.clip": {"tf": 1}}, "df": 1, "s": {"docs": {"icepool.Die.truncate": {"tf": 1}}, "df": 1}, "d": {"docs": {"icepool.Die.truncate": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Die.truncate": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}}, "df": 2, "s": {"docs": {"icepool.Pool.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"icepool.Die.binary_op": {"tf": 1}, "icepool.Die.bool": {"tf": 1}, "icepool.Die.equals": {"tf": 2}}, "df": 3, "y": {"docs": {"icepool.Die.if_else": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.equals": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 3}}}}}, "y": {"docs": {"icepool.apply": {"tf": 1.4142135623730951}, "icepool.Deal.__init__": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.OutcomeCountEvaluator.next_state": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"icepool.reduce": {"tf": 1}, "icepool.accumulate": {"tf": 1}}, "df": 2, "n": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 2}, "s": {"docs": {"icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.explode": {"tf": 1}, "icepool.Die.bool": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.apply_sorted": {"tf": 1}}, "df": 6}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Population.median": {"tf": 1}, "icepool.Population.median_left": {"tf": 1}, "icepool.Population.median_right": {"tf": 1}, "icepool.Population.quantile": {"tf": 1}, "icepool.Population.quantile_left": {"tf": 1}, "icepool.Population.quantile_right": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1}}, "df": 7}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.__init__": {"tf": 2.449489742783178}, "icepool.Die.key_tuple": {"tf": 1}, "icepool.Population.outcome_len": {"tf": 1}, "icepool.Population.mode": {"tf": 1}, "icepool.align": {"tf": 1}, "icepool.align_range": {"tf": 1}, "icepool.reduce": {"tf": 1}, "icepool.accumulate": {"tf": 1}, "icepool.OutcomeCountGenerator.sample": {"tf": 1}, "icepool.Pool.post_roll_counts": {"tf": 1.4142135623730951}, "icepool.JointEvaluator.next_state": {"tf": 1}, "icepool.JointEvaluator.final_outcome": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1.7320508075688772}, "icepool.Deal.hand_sizes": {"tf": 1}}, "df": 14, "s": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.unary_op": {"tf": 1.4142135623730951}, "icepool.Die.binary_op": {"tf": 1.4142135623730951}, "icepool.Die.marginals": {"tf": 1.7320508075688772}, "icepool.Population.marginals": {"tf": 1.7320508075688772}, "icepool.Population.outcome_len": {"tf": 1.4142135623730951}, "icepool.Deck.__init__": {"tf": 1}, "icepool.Deck.marginals": {"tf": 1.7320508075688772}}, "df": 8}}}}, "r": {"docs": {}, "df": 0, "n": {"docs": {"icepool.accumulate": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.binary_op": {"tf": 1}, "icepool.apply": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 3, "s": {"docs": {"icepool.Die.__init__": {"tf": 2.6457513110645907}, "icepool.Die.binary_op": {"tf": 1.4142135623730951}, "icepool.Die.reroll": {"tf": 1.4142135623730951}, "icepool.Die.reroll_until": {"tf": 1.4142135623730951}, "icepool.Die.sub": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1.7320508075688772}, "icepool.Pool.set_post_roll_counts": {"tf": 1.4142135623730951}, "icepool.Deck.__init__": {"tf": 2}}, "df": 9}}}, "e": {"docs": {"icepool.Population.median": {"tf": 1}, "icepool.Population.median_left": {"tf": 1}, "icepool.Population.median_right": {"tf": 1}, "icepool.Population.quantile": {"tf": 1}, "icepool.Population.quantile_left": {"tf": 1}, "icepool.Population.quantile_right": {"tf": 1}}, "df": 6}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"icepool.Population.probabilities_le": {"tf": 1}, "icepool.Population.probabilities_ge": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Die.if_else": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"icepool.OutcomeCountGenerator.evaluate": {"tf": 1}}, "df": 1}}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Die.clip": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {"icepool.Die.zero": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 3, "s": {"docs": {"icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}}, "df": 1}}}}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"icepool.Die.marginals": {"tf": 1}, "icepool.Population.marginals": {"tf": 1}, "icepool.reduce": {"tf": 1.7320508075688772}, "icepool.accumulate": {"tf": 1.7320508075688772}, "icepool.apply": {"tf": 1.7320508075688772}, "icepool.Pool.set_post_roll_counts": {"tf": 2.23606797749979}, "icepool.Deck.marginals": {"tf": 1}}, "df": 7}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 2}}}}}}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"icepool": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.EvaluateSum": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die.__init__": {"tf": 1.4142135623730951}, "icepool.apply": {"tf": 1}, "icepool.apply_sorted": {"tf": 1.4142135623730951}, "icepool.JointEvaluator": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 5, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.JointEvaluator": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {"icepool.Die.zero_outcome": {"tf": 1}, "icepool.Die.equals": {"tf": 1}, "icepool.Population.denominator": {"tf": 1}, "icepool.Population.probabilities": {"tf": 1}, "icepool.Population.probabilities_le": {"tf": 1}, "icepool.Population.probabilities_ge": {"tf": 1}, "icepool.from_cumulative_quantities": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 2}, "icepool.standard_pool": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.JointEvaluator.direction": {"tf": 1}, "icepool.Deck.size": {"tf": 1}}, "df": 12, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.marginals": {"tf": 1}, "icepool.Population.marginals": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}, "icepool.Deck.marginals": {"tf": 1}}, "df": 10, "s": {"docs": {"icepool": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool": {"tf": 1.4142135623730951}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.OutcomeCountGenerator.evaluate": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 3}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.explode": {"tf": 1.7320508075688772}}, "df": 1, "d": {"docs": {"icepool.Die.explode": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.__init__": {"tf": 1.4142135623730951}, "icepool.Deck.__init__": {"tf": 1.4142135623730951}}, "df": 2}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.OutcomeCountGenerator.sample": {"tf": 1}, "icepool.OutcomeCountEvaluator.sample": {"tf": 1}, "icepool.JointEvaluator": {"tf": 1}, "icepool.Deck": {"tf": 1}, "icepool.Deal": {"tf": 1}}, "df": 5}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.OutcomeCountEvaluator": {"tf": 1.4142135623730951}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 6}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"icepool.Die.reroll": {"tf": 2}, "icepool.Die.reroll_until": {"tf": 2}, "icepool.Die.sub": {"tf": 2}, "icepool.Die.explode": {"tf": 2}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Die.sub": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Population.format": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die.__init__": {"tf": 2.23606797749979}, "icepool.Die.binary_op": {"tf": 1}, "icepool.accumulate": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.Pool.post_roll_counts": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 7, "s": {"docs": {"icepool": {"tf": 1}, "icepool.Die.__init__": {"tf": 1.4142135623730951}, "icepool.Die.marginals": {"tf": 1}, "icepool.Population.marginals": {"tf": 1}, "icepool.accumulate": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1.4142135623730951}, "icepool.Deck.marginals": {"tf": 1}}, "df": 9}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.unary_op": {"tf": 1}, "icepool.Die.unary_op_non_elementwise": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Die.marginals": {"tf": 1}, "icepool.Population.marginals": {"tf": 1}, "icepool.reduce": {"tf": 1}, "icepool.accumulate": {"tf": 1}, "icepool.Deck.unary_op_non_elementwise": {"tf": 1}, "icepool.Deck.marginals": {"tf": 1}}, "df": 9}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 3.1622776601683795}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {"icepool": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"icepool.standard": {"tf": 1}, "icepool.d": {"tf": 1}, "icepool.Die.__init__": {"tf": 2.449489742783178}, "icepool.Die.truncate": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.zero": {"tf": 1}, "icepool.Population": {"tf": 1}, "icepool.Population.quantities_le": {"tf": 1}, "icepool.Population.quantities_ge": {"tf": 1}, "icepool.Population.probabilities": {"tf": 1}, "icepool.Population.probabilities_le": {"tf": 1}, "icepool.Population.probabilities_ge": {"tf": 1}, "icepool.Population.format": {"tf": 1.7320508075688772}, "icepool.reduce": {"tf": 1}, "icepool.accumulate": {"tf": 1.4142135623730951}, "icepool.apply": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1}, "icepool.OutcomeCountGenerator.sample": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1.4142135623730951}, "icepool.Pool.set_post_roll_counts": {"tf": 2}, "icepool.standard_pool": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.Deck.__init__": {"tf": 2}, "icepool.Deal.__init__": {"tf": 1}, "icepool.Deal.hand_sizes": {"tf": 1}}, "df": 26}}, "s": {"docs": {}, "df": 0, "y": {"docs": {"icepool.apply": {"tf": 1.4142135623730951}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"icepool.bernoulli": {"tf": 1}, "icepool.coin": {"tf": 1}, "icepool.Die": {"tf": 1}, "icepool.Die.__init__": {"tf": 1}, "icepool.Die.cmp": {"tf": 1}, "icepool.Die.equals": {"tf": 1}, "icepool.Population.sample": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 11}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"icepool.OutcomeCountGenerator.evaluate": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1.7320508075688772}}, "df": 3, "d": {"docs": {"icepool.Die.equals": {"tf": 1}, "icepool.OutcomeCountGenerator": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 6}, "s": {"docs": {"icepool.OutcomeCountGenerator.evaluate": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.OutcomeCountEvaluator.sample": {"tf": 1}, "icepool.JointEvaluator": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.OutcomeCountGenerator.evaluate": {"tf": 1}, "icepool.JointEvaluator": {"tf": 1}, "icepool.Deck": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.EvaluateSum.direction": {"tf": 1}}, "df": 1, "s": {"docs": {"icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.JointEvaluator": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Pool.__init__": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Population.format": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 6}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.explode": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Die.truncate": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}}, "df": 2}}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.apply": {"tf": 1.7320508075688772}, "icepool.apply_sorted": {"tf": 1.4142135623730951}, "icepool.Pool.__init__": {"tf": 1}, "icepool.JointEvaluator": {"tf": 1}}, "df": 4}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Die.reroll_until": {"tf": 1}}, "df": 1}}}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die.truncate": {"tf": 1}, "icepool.Die.clip": {"tf": 1}}, "df": 2, "s": {"docs": {"icepool.Die.truncate": {"tf": 1}, "icepool.Die.clip": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.OutcomeCountEvaluator.next_state": {"tf": 1}}, "df": 1}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Die.cmp": {"tf": 1}, "icepool.Die.equals": {"tf": 1}, "icepool.accumulate": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 6, "s": {"docs": {"icepool.Die.key_tuple": {"tf": 1}, "icepool.Die.equals": {"tf": 1}}, "df": 2}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"icepool": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.binary_op": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.explode": {"tf": 1}, "icepool.Die.bool": {"tf": 1}, "icepool.Die.equals": {"tf": 2.23606797749979}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}}, "df": 6, "s": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Die.clip": {"tf": 1}, "icepool.Population.quantities": {"tf": 1}, "icepool.Population.format": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1.4142135623730951}}, "df": 5, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"icepool.CountsValuesView": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.unary_op": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.explode": {"tf": 1}, "icepool.Die.zero": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.JointEvaluator.direction": {"tf": 1}}, "df": 11}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 4}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Population.variance": {"tf": 1.4142135623730951}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 3}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Population.cramer_von_mises": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"icepool.apply": {"tf": 1}, "icepool.apply_sorted": {"tf": 1}}, "df": 2}}}}, "g": {"docs": {"icepool.Die.zero_outcome": {"tf": 1}, "icepool.Die.equals": {"tf": 1}, "icepool.Population.denominator": {"tf": 1}, "icepool.from_cumulative_quantities": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 2}, "icepool.standard_pool": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.Deck.size": {"tf": 1}}, "df": 8, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.OutcomeCountGenerator": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.OutcomeCountGenerator.denominator": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1.7320508075688772}, "icepool.OutcomeCountGenerator.sum": {"tf": 1}, "icepool.OutcomeCountGenerator.sample": {"tf": 1.4142135623730951}, "icepool.Pool.denominator": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 2}, "icepool.OutcomeCountEvaluator.sample": {"tf": 1}, "icepool.JointEvaluator": {"tf": 1}, "icepool.EvaluateSum": {"tf": 1}, "icepool.Deal.denominator": {"tf": 1}}, "df": 12, "s": {"docs": {"icepool.OutcomeCountGenerator": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 2}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 2}, "icepool.OutcomeCountEvaluator.direction": {"tf": 2}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1.4142135623730951}, "icepool.EvaluateSum.final_outcome": {"tf": 2}}, "df": 9}}}, "e": {"docs": {"icepool.Pool": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 3}}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Die.reroll_until": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.__init__": {"tf": 1}}, "df": 1, "n": {"docs": {"icepool.Die.unary_op": {"tf": 1}, "icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.truncate": {"tf": 1.4142135623730951}, "icepool.Die.clip": {"tf": 1}, "icepool.Die.set_range": {"tf": 1}, "icepool.from_cumulative_quantities": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}}, "df": 11}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.explode": {"tf": 1}}, "df": 4}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.reduce": {"tf": 1}, "icepool.Population.max_outcome": {"tf": 1}}, "df": 3}}, "r": {"docs": {"icepool.Die.sign": {"tf": 1}, "icepool.Population.median_right": {"tf": 1}, "icepool.Population.quantile_right": {"tf": 1}}, "df": 3}}}}}}, "c": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.__init__": {"tf": 1}}, "df": 1}}, "t": {"docs": {"icepool.Die.binary_op": {"tf": 2}, "icepool.Die.cmp": {"tf": 1}, "icepool.Population.nearest_ge": {"tf": 1}, "icepool.Population.quantities_ge": {"tf": 1}, "icepool.Population.quantity_ge": {"tf": 1}, "icepool.Population.quantity_gt": {"tf": 1}, "icepool.Population.probabilities_ge": {"tf": 1.7320508075688772}, "icepool.Population.format": {"tf": 2.449489742783178}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}}, "df": 9}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"icepool.OutcomeCountEvaluator.next_state": {"tf": 1}}, "df": 1, "d": {"docs": {"icepool.Die.key_tuple": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}}, "df": 2}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.clear_pool_cache": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {"icepool.Population.probabilities": {"tf": 1}, "icepool.Population.probabilities_le": {"tf": 1}, "icepool.Population.probabilities_ge": {"tf": 1}, "icepool.JointEvaluator.direction": {"tf": 1}}, "df": 4, "n": {"docs": {"icepool": {"tf": 1.4142135623730951}, "icepool.Die": {"tf": 1.7320508075688772}, "icepool.Die.__init__": {"tf": 1.4142135623730951}, "icepool.Die.keys": {"tf": 1}, "icepool.Die.values": {"tf": 1}, "icepool.Die.items": {"tf": 1}, "icepool.Die.truncate": {"tf": 1}, "icepool.Die.clip": {"tf": 1}, "icepool.Die.set_outcomes": {"tf": 1.4142135623730951}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.pool": {"tf": 1}, "icepool.Die.key_tuple": {"tf": 1}, "icepool.Die.equals": {"tf": 1}, "icepool.Population.keys": {"tf": 1}, "icepool.Population.values": {"tf": 1}, "icepool.Population.items": {"tf": 1}, "icepool.Population.quantities": {"tf": 1}, "icepool.Population.quantities_le": {"tf": 1}, "icepool.Population.quantities_ge": {"tf": 1}, "icepool.Population.probabilities": {"tf": 1.4142135623730951}, "icepool.Population.probabilities_le": {"tf": 1.4142135623730951}, "icepool.Population.probabilities_ge": {"tf": 1.4142135623730951}, "icepool.Population.median": {"tf": 1.4142135623730951}, "icepool.Population.median_left": {"tf": 1}, "icepool.Population.median_right": {"tf": 1}, "icepool.Population.quantile": {"tf": 1.4142135623730951}, "icepool.Population.quantile_left": {"tf": 1}, "icepool.Population.quantile_right": {"tf": 1}, "icepool.from_cumulative_quantities": {"tf": 1}, "icepool.accumulate": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.OutcomeCountGenerator.outcomes": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1.7320508075688772}, "icepool.OutcomeCountGenerator.sum": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1.4142135623730951}, "icepool.Pool.size": {"tf": 1}, "icepool.Pool.unique_dice": {"tf": 1}, "icepool.Pool.outcomes": {"tf": 1}, "icepool.Pool.post_roll_counts": {"tf": 1.4142135623730951}, "icepool.Pool.set_post_roll_counts": {"tf": 2.23606797749979}, "icepool.Pool.min_outcome": {"tf": 1}, "icepool.Pool.max_outcome": {"tf": 1}, "icepool.Pool.lowest": {"tf": 1}, "icepool.Pool.highest": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 2}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.EvaluateSum": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1.4142135623730951}, "icepool.Deck.keys": {"tf": 1}, "icepool.Deck.values": {"tf": 1}, "icepool.Deck.items": {"tf": 1}, "icepool.Deal.__init__": {"tf": 1}, "icepool.Deal.outcomes": {"tf": 1}}, "df": 59, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool": {"tf": 1.4142135623730951}, "icepool.Population": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"icepool": {"tf": 1}, "icepool.Population.sample": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1.7320508075688772}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.truncate": {"tf": 1}, "icepool.Population.median": {"tf": 1}, "icepool.Population.quantile": {"tf": 1}, "icepool.apply": {"tf": 1.4142135623730951}, "icepool.apply_sorted": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 6}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.__init__": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {"icepool.standard": {"tf": 1}, "icepool.d": {"tf": 1}, "icepool.Die.__init__": {"tf": 1.4142135623730951}, "icepool.Die.set_range": {"tf": 1}, "icepool.Die.zero_outcome": {"tf": 1}, "icepool.Population": {"tf": 1}, "icepool.from_rv": {"tf": 1.4142135623730951}, "icepool.align_range": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1.7320508075688772}, "icepool.Deck.__init__": {"tf": 1}}, "df": 14, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.unary_op": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.equals": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 1}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.standard": {"tf": 1}, "icepool.d": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Die.truncate": {"tf": 1}}, "df": 4}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Deal.__init__": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1.4142135623730951}}, "df": 3}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"icepool.standard": {"tf": 1}, "icepool.d": {"tf": 1}, "icepool.Die.set_range": {"tf": 1}, "icepool.from_cumulative_quantities": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}}, "df": 5}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.cmp": {"tf": 1}, "icepool.Population": {"tf": 1}, "icepool.OutcomeCountGenerator": {"tf": 1}}, "df": 3, "d": {"docs": {"icepool.Die.truncate": {"tf": 1}, "icepool.Die.clip": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Population.denominator": {"tf": 1}, "icepool.Deck.size": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.OutcomeCountGenerator": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 2}}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 2}}}}}}}, "x": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Die.__init__": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Reroll": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Pool.post_roll_counts": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1.7320508075688772}}, "df": 2}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.reduce": {"tf": 1}, "icepool.accumulate": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"icepool.apply": {"tf": 1}, "icepool.apply_sorted": {"tf": 1}}, "df": 2}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.OutcomeCountEvaluator.next_state": {"tf": 1}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool": {"tf": 1}, "icepool.Die": {"tf": 1}, "icepool.Population.sample": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 4}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.OutcomeCountEvaluator.next_state": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die.__init__": {"tf": 1.4142135623730951}}, "df": 1, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.apply": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "t": {"docs": {"icepool": {"tf": 1}, "icepool.Die": {"tf": 1.7320508075688772}, "icepool.Die.__init__": {"tf": 1.4142135623730951}, "icepool.Die.binary_op": {"tf": 1.4142135623730951}, "icepool.Die.reroll": {"tf": 1.4142135623730951}, "icepool.Die.reroll_until": {"tf": 1.4142135623730951}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.explode": {"tf": 1.4142135623730951}, "icepool.Die.bool": {"tf": 1}, "icepool.Die.equals": {"tf": 1}, "icepool.Population.probabilities_le": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator": {"tf": 1}, "icepool.JointEvaluator": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 15, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.from_rv": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"icepool.accumulate": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"icepool.CountsItemsView": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {"icepool.OutcomeCountGenerator.evaluate": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"icepool.Die.__init__": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "s": {"docs": {"icepool": {"tf": 1}, "icepool.Die": {"tf": 1.4142135623730951}, "icepool.Die.__init__": {"tf": 2.6457513110645907}, "icepool.Die.unary_op": {"tf": 1.7320508075688772}, "icepool.Die.unary_op_non_elementwise": {"tf": 1}, "icepool.Die.binary_op": {"tf": 2}, "icepool.Die.reroll": {"tf": 1.4142135623730951}, "icepool.Die.reroll_until": {"tf": 1.4142135623730951}, "icepool.Die.truncate": {"tf": 1}, "icepool.Die.clip": {"tf": 1.7320508075688772}, "icepool.Die.sub": {"tf": 1.7320508075688772}, "icepool.Die.explode": {"tf": 1.4142135623730951}, "icepool.Die.marginals": {"tf": 1}, "icepool.Die.zero": {"tf": 1}, "icepool.Die.bool": {"tf": 1.4142135623730951}, "icepool.Die.key_tuple": {"tf": 1}, "icepool.Die.equals": {"tf": 2}, "icepool.Population.marginals": {"tf": 1}, "icepool.Population.outcome_len": {"tf": 1}, "icepool.Population.nearest_le": {"tf": 1.4142135623730951}, "icepool.Population.nearest_ge": {"tf": 1.4142135623730951}, "icepool.Population.probabilities_le": {"tf": 1.4142135623730951}, "icepool.Population.probabilities_ge": {"tf": 1}, "icepool.Population.variance": {"tf": 1}, "icepool.Population.sample": {"tf": 1.4142135623730951}, "icepool.Population.format": {"tf": 1.4142135623730951}, "icepool.from_cumulative_quantities": {"tf": 1}, "icepool.from_rv": {"tf": 1}, "icepool.reduce": {"tf": 1}, "icepool.accumulate": {"tf": 1.7320508075688772}, "icepool.apply": {"tf": 2.6457513110645907}, "icepool.apply_sorted": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1}, "icepool.OutcomeCountGenerator.sample": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1.4142135623730951}, "icepool.Pool.set_post_roll_counts": {"tf": 3.1622776601683795}, "icepool.OutcomeCountEvaluator": {"tf": 2}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 2}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.JointEvaluator": {"tf": 1}, "icepool.JointEvaluator.next_state": {"tf": 1}, "icepool.JointEvaluator.final_outcome": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1.7320508075688772}, "icepool.Deck.__init__": {"tf": 1}, "icepool.Deck.unary_op_non_elementwise": {"tf": 1}, "icepool.Deck.marginals": {"tf": 1}}, "df": 50}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"icepool.standard": {"tf": 1.7320508075688772}, "icepool.d": {"tf": 1.7320508075688772}, "icepool.Die": {"tf": 1}, "icepool.Die.__init__": {"tf": 1.7320508075688772}, "icepool.Die.sub": {"tf": 1.4142135623730951}, "icepool.apply": {"tf": 1.4142135623730951}, "icepool.OutcomeCountGenerator.sum": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 12}}}}}}, "f": {"docs": {"icepool.bernoulli": {"tf": 1}, "icepool.coin": {"tf": 1}, "icepool.Die": {"tf": 1}, "icepool.Die.__init__": {"tf": 1.7320508075688772}, "icepool.Die.unary_op": {"tf": 1.4142135623730951}, "icepool.Die.binary_op": {"tf": 1.4142135623730951}, "icepool.Die.reroll": {"tf": 2.8284271247461903}, "icepool.Die.reroll_until": {"tf": 2.6457513110645907}, "icepool.Die.truncate": {"tf": 1.7320508075688772}, "icepool.Die.clip": {"tf": 1.7320508075688772}, "icepool.Die.set_range": {"tf": 1.4142135623730951}, "icepool.Die.set_outcomes": {"tf": 1.4142135623730951}, "icepool.Die.sub": {"tf": 2.23606797749979}, "icepool.Die.explode": {"tf": 2.6457513110645907}, "icepool.Die.keep_lowest": {"tf": 1}, "icepool.Die.keep_highest": {"tf": 1}, "icepool.Die.zero": {"tf": 1}, "icepool.Die.cmp": {"tf": 1}, "icepool.Die.sign": {"tf": 1.4142135623730951}, "icepool.Die.equals": {"tf": 2}, "icepool.Population.outcome_len": {"tf": 1.4142135623730951}, "icepool.Population.nearest_le": {"tf": 1}, "icepool.Population.nearest_ge": {"tf": 1}, "icepool.Population.quantity": {"tf": 1}, "icepool.Population.probabilities": {"tf": 1}, "icepool.Population.probabilities_le": {"tf": 1}, "icepool.Population.probabilities_ge": {"tf": 1}, "icepool.Population.probability": {"tf": 1}, "icepool.Population.median": {"tf": 1}, "icepool.Population.quantile": {"tf": 1}, "icepool.Population.format": {"tf": 1.4142135623730951}, "icepool.from_rv": {"tf": 1}, "icepool.reduce": {"tf": 1}, "icepool.accumulate": {"tf": 1.4142135623730951}, "icepool.apply": {"tf": 1.7320508075688772}, "icepool.apply_sorted": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 3.3166247903554}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 2.449489742783178}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.JointEvaluator.direction": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}, "icepool.Deal.__init__": {"tf": 1}}, "df": 48, "f": {"docs": {"icepool.Die.equals": {"tf": 1}, "icepool.Population.is_empty": {"tf": 1}, "icepool.Population.has_zero_quantities": {"tf": 1}, "icepool.from_cumulative_quantities": {"tf": 1}}, "df": 4}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Die.key_tuple": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"icepool": {"tf": 1}}, "df": 1}}}, "w": {"docs": {"icepool": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die.keep_lowest": {"tf": 1.4142135623730951}, "icepool.Population.mode": {"tf": 1}, "icepool.lowest": {"tf": 2}, "icepool.apply_sorted": {"tf": 1.4142135623730951}, "icepool.Pool.post_roll_counts": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.Pool.lowest": {"tf": 2}}, "df": 7}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"icepool": {"tf": 1}, "icepool.Die": {"tf": 1.4142135623730951}, "icepool.Die.__init__": {"tf": 1.7320508075688772}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 5}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Die.binary_op": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Population.min_outcome": {"tf": 1}, "icepool.Population.has_zero_quantities": {"tf": 1}, "icepool.lowest": {"tf": 1}, "icepool.highest": {"tf": 1}}, "df": 5}}}, "n": {"docs": {"icepool.Population.denominator": {"tf": 1}, "icepool.Deck.size": {"tf": 1}}, "df": 2, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.unary_op": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Population.outcome_len": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 7, "s": {"docs": {"icepool.Population.outcome_len": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die.binary_op": {"tf": 1}, "icepool.Population.median": {"tf": 1}, "icepool.Population.quantile": {"tf": 1}, "icepool.reduce": {"tf": 1}, "icepool.accumulate": {"tf": 1}}, "df": 5}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Die.sign": {"tf": 1}, "icepool.apply": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Population.median_left": {"tf": 1}, "icepool.Population.quantile_left": {"tf": 1}}, "df": 2}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.OutcomeCountEvaluator.next_state": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 2}}}, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Die.equals": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {"icepool.apply": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "m": {"docs": {"icepool.Die.__init__": {"tf": 2}}, "df": 1}}, "t": {"docs": {"icepool.Die.binary_op": {"tf": 2}, "icepool.Die.cmp": {"tf": 1}, "icepool.Population.nearest_le": {"tf": 1}, "icepool.Population.quantities_le": {"tf": 1}, "icepool.Population.quantity_le": {"tf": 1}, "icepool.Population.quantity_lt": {"tf": 1}, "icepool.Population.probabilities_le": {"tf": 1.7320508075688772}, "icepool.Population.format": {"tf": 2.449489742783178}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}}, "df": 9}}, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die.__init__": {"tf": 1.7320508075688772}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Population": {"tf": 1}, "icepool.from_rv": {"tf": 1}, "icepool.lowest": {"tf": 1}, "icepool.highest": {"tf": 1}, "icepool.apply_sorted": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1.4142135623730951}, "icepool.Deal.__init__": {"tf": 1}}, "df": 12}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}, "icepool.Deal.__init__": {"tf": 1}}, "df": 7, "s": {"docs": {"icepool.Pool.size": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 4}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"icepool": {"tf": 1}, "icepool.Die.reroll": {"tf": 1}, "icepool.Die.set_range": {"tf": 1.7320508075688772}, "icepool.Pool.min_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}}, "df": 5, "d": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"icepool.min_outcome": {"tf": 1}, "icepool.Deal.__init__": {"tf": 1}}, "df": 2}}}}}, "x": {"docs": {"icepool.Die.__init__": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.OutcomeCountEvaluator.direction": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.unary_op": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Population.cramer_von_mises": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"icepool": {"tf": 1}, "icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.set_range": {"tf": 1.7320508075688772}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.explode": {"tf": 1.4142135623730951}, "icepool.Reroll": {"tf": 1}, "icepool.Pool.max_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}}, "df": 9, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.explode": {"tf": 1}, "icepool.Population.kolmogorov_smirnov": {"tf": 1}, "icepool.max_outcome": {"tf": 1}}, "df": 5}}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}}, "df": 2}}, "p": {"docs": {"icepool.Die.sub": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Die.__init__": {"tf": 2.8284271247461903}, "icepool.Die.unary_op": {"tf": 1}, "icepool.Population": {"tf": 1}, "icepool.Population.marginals": {"tf": 1}, "icepool.Population.outcomes": {"tf": 1.4142135623730951}, "icepool.Population.is_empty": {"tf": 1}, "icepool.Population.quantities": {"tf": 1.4142135623730951}, "icepool.Population.format": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.Deck.__init__": {"tf": 2.6457513110645907}, "icepool.Deal.outcomes": {"tf": 1}}, "df": 12}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {"icepool.Die.__init__": {"tf": 1.4142135623730951}, "icepool.Die.set_outcomes": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.equals": {"tf": 1}, "icepool.Population.format": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.JointEvaluator": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1.4142135623730951}}, "df": 14}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Die.unary_op": {"tf": 1}, "icepool.Die.unary_op_non_elementwise": {"tf": 1}, "icepool.Deck.unary_op_non_elementwise": {"tf": 1}}, "df": 3, "[": {"docs": {}, "df": 0, ":": {"2": {"docs": {"icepool.Die.marginals": {"tf": 1}, "icepool.Population.marginals": {"tf": 1}, "icepool.Deck.marginals": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.marginals": {"tf": 1}, "icepool.Population.marginals": {"tf": 1}, "icepool.Deck.marginals": {"tf": 1}}, "df": 3}}}}}}}}, "k": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Population.format": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Die.binary_op": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.keep_lowest": {"tf": 1}, "icepool.Die.keep_highest": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.Deal.__init__": {"tf": 1}}, "df": 10}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Die.equals": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Population.probabilities": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.equals": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1}, "icepool.OutcomeCountGenerator.sum": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 8, "s": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}, "icepool.Die.unary_op": {"tf": 1}, "icepool.Die.equals": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Population.median": {"tf": 1}, "icepool.Population.quantile": {"tf": 1}}, "df": 2, "s": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 3}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Population.median": {"tf": 1.7320508075688772}, "icepool.Population.median_left": {"tf": 1}, "icepool.Population.median_right": {"tf": 1}}, "df": 3}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Die.sub": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Population.mode": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 8, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Population.format": {"tf": 1}, "icepool.apply": {"tf": 1.7320508075688772}, "icepool.apply_sorted": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.JointEvaluator": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 9}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"icepool.OutcomeCountEvaluator.next_state": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {"icepool.Population.format": {"tf": 1}}, "df": 1, ":": {"docs": {}, "df": 0, "*": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "|": {"docs": {}, "df": 0, "q": {"docs": {"icepool.Population.format": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Die.equals": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 3, "s": {"docs": {"icepool": {"tf": 1}, "icepool.Die.unary_op": {"tf": 1.4142135623730951}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Die.reroll": {"tf": 1.4142135623730951}, "icepool.Die.reroll_until": {"tf": 1.4142135623730951}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.explode": {"tf": 1}, "icepool.Die.keep_lowest": {"tf": 1}, "icepool.Die.keep_highest": {"tf": 1}, "icepool.Population.nearest_le": {"tf": 1}, "icepool.Population.nearest_ge": {"tf": 1}, "icepool.align": {"tf": 1}, "icepool.align_range": {"tf": 1}, "icepool.apply": {"tf": 1.4142135623730951}, "icepool.apply_sorted": {"tf": 1.4142135623730951}, "icepool.OutcomeCountGenerator.sum": {"tf": 1}, "icepool.OutcomeCountGenerator.sample": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 24}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Die.sub": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.equals": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool": {"tf": 1.4142135623730951}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Die.sub": {"tf": 2.449489742783178}}, "df": 1, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.truncate": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1.4142135623730951}}, "df": 7, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Population.sample": {"tf": 1}, "icepool.Deck": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {"icepool.Die.if_else": {"tf": 1}}, "df": 1}, "d": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Deck": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Die.unary_op": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.keep_lowest": {"tf": 1}, "icepool.Die.keep_highest": {"tf": 1}, "icepool.OutcomeCountGenerator.sum": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}}, "df": 9}}}, "s": {"docs": {"icepool.Pool": {"tf": 1}, "icepool.Deal": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die.sub": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.sub": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Die.__init__": {"tf": 2}, "icepool.Die.unary_op": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.truncate": {"tf": 1}, "icepool.Die.clip": {"tf": 1}, "icepool.Die.set_range": {"tf": 1.4142135623730951}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.zero": {"tf": 1}, "icepool.Die.bool": {"tf": 1}, "icepool.accumulate": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.sample": {"tf": 1.4142135623730951}, "icepool.EvaluateSum.final_outcome": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 20, "s": {"docs": {"icepool.Die.keep_lowest": {"tf": 1}, "icepool.Die.keep_highest": {"tf": 1}, "icepool.Population.probabilities": {"tf": 1}, "icepool.Population.probabilities_le": {"tf": 1}, "icepool.Population.probabilities_ge": {"tf": 1}, "icepool.accumulate": {"tf": 1}}, "df": 6}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.from_cumulative_quantities": {"tf": 1}, "icepool.from_rv": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.zero": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Die.cmp": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.reroll": {"tf": 2.23606797749979}, "icepool.Die.reroll_until": {"tf": 2.449489742783178}, "icepool.Die.clip": {"tf": 1}, "icepool.Die.sub": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 8, "s": {"docs": {"icepool.Die.reroll": {"tf": 1.4142135623730951}, "icepool.Die.reroll_until": {"tf": 1.4142135623730951}, "icepool.Die.truncate": {"tf": 1}}, "df": 3}, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.reroll": {"tf": 1.4142135623730951}, "icepool.Reroll": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Die.clip": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.equals": {"tf": 1}, "icepool.reduce": {"tf": 1}, "icepool.accumulate": {"tf": 1}, "icepool.apply": {"tf": 1}}, "df": 5, "d": {"docs": {"icepool.Die.equals": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Die.unary_op": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}}, "df": 2}}}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.from_cumulative_quantities": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Deal.__init__": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.set_outcomes": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}}, "df": 2, "s": {"docs": {"icepool.Die.trim": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Die.cmp": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.sub": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Deal.__init__": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"icepool.from_cumulative_quantities": {"tf": 1}}, "df": 1, "d": {"docs": {"icepool.from_cumulative_quantities": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 6}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.explode": {"tf": 1}, "icepool.Die.keep_lowest": {"tf": 1.4142135623730951}, "icepool.Die.keep_highest": {"tf": 1.4142135623730951}, "icepool.Pool": {"tf": 1}, "icepool.Pool.post_roll_counts": {"tf": 1.4142135623730951}, "icepool.Pool.set_post_roll_counts": {"tf": 2.6457513110645907}, "icepool.Pool.lowest": {"tf": 1}, "icepool.Pool.highest": {"tf": 1}, "icepool.JointEvaluator": {"tf": 1}}, "df": 11, "s": {"docs": {"icepool": {"tf": 1}, "icepool.standard": {"tf": 1}, "icepool.d": {"tf": 1}, "icepool.bernoulli": {"tf": 1}, "icepool.coin": {"tf": 1}, "icepool.Die.__init__": {"tf": 1.4142135623730951}, "icepool.Die.binary_op": {"tf": 1.7320508075688772}, "icepool.Die.pool": {"tf": 1}, "icepool.Die.keep_lowest": {"tf": 1}, "icepool.Die.keep_highest": {"tf": 1}}, "df": 10}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Die.__init__": {"tf": 1.7320508075688772}, "icepool.Population.probabilities_le": {"tf": 1}, "icepool.Population.probabilities_ge": {"tf": 1}, "icepool.apply_sorted": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}}, "df": 6}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.explode": {"tf": 1}, "icepool.apply": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}}, "df": 4}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.unary_op": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.sub": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}, "icepool.Die.unary_op": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 6}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.unary_op": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.explode": {"tf": 1}, "icepool.Die.zero": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.JointEvaluator.direction": {"tf": 1}}, "df": 12}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.truncate": {"tf": 1.4142135623730951}, "icepool.Die.clip": {"tf": 1.7320508075688772}, "icepool.Die.set_range": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}}, "df": 5}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"icepool.Population.sample": {"tf": 1.4142135623730951}, "icepool.OutcomeCountGenerator.sample": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die.binary_op": {"tf": 1.4142135623730951}, "icepool.Population.median": {"tf": 1}, "icepool.Population.quantile": {"tf": 1}, "icepool.reduce": {"tf": 1}, "icepool.accumulate": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}}, "df": 6}}}}, "v": {"docs": {"icepool.from_rv": {"tf": 2}}, "df": 1}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"icepool.JointEvaluator.next_state": {"tf": 1}, "icepool.JointEvaluator.final_outcome": {"tf": 1}}, "df": 2}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.EvaluateSum.next_state": {"tf": 1}}, "df": 1}}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"icepool": {"tf": 1.4142135623730951}, "icepool.standard": {"tf": 1.4142135623730951}, "icepool.d": {"tf": 1.4142135623730951}, "icepool.bernoulli": {"tf": 1}, "icepool.coin": {"tf": 1}, "icepool.Die": {"tf": 2}, "icepool.Die.__init__": {"tf": 2}, "icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.truncate": {"tf": 1.4142135623730951}, "icepool.Die.sub": {"tf": 1.4142135623730951}, "icepool.Die.explode": {"tf": 1}, "icepool.Die.if_else": {"tf": 1.4142135623730951}, "icepool.Die.zero": {"tf": 1}, "icepool.Die.cmp": {"tf": 1}, "icepool.Die.equals": {"tf": 1}, "icepool.Population": {"tf": 1}, "icepool.Population.denominator": {"tf": 1}, "icepool.Population.has_zero_quantities": {"tf": 1}, "icepool.Population.sample": {"tf": 1}, "icepool.Population.format": {"tf": 1.4142135623730951}, "icepool.align": {"tf": 1}, "icepool.align_range": {"tf": 1}, "icepool.accumulate": {"tf": 1.4142135623730951}, "icepool.apply": {"tf": 1.4142135623730951}, "icepool.apply_sorted": {"tf": 1.4142135623730951}, "icepool.Reroll": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 2}, "icepool.OutcomeCountEvaluator": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 2}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1.4142135623730951}, "icepool.Deck.__init__": {"tf": 1}, "icepool.Deck.size": {"tf": 1}}, "df": 38, "i": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Die.binary_op": {"tf": 1}, "icepool.Die.keys": {"tf": 1}, "icepool.Die.values": {"tf": 1}, "icepool.Die.clip": {"tf": 1}, "icepool.Population.keys": {"tf": 1}, "icepool.Population.values": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.Deck": {"tf": 1}, "icepool.Deck.keys": {"tf": 1}, "icepool.Deck.values": {"tf": 1}}, "df": 10}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Deck": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"icepool.bernoulli": {"tf": 1}, "icepool.coin": {"tf": 1}, "icepool.Die": {"tf": 1.4142135623730951}, "icepool.Die.__init__": {"tf": 3.1622776601683795}, "icepool.Die.reroll": {"tf": 1.7320508075688772}, "icepool.Die.reroll_until": {"tf": 1.4142135623730951}, "icepool.Die.truncate": {"tf": 1}, "icepool.Die.clip": {"tf": 1.4142135623730951}, "icepool.Die.set_range": {"tf": 1.4142135623730951}, "icepool.Die.sub": {"tf": 2.23606797749979}, "icepool.Die.explode": {"tf": 2}, "icepool.Die.keep_lowest": {"tf": 1.4142135623730951}, "icepool.Die.keep_highest": {"tf": 1}, "icepool.Die.marginals": {"tf": 1}, "icepool.Die.zero": {"tf": 1}, "icepool.Die.cmp": {"tf": 1}, "icepool.Die.equals": {"tf": 1}, "icepool.Population.marginals": {"tf": 1}, "icepool.Population.probabilities": {"tf": 1.4142135623730951}, "icepool.Population.probabilities_le": {"tf": 1.4142135623730951}, "icepool.Population.probabilities_ge": {"tf": 1.4142135623730951}, "icepool.Population.median": {"tf": 1}, "icepool.Population.quantile": {"tf": 1}, "icepool.from_cumulative_quantities": {"tf": 1}, "icepool.from_rv": {"tf": 1.7320508075688772}, "icepool.lowest": {"tf": 1.4142135623730951}, "icepool.highest": {"tf": 1.4142135623730951}, "icepool.reduce": {"tf": 1}, "icepool.accumulate": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.apply_sorted": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.Pool.post_roll_counts": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 2.8284271247461903}, "icepool.Pool.lowest": {"tf": 1.4142135623730951}, "icepool.Pool.highest": {"tf": 1.4142135623730951}, "icepool.standard_pool": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 2}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1.7320508075688772}, "icepool.Deck.__init__": {"tf": 2.8284271247461903}, "icepool.Deck.marginals": {"tf": 1}, "icepool.Deal.__init__": {"tf": 1}}, "df": 45}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"icepool": {"tf": 1.4142135623730951}}, "df": 1}}, "k": {"docs": {}, "df": 0, "s": {"docs": {"icepool.OutcomeCountEvaluator.direction": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.equals": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 2.449489742783178}}, "df": 4}}}, "n": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"icepool.apply_sorted": {"tf": 1}, "icepool.OutcomeCountGenerator": {"tf": 1}, "icepool.OutcomeCountGenerator.denominator": {"tf": 1}, "icepool.Pool.denominator": {"tf": 1}, "icepool.Deal.denominator": {"tf": 1}}, "df": 5, "s": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Population.denominator": {"tf": 1}, "icepool.Deck.size": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Die.unary_op": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}}, "df": 3}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"icepool.OutcomeCountEvaluator": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Population.quantile": {"tf": 1}, "icepool.Population.quantile_left": {"tf": 1}, "icepool.Population.quantile_right": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 4, "s": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die.truncate": {"tf": 1}, "icepool.Die.clip": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 6}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"icepool.Die.__init__": {"tf": 1.4142135623730951}, "icepool.Die.binary_op": {"tf": 1.7320508075688772}, "icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.truncate": {"tf": 1}, "icepool.Die.explode": {"tf": 1}, "icepool.Population.format": {"tf": 1}, "icepool.reduce": {"tf": 1}, "icepool.accumulate": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1}, "icepool.Pool.post_roll_counts": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 15}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Die.unary_op": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 3}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Die.binary_op": {"tf": 1}, "icepool.Population.probabilities_le": {"tf": 1}, "icepool.Population.probabilities_ge": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"icepool.OutcomeCountEvaluator.next_state": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.zero_outcome": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.bool": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.OutcomeCountGenerator.evaluate": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"icepool.JointEvaluator": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"icepool": {"tf": 1.4142135623730951}, "icepool.Die": {"tf": 1}, "icepool.Die.bool": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}}, "df": 2}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"icepool.OutcomeCountEvaluator.next_state": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.unary_op": {"tf": 1.4142135623730951}, "icepool.Die.unary_op_non_elementwise": {"tf": 1}, "icepool.Deck.unary_op_non_elementwise": {"tf": 1}}, "df": 4}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.explode": {"tf": 1}, "icepool.Population.format": {"tf": 1}}, "df": 5}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Die.reroll_until": {"tf": 1.7320508075688772}, "icepool.Die.sub": {"tf": 1}}, "df": 2}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.sub": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Population.denominator": {"tf": 1}, "icepool.Pool.unique_dice": {"tf": 1}, "icepool.Deck.size": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Die.key_tuple": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Pool.outcomes": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Die.equals": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}, "icepool.Die.__init__": {"tf": 2}, "icepool.Die.unary_op": {"tf": 1.4142135623730951}, "icepool.Die.binary_op": {"tf": 2}, "icepool.Die.truncate": {"tf": 1}, "icepool.Die.clip": {"tf": 1}, "icepool.Population.outcomes": {"tf": 1}, "icepool.Population.quantities": {"tf": 1}, "icepool.Population.denominator": {"tf": 1}, "icepool.Population.median": {"tf": 1}, "icepool.Population.quantile": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.apply_sorted": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}, "icepool.Deck.size": {"tf": 1}, "icepool.Deal.outcomes": {"tf": 1}}, "df": 19, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}}}, "d": {"docs": {"icepool.Die.__init__": {"tf": 1.4142135623730951}, "icepool.Die.unary_op": {"tf": 1.7320508075688772}, "icepool.Die.unary_op_non_elementwise": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Die.set_range": {"tf": 1.4142135623730951}, "icepool.Die.explode": {"tf": 1}, "icepool.Die.marginals": {"tf": 1}, "icepool.Population.marginals": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}, "icepool.Deck.unary_op_non_elementwise": {"tf": 1}, "icepool.Deck.marginals": {"tf": 1}}, "df": 16}, "s": {"docs": {"icepool.Population.sample": {"tf": 1}, "icepool.OutcomeCountGenerator.sum": {"tf": 1}, "icepool.OutcomeCountGenerator.sample": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Die.binary_op": {"tf": 1}, "icepool.Population.format": {"tf": 1}, "icepool.from_cumulative_quantities": {"tf": 1}, "icepool.apply": {"tf": 1.7320508075688772}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}}, "df": 6}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {"icepool.Die.clip": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1.4142135623730951}}, "df": 2}}, "o": {"docs": {"icepool.Population.format": {"tf": 1.4142135623730951}}, "df": 1, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}, "icepool.Die.unary_op": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1.4142135623730951}, "icepool.Die.sub": {"tf": 1.4142135623730951}, "icepool.Die.cmp": {"tf": 1.4142135623730951}, "icepool.Die.key_tuple": {"tf": 1}, "icepool.Die.equals": {"tf": 1.4142135623730951}, "icepool.Pool.__init__": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}}, "df": 11, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"icepool": {"tf": 1.4142135623730951}, "icepool.bernoulli": {"tf": 1}, "icepool.coin": {"tf": 1}, "icepool.Die.sign": {"tf": 1}, "icepool.Die.equals": {"tf": 1}, "icepool.Population.probabilities": {"tf": 1}, "icepool.Population.probabilities_le": {"tf": 1}, "icepool.Population.probabilities_ge": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 9}}}}, "s": {"docs": {"icepool.JointEvaluator.direction": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Die.__init__": {"tf": 1.4142135623730951}, "icepool.Die.unary_op": {"tf": 1}, "icepool.Die.binary_op": {"tf": 2}, "icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.sub": {"tf": 1.7320508075688772}, "icepool.Die.explode": {"tf": 1}, "icepool.Die.bool": {"tf": 1}, "icepool.Die.key_tuple": {"tf": 1}, "icepool.Die.equals": {"tf": 1}, "icepool.Population.outcome_len": {"tf": 1}, "icepool.Population.denominator": {"tf": 1}, "icepool.Population.quantity": {"tf": 1}, "icepool.Population.probabilities_le": {"tf": 1}, "icepool.Population.probabilities_ge": {"tf": 1.4142135623730951}, "icepool.Population.probability": {"tf": 1}, "icepool.Population.median": {"tf": 1}, "icepool.Population.quantile": {"tf": 1}, "icepool.Population.format": {"tf": 2.449489742783178}, "icepool.from_rv": {"tf": 1}, "icepool.lowest": {"tf": 1}, "icepool.highest": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.apply_sorted": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1.4142135623730951}, "icepool.Pool.__init__": {"tf": 1.7320508075688772}, "icepool.Pool.set_post_roll_counts": {"tf": 1.7320508075688772}, "icepool.Pool.lowest": {"tf": 1}, "icepool.Pool.highest": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1.7320508075688772}, "icepool.Deck.__init__": {"tf": 1}, "icepool.Deck.size": {"tf": 1}}, "df": 39, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool": {"tf": 1}, "icepool.Die.keys": {"tf": 1}, "icepool.Die.values": {"tf": 1}, "icepool.Die.items": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Population.keys": {"tf": 1}, "icepool.Population.values": {"tf": 1}, "icepool.Population.items": {"tf": 1}, "icepool.Population.quantities": {"tf": 1}, "icepool.Population.quantities_le": {"tf": 1}, "icepool.Population.quantities_ge": {"tf": 1}, "icepool.Population.probabilities": {"tf": 1}, "icepool.Population.probabilities_le": {"tf": 1}, "icepool.Population.probabilities_ge": {"tf": 1}, "icepool.from_cumulative_quantities": {"tf": 1.4142135623730951}, "icepool.accumulate": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.OutcomeCountGenerator.outcomes": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 2}, "icepool.Deck.keys": {"tf": 1}, "icepool.Deck.values": {"tf": 1}, "icepool.Deck.items": {"tf": 1}, "icepool.Deal.__init__": {"tf": 1}, "icepool.Deal.outcomes": {"tf": 1}}, "df": 26, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.__init__": {"tf": 1.4142135623730951}, "icepool.Die.key_tuple": {"tf": 1}, "icepool.Population": {"tf": 1}, "icepool.apply_sorted": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1.4142135623730951}}, "df": 8}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 3}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1.7320508075688772}}, "df": 2, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}, "icepool.Die.__init__": {"tf": 2.449489742783178}, "icepool.Die.unary_op": {"tf": 1.4142135623730951}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Die.values": {"tf": 1}, "icepool.Die.items": {"tf": 1}, "icepool.Die.reroll": {"tf": 2}, "icepool.Die.reroll_until": {"tf": 1.7320508075688772}, "icepool.Die.truncate": {"tf": 1}, "icepool.Die.clip": {"tf": 1}, "icepool.Die.set_range": {"tf": 2.449489742783178}, "icepool.Die.sub": {"tf": 2.23606797749979}, "icepool.Die.explode": {"tf": 2}, "icepool.Die.zero": {"tf": 1.4142135623730951}, "icepool.Die.zero_outcome": {"tf": 1}, "icepool.Die.cmp": {"tf": 1}, "icepool.Die.equals": {"tf": 1.4142135623730951}, "icepool.Population.values": {"tf": 1}, "icepool.Population.items": {"tf": 1}, "icepool.Population.min_outcome": {"tf": 1}, "icepool.Population.max_outcome": {"tf": 1}, "icepool.Population.nearest_le": {"tf": 1.4142135623730951}, "icepool.Population.nearest_ge": {"tf": 1.4142135623730951}, "icepool.Population.has_zero_quantities": {"tf": 1}, "icepool.Population.quantities_le": {"tf": 1}, "icepool.Population.quantities_ge": {"tf": 1}, "icepool.Population.quantity": {"tf": 1}, "icepool.Population.quantity_ne": {"tf": 1}, "icepool.Population.quantity_le": {"tf": 1}, "icepool.Population.quantity_lt": {"tf": 1}, "icepool.Population.quantity_ge": {"tf": 1}, "icepool.Population.quantity_gt": {"tf": 1}, "icepool.Population.probabilities": {"tf": 1}, "icepool.Population.probabilities_le": {"tf": 1}, "icepool.Population.probabilities_ge": {"tf": 1}, "icepool.Population.probability": {"tf": 1}, "icepool.Population.mode": {"tf": 1}, "icepool.Population.modal_quantity": {"tf": 1}, "icepool.Population.quantile": {"tf": 1}, "icepool.Population.quantile_left": {"tf": 1}, "icepool.Population.quantile_right": {"tf": 1}, "icepool.Population.format": {"tf": 1.7320508075688772}, "icepool.lowest": {"tf": 1}, "icepool.highest": {"tf": 1}, "icepool.min_outcome": {"tf": 1}, "icepool.max_outcome": {"tf": 1}, "icepool.reduce": {"tf": 1}, "icepool.accumulate": {"tf": 1}, "icepool.apply": {"tf": 2}, "icepool.apply_sorted": {"tf": 1.4142135623730951}, "icepool.Reroll": {"tf": 1}, "icepool.OutcomeCountGenerator": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1}, "icepool.Pool.min_outcome": {"tf": 1}, "icepool.Pool.max_outcome": {"tf": 1}, "icepool.Pool.lowest": {"tf": 1}, "icepool.Pool.highest": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 2.23606797749979}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 2.8284271247461903}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 2}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1.7320508075688772}, "icepool.JointEvaluator.final_outcome": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 2}, "icepool.Deck.__init__": {"tf": 2}, "icepool.Deck.values": {"tf": 1}, "icepool.Deck.items": {"tf": 1}}, "df": 66, "s": {"docs": {"icepool": {"tf": 1}, "icepool.standard": {"tf": 1}, "icepool.d": {"tf": 1}, "icepool.bernoulli": {"tf": 1}, "icepool.coin": {"tf": 1}, "icepool.Die": {"tf": 2.449489742783178}, "icepool.Die.__init__": {"tf": 3.605551275463989}, "icepool.Die.unary_op": {"tf": 1.4142135623730951}, "icepool.Die.binary_op": {"tf": 2.23606797749979}, "icepool.Die.keys": {"tf": 1}, "icepool.Die.reroll": {"tf": 3.3166247903554}, "icepool.Die.reroll_until": {"tf": 3.3166247903554}, "icepool.Die.truncate": {"tf": 1.7320508075688772}, "icepool.Die.clip": {"tf": 1.7320508075688772}, "icepool.Die.set_range": {"tf": 1}, "icepool.Die.set_outcomes": {"tf": 1.7320508075688772}, "icepool.Die.trim": {"tf": 1}, "icepool.Die.sub": {"tf": 3.3166247903554}, "icepool.Die.explode": {"tf": 3.1622776601683795}, "icepool.Die.if_else": {"tf": 1.4142135623730951}, "icepool.Die.keep_lowest": {"tf": 1}, "icepool.Die.marginals": {"tf": 1}, "icepool.Die.zero": {"tf": 1}, "icepool.Die.zero_outcome": {"tf": 1}, "icepool.Die.cmp": {"tf": 1.4142135623730951}, "icepool.Die.sign": {"tf": 1}, "icepool.Die.bool": {"tf": 1}, "icepool.Die.equals": {"tf": 1}, "icepool.Population": {"tf": 1.4142135623730951}, "icepool.Population.keys": {"tf": 1}, "icepool.Population.marginals": {"tf": 1}, "icepool.Population.outcomes": {"tf": 1.4142135623730951}, "icepool.Population.outcome_len": {"tf": 1.4142135623730951}, "icepool.Population.is_empty": {"tf": 1}, "icepool.Population.denominator": {"tf": 1}, "icepool.Population.median": {"tf": 1}, "icepool.Population.quantile": {"tf": 1}, "icepool.Population.format": {"tf": 1.4142135623730951}, "icepool.from_cumulative_quantities": {"tf": 1.7320508075688772}, "icepool.from_rv": {"tf": 1.7320508075688772}, "icepool.align": {"tf": 1}, "icepool.align_range": {"tf": 1}, "icepool.lowest": {"tf": 1}, "icepool.highest": {"tf": 1}, "icepool.reduce": {"tf": 1}, "icepool.accumulate": {"tf": 1}, "icepool.apply": {"tf": 1.4142135623730951}, "icepool.apply_sorted": {"tf": 2}, "icepool.OutcomeCountGenerator.outcomes": {"tf": 1}, "icepool.OutcomeCountGenerator.sample": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1.7320508075688772}, "icepool.Pool.outcomes": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.Pool.lowest": {"tf": 1}, "icepool.Pool.highest": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 3.1622776601683795}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.EvaluateSum": {"tf": 1}, "icepool.EvaluateSum.next_state": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1.4142135623730951}, "icepool.Deck.__init__": {"tf": 3.4641016151377544}, "icepool.Deck.keys": {"tf": 1}, "icepool.Deck.size": {"tf": 1}, "icepool.Deck.marginals": {"tf": 1}, "icepool.Deal.outcomes": {"tf": 1.4142135623730951}}, "df": 70}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Die": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.apply_sorted": {"tf": 1}, "icepool.OutcomeCountGenerator": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 2.23606797749979}, "icepool.Pool": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.JointEvaluator": {"tf": 1}, "icepool.EvaluateSum": {"tf": 1}, "icepool.Deal.__init__": {"tf": 1}}, "df": 13}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.OutcomeCountEvaluator": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.truncate": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Population.format": {"tf": 1}, "icepool.OutcomeCountGenerator.sample": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}}, "df": 3, "s": {"docs": {"icepool.apply": {"tf": 1}, "icepool.apply_sorted": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.unary_op": {"tf": 1.4142135623730951}, "icepool.Die.binary_op": {"tf": 1.4142135623730951}, "icepool.Die.truncate": {"tf": 1}, "icepool.Die.sub": {"tf": 1.4142135623730951}, "icepool.Die.marginals": {"tf": 1}, "icepool.Population.marginals": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 2.8284271247461903}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.JointEvaluator": {"tf": 1}, "icepool.Deck.marginals": {"tf": 1}}, "df": 11, "e": {"docs": {"icepool.bernoulli": {"tf": 1}, "icepool.coin": {"tf": 1}, "icepool.Die.__init__": {"tf": 1.7320508075688772}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.truncate": {"tf": 1}, "icepool.Die.clip": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.equals": {"tf": 1}, "icepool.Population.has_zero_quantities": {"tf": 1}, "icepool.align": {"tf": 1}, "icepool.align_range": {"tf": 1}, "icepool.lowest": {"tf": 1}, "icepool.highest": {"tf": 1}, "icepool.accumulate": {"tf": 1}, "icepool.apply": {"tf": 2}, "icepool.apply_sorted": {"tf": 1.4142135623730951}, "icepool.Pool.__init__": {"tf": 1}, "icepool.Pool.post_roll_counts": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 2.449489742783178}, "icepool.standard_pool": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.OutcomeCountEvaluator.sample": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1.4142135623730951}, "icepool.Deal.__init__": {"tf": 1}}, "df": 30}, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Die.binary_op": {"tf": 1}, "icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.explode": {"tf": 1}, "icepool.Die.equals": {"tf": 1.4142135623730951}, "icepool.Pool": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}}, "df": 11}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Pool.set_post_roll_counts": {"tf": 1.4142135623730951}}, "df": 1}}}, "f": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Die.__init__": {"tf": 5}, "icepool.Die.unary_op": {"tf": 1}, "icepool.Die.binary_op": {"tf": 2}, "icepool.Die.items": {"tf": 1}, "icepool.Die.reroll": {"tf": 1.7320508075688772}, "icepool.Die.reroll_until": {"tf": 2.23606797749979}, "icepool.Die.truncate": {"tf": 1.4142135623730951}, "icepool.Die.clip": {"tf": 1.4142135623730951}, "icepool.Die.set_range": {"tf": 2.23606797749979}, "icepool.Die.set_outcomes": {"tf": 1}, "icepool.Die.sub": {"tf": 2.23606797749979}, "icepool.Die.explode": {"tf": 1.4142135623730951}, "icepool.Die.pool": {"tf": 1.4142135623730951}, "icepool.Die.keep_lowest": {"tf": 2}, "icepool.Die.keep_highest": {"tf": 2}, "icepool.Die.marginals": {"tf": 1}, "icepool.Die.zero": {"tf": 1}, "icepool.Die.cmp": {"tf": 1}, "icepool.Die.bool": {"tf": 1.4142135623730951}, "icepool.Die.equals": {"tf": 1}, "icepool.Population.items": {"tf": 1}, "icepool.Population.marginals": {"tf": 1}, "icepool.Population.outcomes": {"tf": 1.4142135623730951}, "icepool.Population.outcome_len": {"tf": 1.4142135623730951}, "icepool.Population.quantities": {"tf": 1.4142135623730951}, "icepool.Population.denominator": {"tf": 1.4142135623730951}, "icepool.Population.quantity": {"tf": 1}, "icepool.Population.probabilities": {"tf": 1.4142135623730951}, "icepool.Population.probabilities_le": {"tf": 1.4142135623730951}, "icepool.Population.probabilities_ge": {"tf": 1.4142135623730951}, "icepool.Population.probability": {"tf": 1}, "icepool.Population.mode": {"tf": 1}, "icepool.Population.modal_quantity": {"tf": 1}, "icepool.Population.cramer_von_mises": {"tf": 1}, "icepool.Population.median": {"tf": 1}, "icepool.Population.median_left": {"tf": 1}, "icepool.Population.median_right": {"tf": 1}, "icepool.Population.quantile": {"tf": 1.4142135623730951}, "icepool.Population.quantile_left": {"tf": 1.4142135623730951}, "icepool.Population.quantile_right": {"tf": 1.4142135623730951}, "icepool.from_cumulative_quantities": {"tf": 2}, "icepool.from_rv": {"tf": 1.7320508075688772}, "icepool.align": {"tf": 1.4142135623730951}, "icepool.align_range": {"tf": 1.4142135623730951}, "icepool.lowest": {"tf": 1.7320508075688772}, "icepool.highest": {"tf": 1.7320508075688772}, "icepool.reduce": {"tf": 2.449489742783178}, "icepool.accumulate": {"tf": 3}, "icepool.apply": {"tf": 3.1622776601683795}, "icepool.apply_sorted": {"tf": 2.23606797749979}, "icepool.OutcomeCountGenerator.outcomes": {"tf": 1}, "icepool.OutcomeCountGenerator.denominator": {"tf": 1}, "icepool.OutcomeCountGenerator.sample": {"tf": 1.4142135623730951}, "icepool.Pool": {"tf": 1}, "icepool.Pool.__init__": {"tf": 3.3166247903554}, "icepool.Pool.size": {"tf": 1.4142135623730951}, "icepool.Pool.denominator": {"tf": 1}, "icepool.Pool.unique_dice": {"tf": 1}, "icepool.Pool.outcomes": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 4.242640687119285}, "icepool.Pool.lowest": {"tf": 2}, "icepool.Pool.highest": {"tf": 2}, "icepool.standard_pool": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator": {"tf": 3.605551275463989}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 2.6457513110645907}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 2.449489742783178}, "icepool.OutcomeCountEvaluator.direction": {"tf": 2.23606797749979}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 2}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 2}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 2.6457513110645907}, "icepool.JointEvaluator": {"tf": 1}, "icepool.JointEvaluator.next_state": {"tf": 1}, "icepool.JointEvaluator.final_outcome": {"tf": 1}, "icepool.JointEvaluator.direction": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 2.449489742783178}, "icepool.Deck.__init__": {"tf": 3.4641016151377544}, "icepool.Deck.items": {"tf": 1}, "icepool.Deck.size": {"tf": 1.4142135623730951}, "icepool.Deck.marginals": {"tf": 1}, "icepool.Deal": {"tf": 1}, "icepool.Deal.__init__": {"tf": 1.4142135623730951}, "icepool.Deal.hand_sizes": {"tf": 1}, "icepool.Deal.total_cards_dealt": {"tf": 1}, "icepool.Deal.outcomes": {"tf": 1.4142135623730951}, "icepool.Deal.denominator": {"tf": 1}}, "df": 86, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {"icepool.Die.__init__": {"tf": 1.4142135623730951}, "icepool.Die.unary_op_non_elementwise": {"tf": 1}, "icepool.Deck.unary_op_non_elementwise": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Die.unary_op": {"tf": 1.7320508075688772}, "icepool.Die.binary_op": {"tf": 1.4142135623730951}, "icepool.Die.if_else": {"tf": 1}, "icepool.Die.marginals": {"tf": 1}, "icepool.Population.marginals": {"tf": 1}, "icepool.Deck.marginals": {"tf": 1}}, "df": 6, "s": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Die.__init__": {"tf": 1}, "icepool.Die.unary_op": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Die.bool": {"tf": 1}, "icepool.Die.equals": {"tf": 1}}, "df": 6}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Die.unary_op": {"tf": 1.4142135623730951}, "icepool.Die.binary_op": {"tf": 1}}, "df": 2, "s": {"docs": {"icepool.Die.unary_op": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.binary_op": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {"icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.explode": {"tf": 1}, "icepool.Population.format": {"tf": 1}}, "df": 4}, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 4, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Population.format": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 2}}}}}}}}}, "w": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Die.unary_op": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1}}, "df": 3}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.set_range": {"tf": 1.4142135623730951}, "icepool.Population.format": {"tf": 1}}, "df": 4}}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.sub": {"tf": 2}}, "df": 1}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"icepool.from_rv": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.Deck.deal": {"tf": 1}}, "df": 4, "s": {"docs": {"icepool.apply": {"tf": 1}, "icepool.apply_sorted": {"tf": 1}}, "df": 2}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Pool.lowest": {"tf": 1}, "icepool.Pool.highest": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1.4142135623730951}}, "df": 3}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 1}}}}}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"icepool": {"tf": 1}, "icepool.bernoulli": {"tf": 1}, "icepool.coin": {"tf": 1}, "icepool.Die": {"tf": 2}, "icepool.Die.__init__": {"tf": 1}, "icepool.Die.unary_op": {"tf": 1}, "icepool.Die.set_outcomes": {"tf": 1}, "icepool.Die.trim": {"tf": 1}, "icepool.Die.zero_outcome": {"tf": 1}, "icepool.Die.cmp": {"tf": 1}, "icepool.Die.sign": {"tf": 1.4142135623730951}, "icepool.Die.equals": {"tf": 1}, "icepool.Population.denominator": {"tf": 1}, "icepool.Population.has_zero_quantities": {"tf": 1}, "icepool.Population.format": {"tf": 1}, "icepool.align": {"tf": 1}, "icepool.align_range": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1.4142135623730951}, "icepool.Deck.size": {"tf": 1}}, "df": 21, "s": {"docs": {"icepool.Die.zero": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "q": {"docs": {"icepool.Population.format": {"tf": 1.7320508075688772}}, "df": 1, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"icepool": {"tf": 1}, "icepool.standard": {"tf": 1}, "icepool.d": {"tf": 1}, "icepool.bernoulli": {"tf": 1}, "icepool.coin": {"tf": 1}, "icepool.Die": {"tf": 2}, "icepool.Die.__init__": {"tf": 2}, "icepool.Die.items": {"tf": 1}, "icepool.Die.clip": {"tf": 1}, "icepool.Die.set_outcomes": {"tf": 1}, "icepool.Die.trim": {"tf": 1}, "icepool.Die.cmp": {"tf": 1}, "icepool.Die.equals": {"tf": 1}, "icepool.Population.items": {"tf": 1}, "icepool.Population.denominator": {"tf": 1}, "icepool.Population.has_zero_quantities": {"tf": 1}, "icepool.Population.quantities_le": {"tf": 1}, "icepool.Population.quantities_ge": {"tf": 1}, "icepool.Population.quantity": {"tf": 1}, "icepool.Population.quantity_ne": {"tf": 1}, "icepool.Population.quantity_le": {"tf": 1}, "icepool.Population.quantity_lt": {"tf": 1}, "icepool.Population.quantity_ge": {"tf": 1}, "icepool.Population.quantity_gt": {"tf": 1}, "icepool.Population.modal_quantity": {"tf": 1}, "icepool.Population.format": {"tf": 1.4142135623730951}, "icepool.Deck.items": {"tf": 1}, "icepool.Deck.size": {"tf": 1}}, "df": 28}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Die.__init__": {"tf": 3.1622776601683795}, "icepool.Die.values": {"tf": 1}, "icepool.Die.reduce": {"tf": 1}, "icepool.Die.cmp": {"tf": 1}, "icepool.Die.equals": {"tf": 1}, "icepool.Population": {"tf": 1}, "icepool.Population.values": {"tf": 1}, "icepool.Population.quantities": {"tf": 1.4142135623730951}, "icepool.Population.denominator": {"tf": 1}, "icepool.Population.format": {"tf": 1}, "icepool.from_cumulative_quantities": {"tf": 1.7320508075688772}, "icepool.align": {"tf": 1}, "icepool.align_range": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.Deck": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1.7320508075688772}, "icepool.Deck.values": {"tf": 1}, "icepool.Deck.size": {"tf": 1}}, "df": 19}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Population.quantile": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"icepool": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die.keep_highest": {"tf": 1.4142135623730951}, "icepool.Population.mode": {"tf": 1}, "icepool.Population.modal_quantity": {"tf": 1}, "icepool.highest": {"tf": 2}, "icepool.Pool.post_roll_counts": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1.7320508075688772}, "icepool.Pool.highest": {"tf": 2}}, "df": 7}}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"icepool.bernoulli": {"tf": 1}, "icepool.coin": {"tf": 1}, "icepool.Die": {"tf": 2.449489742783178}, "icepool.Die.__init__": {"tf": 1.4142135623730951}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Die.keep_lowest": {"tf": 1}, "icepool.Die.zero": {"tf": 1}, "icepool.Die.cmp": {"tf": 1}, "icepool.Die.bool": {"tf": 1}, "icepool.Die.key_tuple": {"tf": 1}, "icepool.Die.equals": {"tf": 1.7320508075688772}, "icepool.align": {"tf": 1}, "icepool.align_range": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.JointEvaluator.direction": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 19}}, "s": {"docs": {"icepool.bernoulli": {"tf": 1}, "icepool.coin": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Die.reroll": {"tf": 1.4142135623730951}, "icepool.Die.reroll_until": {"tf": 1.4142135623730951}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.explode": {"tf": 1}, "icepool.Die.equals": {"tf": 1}, "icepool.Population.is_empty": {"tf": 1}, "icepool.Pool.post_roll_counts": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}}, "df": 12, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.__init__": {"tf": 1.4142135623730951}, "icepool.Die.key_tuple": {"tf": 1}, "icepool.Population": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1.7320508075688772}, "icepool.Deck.__init__": {"tf": 1.4142135623730951}}, "df": 5}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Deal.__init__": {"tf": 2}, "icepool.Deal.hand_sizes": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.OutcomeCountEvaluator": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1.4142135623730951}}, "df": 7}}, "s": {"docs": {"icepool.Deal.__init__": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.Deal.__init__": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}}, "df": 3}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "p": {"docs": {"icepool.Die.__init__": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {"icepool.bernoulli": {"tf": 1}, "icepool.coin": {"tf": 1}, "icepool.Population.quantile": {"tf": 1}, "icepool.Population.quantile_left": {"tf": 1}, "icepool.Population.quantile_right": {"tf": 1}}, "df": 5, "o": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Die.reroll": {"tf": 1.4142135623730951}, "icepool.Die.reroll_until": {"tf": 1.4142135623730951}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.explode": {"tf": 1}, "icepool.Die.zero": {"tf": 1}, "icepool.Population.is_empty": {"tf": 1}, "icepool.Population.nearest_le": {"tf": 1}, "icepool.Population.nearest_ge": {"tf": 1}, "icepool.accumulate": {"tf": 1}, "icepool.Reroll": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1.4142135623730951}}, "df": 18, "t": {"docs": {"icepool.Die": {"tf": 2}, "icepool.Die.__init__": {"tf": 1}, "icepool.Die.unary_op": {"tf": 1}, "icepool.Die.unary_op_non_elementwise": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1.7320508075688772}, "icepool.Die.reroll": {"tf": 1.4142135623730951}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.truncate": {"tf": 1.7320508075688772}, "icepool.Die.clip": {"tf": 1.7320508075688772}, "icepool.Die.set_outcomes": {"tf": 1.4142135623730951}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.explode": {"tf": 1.7320508075688772}, "icepool.Die.marginals": {"tf": 1}, "icepool.Die.zero": {"tf": 1}, "icepool.Die.bool": {"tf": 1}, "icepool.Die.key_tuple": {"tf": 1}, "icepool.Die.equals": {"tf": 2}, "icepool.Population.marginals": {"tf": 1}, "icepool.Population.outcome_len": {"tf": 1}, "icepool.Population.quantity": {"tf": 1}, "icepool.Population.probability": {"tf": 1}, "icepool.Population.median": {"tf": 1}, "icepool.Population.quantile": {"tf": 1}, "icepool.Population.variance": {"tf": 1}, "icepool.Population.sample": {"tf": 1}, "icepool.from_cumulative_quantities": {"tf": 1}, "icepool.apply": {"tf": 1.4142135623730951}, "icepool.apply_sorted": {"tf": 1}, "icepool.OutcomeCountGenerator.sample": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}, "icepool.Deck.unary_op_non_elementwise": {"tf": 1}, "icepool.Deck.marginals": {"tf": 1}}, "df": 37, "e": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Die.sign": {"tf": 1}, "icepool.Die.bool": {"tf": 1}, "icepool.Population.sample": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 9}}, "n": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.explode": {"tf": 1}, "icepool.reduce": {"tf": 1}, "icepool.accumulate": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}}, "df": 8, "e": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Die.__init__": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Population.outcome_len": {"tf": 1}, "icepool.Population.nearest_le": {"tf": 1}, "icepool.Population.nearest_ge": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1.4142135623730951}, "icepool.EvaluateSum.final_outcome": {"tf": 1.4142135623730951}}, "df": 10}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"icepool.OutcomeCountEvaluator.next_state": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Die.__init__": {"tf": 1.4142135623730951}, "icepool.Die.reroll": {"tf": 1.4142135623730951}, "icepool.Die.reroll_until": {"tf": 1.4142135623730951}, "icepool.Die.explode": {"tf": 1}, "icepool.Die.pool": {"tf": 1}, "icepool.Die.keep_lowest": {"tf": 1.4142135623730951}, "icepool.Die.keep_highest": {"tf": 1.4142135623730951}, "icepool.Population.denominator": {"tf": 1}, "icepool.lowest": {"tf": 1.4142135623730951}, "icepool.highest": {"tf": 1.4142135623730951}, "icepool.accumulate": {"tf": 1.4142135623730951}, "icepool.apply": {"tf": 1}, "icepool.apply_sorted": {"tf": 1}, "icepool.Pool.__init__": {"tf": 1}, "icepool.Pool.size": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1.4142135623730951}, "icepool.Pool.lowest": {"tf": 1.4142135623730951}, "icepool.Pool.highest": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1.4142135623730951}, "icepool.EvaluateSum.final_outcome": {"tf": 1.7320508075688772}, "icepool.Deck.__init__": {"tf": 1.4142135623730951}, "icepool.Deck.size": {"tf": 1}, "icepool.Deal.__init__": {"tf": 1.4142135623730951}, "icepool.Deal.hand_sizes": {"tf": 1}, "icepool.Deal.total_cards_dealt": {"tf": 1}}, "df": 31, "s": {"docs": {"icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 2}}, "df": 2}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.unary_op": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1.4142135623730951}}, "df": 3}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die.truncate": {"tf": 1}, "icepool.Population.nearest_le": {"tf": 1}, "icepool.Population.nearest_ge": {"tf": 1}}, "df": 3}}}}}, "w": {"docs": {"icepool.Die.sub": {"tf": 2}}, "df": 1}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"icepool.from_cumulative_quantities": {"tf": 1}}, "df": 1}}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"icepool.apply_sorted": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator": {"tf": 2.8284271247461903}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1.7320508075688772}, "icepool.JointEvaluator.next_state": {"tf": 1}, "icepool.Deal.__init__": {"tf": 1}}, "df": 8}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Die.sign": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Population.outcomes": {"tf": 1}, "icepool.Population.quantities": {"tf": 1}, "icepool.Deal.outcomes": {"tf": 1}}, "df": 3, "d": {"docs": {"icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 3}}}}}, "b": {"docs": {"icepool.apply": {"tf": 1.4142135623730951}}, "df": 1, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"icepool.bernoulli": {"tf": 1}, "icepool.coin": {"tf": 1}, "icepool.Die.__init__": {"tf": 1}, "icepool.Die.equals": {"tf": 1}, "icepool.CountsKeysView": {"tf": 1}, "icepool.CountsValuesView": {"tf": 1}, "icepool.CountsItemsView": {"tf": 1}, "icepool.from_cumulative_quantities": {"tf": 1}, "icepool.Deck.__init__": {"tf": 1}}, "df": 9}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Die.unary_op": {"tf": 1}, "icepool.Die.bool": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Die.__init__": {"tf": 3.605551275463989}, "icepool.Die.reroll": {"tf": 2.23606797749979}, "icepool.Die.reroll_until": {"tf": 2}, "icepool.Die.truncate": {"tf": 1.4142135623730951}, "icepool.Die.clip": {"tf": 1}, "icepool.Die.set_range": {"tf": 1.4142135623730951}, "icepool.Die.sub": {"tf": 2.23606797749979}, "icepool.Die.explode": {"tf": 2.449489742783178}, "icepool.Die.keep_lowest": {"tf": 1}, "icepool.Die.keep_highest": {"tf": 1}, "icepool.Die.marginals": {"tf": 1}, "icepool.Die.key_tuple": {"tf": 1}, "icepool.Die.equals": {"tf": 1.4142135623730951}, "icepool.Population": {"tf": 1}, "icepool.Population.marginals": {"tf": 1}, "icepool.Population.probabilities": {"tf": 1.4142135623730951}, "icepool.Population.probabilities_le": {"tf": 1.4142135623730951}, "icepool.Population.probabilities_ge": {"tf": 1.4142135623730951}, "icepool.Population.format": {"tf": 1}, "icepool.from_cumulative_quantities": {"tf": 1}, "icepool.from_rv": {"tf": 2}, "icepool.lowest": {"tf": 2.23606797749979}, "icepool.highest": {"tf": 2.23606797749979}, "icepool.reduce": {"tf": 1}, "icepool.accumulate": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.apply_sorted": {"tf": 1.4142135623730951}, "icepool.Reroll": {"tf": 1}, "icepool.OutcomeCountGenerator": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1.4142135623730951}, "icepool.Pool": {"tf": 1}, "icepool.Pool.__init__": {"tf": 2}, "icepool.Pool.post_roll_counts": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 2.8284271247461903}, "icepool.Pool.lowest": {"tf": 1.7320508075688772}, "icepool.Pool.highest": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator": {"tf": 2}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 2.8284271247461903}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 2}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 2}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1.4142135623730951}, "icepool.JointEvaluator": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 2}, "icepool.Deck.__init__": {"tf": 3.3166247903554}, "icepool.Deck.marginals": {"tf": 1}, "icepool.Deal.__init__": {"tf": 1}}, "df": 49, "s": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Die.key_tuple": {"tf": 1}, "icepool.Population.format": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 8}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Die.unary_op": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.OutcomeCountEvaluator": {"tf": 1}}, "df": 3}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Die.binary_op": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 3}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Die.binary_op": {"tf": 1}, "icepool.Population.kolmogorov_smirnov": {"tf": 1}, "icepool.Population.cramer_von_mises": {"tf": 1}}, "df": 3}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.reroll": {"tf": 1}, "icepool.Die.reroll_until": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.Die.explode": {"tf": 1}, "icepool.Die.keep_lowest": {"tf": 1}, "icepool.Die.keep_highest": {"tf": 1}, "icepool.Die.equals": {"tf": 1}, "icepool.lowest": {"tf": 1}, "icepool.highest": {"tf": 1}, "icepool.Pool.lowest": {"tf": 1}, "icepool.Pool.highest": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}}, "df": 12}}}}, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die.clip": {"tf": 1.4142135623730951}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die.sign": {"tf": 1.4142135623730951}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"icepool.OutcomeCountEvaluator.alignment": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.unary_op_non_elementwise": {"tf": 1}, "icepool.from_cumulative_quantities": {"tf": 1}, "icepool.apply": {"tf": 1.4142135623730951}, "icepool.apply_sorted": {"tf": 1}, "icepool.Pool.set_post_roll_counts": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.Deck.unary_op_non_elementwise": {"tf": 1}}, "df": 8}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"icepool.Die.clip": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {"icepool.Die.__init__": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Die.reduce": {"tf": 1}, "icepool.Die.zero": {"tf": 1}, "icepool.Die.equals": {"tf": 1.7320508075688772}, "icepool.Population.format": {"tf": 1}, "icepool.apply": {"tf": 1.4142135623730951}, "icepool.OutcomeCountGenerator": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1.4142135623730951}, "icepool.EvaluateSum.final_outcome": {"tf": 1}}, "df": 14}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"icepool.OutcomeCountGenerator": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1}}, "df": 2, "d": {"docs": {"icepool.Die.sub": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Pool.__init__": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Die.__init__": {"tf": 1}, "icepool.Die.unary_op": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}, "icepool.Die.truncate": {"tf": 1}, "icepool.Die.clip": {"tf": 1}, "icepool.Die.sub": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.OutcomeCountGenerator.evaluate": {"tf": 1.4142135623730951}, "icepool.OutcomeCountEvaluator": {"tf": 1}, "icepool.OutcomeCountEvaluator.next_state": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator.final_outcome": {"tf": 1}, "icepool.OutcomeCountEvaluator.direction": {"tf": 1}, "icepool.OutcomeCountEvaluator.alignment": {"tf": 1.7320508075688772}, "icepool.OutcomeCountEvaluator.range_alignment": {"tf": 1}, "icepool.OutcomeCountEvaluator.evaluate": {"tf": 1}, "icepool.EvaluateSum.final_outcome": {"tf": 1}, "icepool.Deal.__init__": {"tf": 1}}, "df": 18, "r": {"docs": {"icepool.Die.unary_op": {"tf": 1}, "icepool.Die.binary_op": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.accumulate": {"tf": 1}}, "df": 1}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"icepool.Die.keep_lowest": {"tf": 1.4142135623730951}, "icepool.Die.keep_highest": {"tf": 1.4142135623730951}, "icepool.lowest": {"tf": 1}, "icepool.highest": {"tf": 1}, "icepool.Pool.lowest": {"tf": 1}, "icepool.Pool.highest": {"tf": 1}, "icepool.Deal.__init__": {"tf": 1}}, "df": 7, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Die.keep_lowest": {"tf": 1}, "icepool.Die.keep_highest": {"tf": 1}, "icepool.lowest": {"tf": 1}, "icepool.highest": {"tf": 1}, "icepool.Pool.lowest": {"tf": 1}, "icepool.Pool.highest": {"tf": 1}}, "df": 6}}}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Population.outcomes": {"tf": 1}, "icepool.Deal.outcomes": {"tf": 1}}, "df": 2, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"icepool.CountsKeysView": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Population.probabilities": {"tf": 1}, "icepool.Population.probabilities_le": {"tf": 1}, "icepool.Population.probabilities_ge": {"tf": 1}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "\u2013": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {"icepool.Population.kolmogorov_smirnov": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"icepool.from_rv": {"tf": 1}}, "df": 1}}}}}}, "x": {"docs": {"icepool.standard_pool": {"tf": 1}}, "df": 1}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();