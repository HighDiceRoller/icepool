window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"icepool": {"fullname": "icepool", "modulename": "icepool", "type": "module", "doc": "<p>Package for computing dice probabilities.</p>\n\n<p>See <a href=\"https://highdiceroller.github.io/icepool/notebooks/lab/index.html\">this JupyterLite distribution</a> for examples.</p>\n\n<p><a href=\"https://github.com/HighDiceRoller/icepool\">Visit the project page.</a></p>\n\n<p>General conventions:</p>\n\n<ul>\n<li>Unless explictly specified otherwise, all sorting is in ascending order.</li>\n<li>The words \"min\" and \"max\" refer to outcomes, and the words \"low\" and \"high\" refer to dice in a pool.</li>\n</ul>\n"}, "icepool.Die": {"fullname": "icepool.Die", "modulename": "icepool", "qualname": "Die", "type": "function", "doc": "<p>Factory for constructing a die.</p>\n\n<p>This is capitalized because it is the preferred way of getting a new instance,\nand so that you can use <code>from icepool import Die</code> while leaving the name <code>die</code> free.\nThe actual class of the result will be one of the subclasses of <code>BaseDie</code>.</p>\n\n<p>Don't confuse this with <code>icepool.d()</code>:</p>\n\n<ul>\n<li><code>icepool.Die(6)</code>: A die that always rolls the <code>int</code> 6.</li>\n<li><code>icepool.d(6)</code>: A d6.</li>\n</ul>\n\n<p>Here are some different ways of constructing a d6:</p>\n\n<ul>\n<li>Just import it: <code>from icepool import d6</code></li>\n<li>Use the <code>d()</code> function: <code>icepool.d(6)</code></li>\n<li>Use a d6 that you already have: <code>Die(d6)</code></li>\n<li>Mix a d3 and a d3+3: <code>Die(d3, d3+3)</code></li>\n<li>Use a dict: <code>Die({1:1, 2:1, 3:1, 4:1, 5:1, 6:1})</code></li>\n<li>Give the faces as args: <code>Die(1, 2, 3, 4, 5, 6)</code></li>\n</ul>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><p><strong>*args:</strong>  Each of these arguments can be one of the following:</p>\n\n<ul>\n<li><p>A single outcome, which must be hashable and comparable.\nThe same outcome can appear multiple times,\nin which case it will be weighted proportionally higher.</p>\n\n<p>Note: An argument that is a sequence will be treated as a single outcome.\nIf you want each element in the sequence to be a separate outcome,\nyou need to unpack it into separate arguments.</p></li>\n<li>A die. The <code>ndim</code> of the die must be preserved, or this is a <code>ValueError</code>.\nThe outcomes of the die will be \"flattened\" in the result die.</li>\n<li><p>A dict-like that maps outcomes to weights.\nThis option will be taken in preference to treating the dict-like itself as an outcome\neven if the dict-like itself is hashable and comparable.</p>\n\n<p>Not recommended options:</p>\n\n<ul>\n<li>If you want to use the dict-like itself as an outcome, wrap it in another dict.</li>\n<li>The dict itself can contain <code>icepool.Reroll</code>.\nThis will only reroll within the dict, not the entire construction.</li>\n</ul></li>\n<li><code>icepool.Reroll</code>, which will drop itself\nand the corresponding element of <code>weights</code> from consideration.</li>\n</ul></li>\n<li><strong>weights:</strong>  Controls the relative weight of the arguments.\nIf not provided, each argument will end up with the same total weight,\nunless they have zero weight to begin with.\nFor example, <code>Die(d6, 7)</code> is the same as <code>Die(1, 2, 3, 4, 5, 6, 7, 7, 7, 7, 7, 7)</code>.</li>\n<li><strong>min_outcome:</strong>  If used, there must be zero <code>*args</code> and <code>weights</code> must be provided.\nThe outcomes of the result will be integers starting at <code>min_outcome</code>,\none per weight in <code>weights</code> with that weight.</li>\n<li><strong>ndim:</strong>  If set to <code>'scalar'</code>, the die will be forced to be scalar.\nIf set to an <code>int</code>, the die will be forced to be vector with that number of dimensions.\nIf not provided, this will be automatically detected.\nIf all arguments are <code>tuple</code>s of the same length,\nthe result will have that many dimensions.\nOtherwise the result will be scalar.</li>\n<li><strong>denominator_method:</strong>  How to determine the denominator of the result\nif the arguments themselves contain weights.\nFrom greatest to least:\n<ul>\n<li>'prod': Product of the individual argument denominators, times the total of <code>weights</code>.\nThis is like rolling all of the possible dice, and then selecting a result.</li>\n<li>'lcm' (default): LCM of the individual argument denominators, times the total of <code>weights</code>.\nThis is like rolling <code>weights</code> first, then selecting an argument to roll.</li>\n<li>'lcm_weighted': LCM of the individual (argument denominators times corresponding element of <code>weights</code>).\nThis is like rolling the above, but the specific weight rolled\nis used to help determine the result of the selected argument.</li>\n<li>'reduce': <code>reduce()</code> is called at the end.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><code>ValueError</code> if <code>ndim</code> is set but is not consistent with <code>*args</code>,\nor there is a mismatch between the <code>ndim</code> of die arguments.\nFurthermore, <code>None</code> is not a valid outcome for a die.</li>\n</ul>\n", "signature": "(\n    *args,\n    weights=None,\n    min_outcome=None,\n    ndim=None,\n    denominator_method='lcm'\n)", "funcdef": "def"}, "icepool.standard": {"fullname": "icepool.standard", "modulename": "icepool", "qualname": "standard", "type": "function", "doc": "<p>A standard die.</p>\n\n<p>Specifically, the outcomes are <code>int</code>s from <code>1</code> to <code>num_sides</code> inclusive, with weight 1 each. </p>\n\n<p>Don't confuse this with <code>icepool.Die()</code>:</p>\n\n<ul>\n<li><code>icepool.Die(6)</code>: A die that always rolls the integer 6.</li>\n<li><code>icepool.d(6)</code>: A d6.</li>\n</ul>\n", "signature": "(num_sides)", "funcdef": "def"}, "icepool.d": {"fullname": "icepool.d", "modulename": "icepool", "qualname": "d", "type": "function", "doc": "<p>Converts the argument to a standard die if it is not already a die.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>arg:</strong>  Either:\n<ul>\n<li>An <code>int</code>, which produces a standard die.</li>\n<li>A die, which is returned itself.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A die.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><code>TypeError</code> if the argument is not an <code>int</code> or a die.</li>\n</ul>\n", "signature": "(arg)", "funcdef": "def"}, "icepool.bernoulli": {"fullname": "icepool.bernoulli", "modulename": "icepool", "qualname": "bernoulli", "type": "function", "doc": "<p>A die that rolls <code>True</code> with chance <code>n / d</code>, and <code>False</code> otherwise.</p>\n", "signature": "(n, d)", "funcdef": "def"}, "icepool.coin": {"fullname": "icepool.coin", "modulename": "icepool", "qualname": "coin", "type": "function", "doc": "<p>A die that rolls <code>True</code> with chance <code>n / d</code>, and <code>False</code> otherwise.</p>\n", "signature": "(n, d)", "funcdef": "def"}, "icepool.BaseDie": {"fullname": "icepool.BaseDie", "modulename": "icepool", "qualname": "BaseDie", "type": "class", "doc": "<p>Abstract base class for a die.</p>\n\n<p>A die is a sorted mapping of outcomes to <code>int</code> weights.</p>\n\n<p>Dice are immutable. Methods do not modify the die in-place;\nrather they return a die representing the result.</p>\n\n<p>It <em>is</em> (mostly) well-defined to have a die with zero-weight outcomes,\neven though this is not a proper probability distribution.\nThese can be useful in a few cases, such as:</p>\n\n<ul>\n<li><code>DicePool</code> and <code>EvalPool</code> will iterate through zero-weight outcomes with 0 <code>count</code>,\nrather than <code>None</code> or skipping that outcome.</li>\n<li><code>icepool.align()</code> and the like are convenient for making dice share the same set of outcomes.</li>\n</ul>\n\n<p>However, zero-weight outcomes have a computational cost like any other outcome.\nUnless you have a specific use case in mind, it's best to leave them out if not necessary.</p>\n\n<p>Most operators and methods will not introduce zero-weight outcomes if their arguments do not have any.</p>\n\n<p>It's also possible to have \"empty\" dice with no outcomes at all,\nthough these have little use other than being sentinel values.</p>\n"}, "icepool.BaseDie.__init__": {"fullname": "icepool.BaseDie.__init__", "modulename": "icepool", "qualname": "BaseDie.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "icepool.BaseDie.ndim": {"fullname": "icepool.BaseDie.ndim", "modulename": "icepool", "qualname": "BaseDie.ndim", "type": "function", "doc": "<p>Returns the number of dimensions if this is a <code>VectorDie</code>.</p>\n\n<p>Otherwise, returns <code>'scalar'</code> for a <code>ScalarDie</code> and <code>'empty'</code> for an <code>EmptyDie</code>.</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.BaseDie.markdown": {"fullname": "icepool.BaseDie.markdown", "modulename": "icepool", "qualname": "BaseDie.markdown", "type": "function", "doc": "<p>Formats the die as a Markdown string. </p>\n\n<p>This will have the denominator and a table of outcomes and their probabilities.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>include_weights:</strong>  Iff <code>True</code>, the table will have a column for weights.</li>\n</ul>\n", "signature": "(self, include_weights=True)", "funcdef": "def"}, "icepool.BaseDie.outcomes": {"fullname": "icepool.BaseDie.outcomes", "modulename": "icepool", "qualname": "BaseDie.outcomes", "type": "function", "doc": "<p>Returns an iterable into the sorted outcomes of the die.</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.BaseDie.num_outcomes": {"fullname": "icepool.BaseDie.num_outcomes", "modulename": "icepool", "qualname": "BaseDie.num_outcomes", "type": "function", "doc": "<p>Returns the number of outcomes (including those with zero weight).</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.BaseDie.is_empty": {"fullname": "icepool.BaseDie.is_empty", "modulename": "icepool", "qualname": "BaseDie.is_empty", "type": "function", "doc": "<p>Returns <code>True</code> if this die has no outcomes.</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.BaseDie.weights": {"fullname": "icepool.BaseDie.weights", "modulename": "icepool", "qualname": "BaseDie.weights", "type": "function", "doc": "<p>Returns an iterable into the weights of the die in outcome order.</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.BaseDie.has_zero_weights": {"fullname": "icepool.BaseDie.has_zero_weights", "modulename": "icepool", "qualname": "BaseDie.has_zero_weights", "type": "function", "doc": "<p>Returns <code>True</code> iff <code>self</code> contains at least one outcome with zero weight.</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.BaseDie.items": {"fullname": "icepool.BaseDie.items", "modulename": "icepool", "qualname": "BaseDie.items", "type": "function", "doc": "<p>Returns all outcome, weight pairs.</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.BaseDie.denominator": {"fullname": "icepool.BaseDie.denominator", "modulename": "icepool", "qualname": "BaseDie.denominator", "type": "function", "doc": "<p>The total weight of all outcomes.</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.BaseDie.total_weight": {"fullname": "icepool.BaseDie.total_weight", "modulename": "icepool", "qualname": "BaseDie.total_weight", "type": "function", "doc": "<p>The total weight of all outcomes.</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.BaseDie.pmf": {"fullname": "icepool.BaseDie.pmf", "modulename": "icepool", "qualname": "BaseDie.pmf", "type": "function", "doc": "<p>Probability mass function. The probability of rolling each outcome in order. </p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>percent:</strong>  If set, the results will be in percent (i.e. total of 100.0).\nOtherwise, the total will be 1.0.</li>\n</ul>\n", "signature": "(self, percent=False)", "funcdef": "def"}, "icepool.BaseDie.cweights": {"fullname": "icepool.BaseDie.cweights", "modulename": "icepool", "qualname": "BaseDie.cweights", "type": "function", "doc": "<p>Cumulative weights. The weight &lt;= each outcome in order.</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.BaseDie.sweights": {"fullname": "icepool.BaseDie.sweights", "modulename": "icepool", "qualname": "BaseDie.sweights", "type": "function", "doc": "<p>Survival weights. The weight &gt;= each outcome in order.</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.BaseDie.cdf": {"fullname": "icepool.BaseDie.cdf", "modulename": "icepool", "qualname": "BaseDie.cdf", "type": "function", "doc": "<p>Cumulative distribution function. The chance of rolling &lt;= each outcome in order. </p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>percent:</strong>  If set, the results will be in percent (i.e. total of 100.0).\nOtherwise, the total will be 1.0.</li>\n</ul>\n", "signature": "(self, percent=False)", "funcdef": "def"}, "icepool.BaseDie.sf": {"fullname": "icepool.BaseDie.sf", "modulename": "icepool", "qualname": "BaseDie.sf", "type": "function", "doc": "<p>Survival function. The chance of rolling &gt;= each outcome in order. </p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>percent:</strong>  If set, the results will be in percent (i.e. total of 100.0).\nOtherwise, the total will be 1.0.</li>\n</ul>\n", "signature": "(self, percent=False)", "funcdef": "def"}, "icepool.BaseDie.weight_eq": {"fullname": "icepool.BaseDie.weight_eq", "modulename": "icepool", "qualname": "BaseDie.weight_eq", "type": "function", "doc": "<p>Returns the weight of a single outcome, or 0 if not present.</p>\n", "signature": "(self, outcome)", "funcdef": "def"}, "icepool.BaseDie.weight_ne": {"fullname": "icepool.BaseDie.weight_ne", "modulename": "icepool", "qualname": "BaseDie.weight_ne", "type": "function", "doc": "<p>Returns the weight != a single outcome.</p>\n", "signature": "(self, outcome)", "funcdef": "def"}, "icepool.BaseDie.weight_le": {"fullname": "icepool.BaseDie.weight_le", "modulename": "icepool", "qualname": "BaseDie.weight_le", "type": "function", "doc": "<p>Returns the weight &lt;= a single outcome.</p>\n", "signature": "(self, outcome)", "funcdef": "def"}, "icepool.BaseDie.weight_lt": {"fullname": "icepool.BaseDie.weight_lt", "modulename": "icepool", "qualname": "BaseDie.weight_lt", "type": "function", "doc": "<p>Returns the weight &lt; a single outcome.</p>\n", "signature": "(self, outcome)", "funcdef": "def"}, "icepool.BaseDie.weight_ge": {"fullname": "icepool.BaseDie.weight_ge", "modulename": "icepool", "qualname": "BaseDie.weight_ge", "type": "function", "doc": "<p>Returns the weight &gt;= a single outcome.</p>\n", "signature": "(self, outcome)", "funcdef": "def"}, "icepool.BaseDie.weight_gt": {"fullname": "icepool.BaseDie.weight_gt", "modulename": "icepool", "qualname": "BaseDie.weight_gt", "type": "function", "doc": "<p>Returns the weight &gt; a single outcome.</p>\n", "signature": "(self, outcome)", "funcdef": "def"}, "icepool.BaseDie.probability": {"fullname": "icepool.BaseDie.probability", "modulename": "icepool", "qualname": "BaseDie.probability", "type": "function", "doc": "<p>Returns the probability of a single outcome.</p>\n", "signature": "(self, outcome)", "funcdef": "def"}, "icepool.BaseDie.mode": {"fullname": "icepool.BaseDie.mode", "modulename": "icepool", "qualname": "BaseDie.mode", "type": "function", "doc": "<p>Returns a tuple containing the most common outcome(s) of the die.</p>\n\n<p>These are sorted from lowest to highest.</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.BaseDie.modal_weight": {"fullname": "icepool.BaseDie.modal_weight", "modulename": "icepool", "qualname": "BaseDie.modal_weight", "type": "function", "doc": "<p>The highest weight of any single outcome.</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.BaseDie.ks_stat": {"fullname": "icepool.BaseDie.ks_stat", "modulename": "icepool", "qualname": "BaseDie.ks_stat", "type": "function", "doc": "<p>Kolmogorov\u2013Smirnov stat. The maximum absolute difference between CDFs.</p>\n", "signature": "(self, other)", "funcdef": "def"}, "icepool.BaseDie.cvm_stat": {"fullname": "icepool.BaseDie.cvm_stat", "modulename": "icepool", "qualname": "BaseDie.cvm_stat", "type": "function", "doc": "<p>Cram\u00e9r-von Mises stat. The sum-of-squares difference between CDFs.</p>\n", "signature": "(self, other)", "funcdef": "def"}, "icepool.BaseDie.reduce": {"fullname": "icepool.BaseDie.reduce", "modulename": "icepool", "qualname": "BaseDie.reduce", "type": "function", "doc": "<p>Divides all weights by their greatest common denominator.</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.BaseDie.scale_weights": {"fullname": "icepool.BaseDie.scale_weights", "modulename": "icepool", "qualname": "BaseDie.scale_weights", "type": "function", "doc": "<p>Multiplies all weights by a constant.</p>\n", "signature": "(self, scale)", "funcdef": "def"}, "icepool.BaseDie.min_outcome": {"fullname": "icepool.BaseDie.min_outcome", "modulename": "icepool", "qualname": "BaseDie.min_outcome", "type": "function", "doc": "<p>Returns the minimum possible outcome among the dice.</p>\n", "signature": "(*dice)", "funcdef": "def"}, "icepool.BaseDie.max_outcome": {"fullname": "icepool.BaseDie.max_outcome", "modulename": "icepool", "qualname": "BaseDie.max_outcome", "type": "function", "doc": "<p>Returns the maximum possible outcome among the dice.</p>\n", "signature": "(*dice)", "funcdef": "def"}, "icepool.BaseDie.nearest_le": {"fullname": "icepool.BaseDie.nearest_le", "modulename": "icepool", "qualname": "BaseDie.nearest_le", "type": "function", "doc": "<p>Returns the nearest outcome that is &lt;= the argument. </p>\n\n<p>Returns <code>None</code> if there is no such outcome.</p>\n", "signature": "(self, outcome)", "funcdef": "def"}, "icepool.BaseDie.nearest_ge": {"fullname": "icepool.BaseDie.nearest_ge", "modulename": "icepool", "qualname": "BaseDie.nearest_ge", "type": "function", "doc": "<p>Returns the nearest outcome that is &gt;= the argument. </p>\n\n<p>Returns <code>None</code> if there is no such outcome.</p>\n", "signature": "(self, outcome)", "funcdef": "def"}, "icepool.BaseDie.reroll": {"fullname": "icepool.BaseDie.reroll", "modulename": "icepool", "qualname": "BaseDie.reroll", "type": "function", "doc": "<p>Rerolls the given outcomes.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>outcomes:</strong>  Selects which outcomes to reroll. Options:\n<ul>\n<li>A callable that takes an outcome and returns <code>True</code> if it should be rerolled.\nThe callable will be supplied with one argument per <code>ndim</code> if this is a <code>VectorDie</code>.</li>\n<li>A set of outcomes to reroll.</li>\n<li>If not provided, the min outcome will be rerolled.</li>\n</ul></li>\n<li><strong>max_depth:</strong>  The maximum number of times to reroll.\nIf omitted, rerolls an unlimited number of times.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A die representing the reroll.\n  If the reroll would never terminate, the result has no outcomes.</p>\n</blockquote>\n", "signature": "(self, outcomes=None, *, max_depth=None)", "funcdef": "def"}, "icepool.BaseDie.reroll_until": {"fullname": "icepool.BaseDie.reroll_until", "modulename": "icepool", "qualname": "BaseDie.reroll_until", "type": "function", "doc": "<p>Rerolls until getting one of the given outcomes.</p>\n\n<p>Essentially the complement of <code>reroll()</code>.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>outcomes:</strong>  Selects which outcomes to reroll until. Options:\n<ul>\n<li>A callable that takes an outcome and returns <code>True</code> if it should be accepted.</li>\n<li>A set of outcomes to reroll until.</li>\n</ul></li>\n<li><strong>max_depth:</strong>  The maximum number of times to reroll.\nIf omitted, rerolls an unlimited number of times.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A die representing the reroll.\n  If the reroll would never terminate, the result has no outcomes.</p>\n</blockquote>\n", "signature": "(self, outcomes, *, max_depth=None)", "funcdef": "def"}, "icepool.BaseDie.truncate": {"fullname": "icepool.BaseDie.truncate", "modulename": "icepool", "qualname": "BaseDie.truncate", "type": "function", "doc": "<p>Truncates the outcomes of this die to the given range.</p>\n\n<p>The endpoints are included in the result if applicable.\nIf one of the arguments is not provided, that side will not be truncated.</p>\n\n<p>This effectively rerolls outcomes outside the given range.\nIf instead you want to replace those outcomes with the nearest endpoint, use <code>clip()</code>.</p>\n\n<p>Not to be confused with <code>trunc(die)</code>, which performs integer truncation on each outcome.</p>\n", "signature": "(self, min_outcome=None, max_outcome=None)", "funcdef": "def"}, "icepool.BaseDie.clip": {"fullname": "icepool.BaseDie.clip", "modulename": "icepool", "qualname": "BaseDie.clip", "type": "function", "doc": "<p>Clips the outcomes of this die to the given values.</p>\n\n<p>The endpoints are included in the result if applicable.\nIf one of the arguments is not provided, that side will not be clipped.</p>\n\n<p>This is not the same as rerolling outcomes beyond this range;\nthe outcome is simply adjusted to fit within the range.\nThis will typically cause some weight to bunch up at the endpoint.\nIf you want to reroll outcomes beyond this range, use <code>truncate()</code>.</p>\n", "signature": "(self, min_outcome=None, max_outcome=None)", "funcdef": "def"}, "icepool.BaseDie.cond": {"fullname": "icepool.BaseDie.cond", "modulename": "icepool", "qualname": "BaseDie.cond", "type": "function", "doc": "<p>Conditional operator. Also known as the ternary operator.</p>\n\n<p>This replaces truthy outcomes with the first argument and falsy outcomes with the second argument.</p>\n", "signature": "(self, outcome_if_true, outcome_if_false, /)", "funcdef": "def"}, "icepool.BaseDie.set_outcomes": {"fullname": "icepool.BaseDie.set_outcomes", "modulename": "icepool", "qualname": "BaseDie.set_outcomes", "type": "function", "doc": "<p>Sets the set of outcomes to the argument.</p>\n\n<p>This may remove outcomes (if they are not present in the argument)\nand/or add zero-weight outcomes (if they are not present in this die).</p>\n", "signature": "(self, outcomes)", "funcdef": "def"}, "icepool.BaseDie.trim": {"fullname": "icepool.BaseDie.trim", "modulename": "icepool", "qualname": "BaseDie.trim", "type": "function", "doc": "<p>Removes all zero-weight outcomes.</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.BaseDie.sub": {"fullname": "icepool.BaseDie.sub", "modulename": "icepool", "qualname": "BaseDie.sub", "type": "function", "doc": "<p>Changes outcomes of the die to other outcomes.</p>\n\n<p>You can think of this as <code>sub</code>stituting outcomes of this die for other outcomes or dice.\nOr, as executing a <code>sub</code>routine based on the roll of this die.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>repl:</strong>  One of the following:\n<ul>\n<li>A map from old outcomes to new outcomes.\nUnmapped old outcomes stay the same.</li>\n<li>A callable mapping old outcomes to new outcomes.\nThe callable will be supplied with one argument per <code>ndim</code> if this is a <code>VectorDie</code>.\nThe new outcomes may be dice rather than just single outcomes.\nThe special value <code>icepool.Reroll</code> will reroll that old outcome.</li>\n</ul></li>\n<li><strong>max_depth:</strong>  <code>sub()</code> will be repeated with the same argument on the result this many times.\nIf set to <code>None</code>, this will repeat until a fixed point is reached.</li>\n<li><strong>ndim:</strong>  Sets the <code>ndim</code> of the result. If not provided, <code>ndim</code> will be determined automatically.</li>\n<li><strong>denominator_method:</strong>  As <code>icepool.Die()</code>.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The relabeled die.</p>\n</blockquote>\n", "signature": "(self, repl, /, *, max_depth=1, ndim=None, denominator_method='lcm')", "funcdef": "def"}, "icepool.BaseDie.explode": {"fullname": "icepool.BaseDie.explode", "modulename": "icepool", "qualname": "BaseDie.explode", "type": "function", "doc": "<p>Causes outcomes to be rolled again and added to the total.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>outcomes:</strong>  Which outcomes to explode. Options:\n<ul>\n<li>An iterable containing outcomes to explode.</li>\n<li>A callable that takes an outcome and returns <code>True</code> if it should be exploded.\nThe callable will be supplied with one argument per <code>ndim</code> if this is a <code>VectorDie</code>.</li>\n<li>If not supplied, the max outcome will explode.</li>\n</ul></li>\n<li><strong>max_depth:</strong>  The maximum number of additional dice to roll.\nIf not supplied, a default value will be used.</li>\n</ul>\n", "signature": "(self, outcomes=None, *, max_depth=None)", "funcdef": "def"}, "icepool.BaseDie.lowest": {"fullname": "icepool.BaseDie.lowest", "modulename": "icepool", "qualname": "BaseDie.lowest", "type": "function", "doc": "<p>Roll all the dice and take the lowest.</p>\n\n<p>The maximum outcome is equal to the highest maximum outcome among all input dice.</p>\n", "signature": "(*dice)", "funcdef": "def"}, "icepool.BaseDie.highest": {"fullname": "icepool.BaseDie.highest", "modulename": "icepool", "qualname": "BaseDie.highest", "type": "function", "doc": "<p>Roll all the dice and take the highest.</p>\n\n<p>The minimum outcome is equal to the highest minimum outcome among all input dice.</p>\n", "signature": "(*dice)", "funcdef": "def"}, "icepool.BaseDie.repeat_and_sum": {"fullname": "icepool.BaseDie.repeat_and_sum", "modulename": "icepool", "qualname": "BaseDie.repeat_and_sum", "type": "function", "doc": "<p>Roll this die <code>num_dice</code> times and sum the results. </p>\n\n<p>If <code>num_dice</code> is negative, roll the die <code>abs(num_dice)</code> times and negate the result.</p>\n", "signature": "(self, num_dice)", "funcdef": "def"}, "icepool.BaseDie.pool": {"fullname": "icepool.BaseDie.pool", "modulename": "icepool", "qualname": "BaseDie.pool", "type": "function", "doc": "<p>Creates a pool from this die, as <code>icepool.Pool()</code>.</p>\n", "signature": "(self, *args, **kwargs)", "funcdef": "def"}, "icepool.BaseDie.keep": {"fullname": "icepool.BaseDie.keep", "modulename": "icepool", "qualname": "BaseDie.keep", "type": "function", "doc": "<p>Roll this die several times, possibly truncating the maximum outcomes, and sum some or all of the sorted results.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>num_dice:</strong>  The number of dice to roll. All dice will have the same outcomes as <code>self</code>.</li>\n<li><strong>count_dice:</strong>  Only dice selected by this will be counted.\nSee <code>DicePool.count_dice()</code> for details.</li>\n<li><strong>truncate_min:</strong>  A sequence of one outcome per die.\nThat die will be truncated to that minimum outcome, with all lower outcomes being removed (i.e. rerolled).\nThis is not compatible with <code>truncate_max</code>.</li>\n<li><strong>truncate_max:</strong>  A sequence of one outcome per die.\nThat die will be truncated to that maximum outcome, with all higher outcomes being removed (i.e. rerolled).\nThis is not compatible with <code>truncate_min</code>.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A Die representing the probability distribution of the sum.</p>\n</blockquote>\n", "signature": "(\n    self,\n    num_dice=None,\n    count_dice=None,\n    *,\n    truncate_min=None,\n    truncate_max=None\n)", "funcdef": "def"}, "icepool.BaseDie.keep_highest": {"fullname": "icepool.BaseDie.keep_highest", "modulename": "icepool", "qualname": "BaseDie.keep_highest", "type": "function", "doc": "<p>Roll this die several times, possibly truncating the maximum outcomes, and sum the sorted results from the highest.</p>\n\n<p>Exactly one out of <code>num_dice</code>, <code>truncate_min</code>, and <code>truncate_max</code> should be provided.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>num_dice:</strong>  The number of dice to roll. All dice will have the same outcomes as <code>self</code>.</li>\n<li><strong>num_keep:</strong>  The number of dice to keep.</li>\n<li><strong>num_drop:</strong>  If provided, this many highest dice will be dropped before keeping.</li>\n<li><strong>truncate_min:</strong>  A sequence of one outcome per die.\nThat die will be truncated to that minimum outcome, with all lower outcomes being removed (i.e. rerolled).</li>\n<li><strong>truncate_max:</strong>  A sequence of one outcome per die.\nThat die will be truncated to that maximum outcome, with all higher outcomes being removed (i.e. rerolled).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A die representing the probability distribution of the sum.</p>\n</blockquote>\n", "signature": "(\n    self,\n    num_dice=None,\n    num_keep=1,\n    num_drop=0,\n    *,\n    truncate_min=None,\n    truncate_max=None\n)", "funcdef": "def"}, "icepool.BaseDie.keep_highest_single": {"fullname": "icepool.BaseDie.keep_highest_single", "modulename": "icepool", "qualname": "BaseDie.keep_highest_single", "type": "function", "doc": "<p>Faster algorithm for keeping just the single highest die.</p>\n", "signature": "(self, num_dice=None)", "funcdef": "def"}, "icepool.BaseDie.keep_lowest": {"fullname": "icepool.BaseDie.keep_lowest", "modulename": "icepool", "qualname": "BaseDie.keep_lowest", "type": "function", "doc": "<p>Roll this die several times, possibly capping the maximum outcomes, and sum the sorted results from the lowest.</p>\n\n<p>Exactly one out of <code>num_dice</code>, <code>truncate_min</code>, and <code>truncate_max</code> should be provided.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>num_dice:</strong>  The number of dice to roll. All dice will have the same outcomes as <code>self</code>.</li>\n<li><strong>num_keep:</strong>  The number of dice to keep.</li>\n<li><strong>num_drop:</strong>  If provided, this many lowest dice will be dropped before keeping.</li>\n<li><strong>truncate_min:</strong>  A sequence of one outcome per die.\nThat die will be truncated to that minimum outcome, with all lower outcomes being removed (i.e. rerolled).</li>\n<li><strong>truncate_max:</strong>  A sequence of one outcome per die.\nThat die will be truncated to that maximum outcome, with all higher outcomes being removed (i.e. rerolled).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A die representing the probability distribution of the sum.</p>\n</blockquote>\n", "signature": "(\n    self,\n    num_dice=None,\n    num_keep=1,\n    num_drop=0,\n    *,\n    truncate_min=None,\n    truncate_max=None\n)", "funcdef": "def"}, "icepool.BaseDie.keep_lowest_single": {"fullname": "icepool.BaseDie.keep_lowest_single", "modulename": "icepool", "qualname": "BaseDie.keep_lowest_single", "type": "function", "doc": "<p>Faster algorithm for keeping just the single lowest die.</p>\n", "signature": "(self, num_dice=None)", "funcdef": "def"}, "icepool.BaseDie.abs": {"fullname": "icepool.BaseDie.abs", "modulename": "icepool", "qualname": "BaseDie.abs", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.BaseDie.zero": {"fullname": "icepool.BaseDie.zero", "modulename": "icepool", "qualname": "BaseDie.zero", "type": "function", "doc": "<p>Zeros all outcomes of this die. </p>\n\n<p>This is done by calling the constructor for each outcome's type with no arguments.</p>\n\n<p>The result will have a single outcome with weight 1.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><code>ValueError</code> if the zeros did not resolve to a single outcome.</li>\n</ul>\n", "signature": "(self)", "funcdef": "def"}, "icepool.BaseDie.zero_outcome": {"fullname": "icepool.BaseDie.zero_outcome", "modulename": "icepool", "qualname": "BaseDie.zero_outcome", "type": "function", "doc": "<p>Returns a zero-outcome for this die, e.g. <code>0</code> for a die whose outcomes are <code>int</code>s.</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.BaseDie.bool": {"fullname": "icepool.BaseDie.bool", "modulename": "icepool", "qualname": "BaseDie.bool", "type": "function", "doc": "<p>Takes <code>bool()</code> of all outcomes.</p>\n\n<p>Note the die as a whole is not considered to have a truth value.</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.BaseDie.sign": {"fullname": "icepool.BaseDie.sign", "modulename": "icepool", "qualname": "BaseDie.sign", "type": "function", "doc": "<p>Outcomes become 1 if greater than <code>zero()</code>, -1 if less than <code>zero()</code>, and 0 otherwise.</p>\n\n<p>Note that for <code>float</code>s, +0.0, -0.0, and nan all become 0.</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.BaseDie.cmp": {"fullname": "icepool.BaseDie.cmp", "modulename": "icepool", "qualname": "BaseDie.cmp", "type": "function", "doc": "<p>Returns a die with possible outcomes 1, -1, and 0.</p>\n\n<p>The weights are equal to the positive outcome of <code>self &gt; other</code>, <code>self &lt; other</code>, and the remainder respectively.</p>\n", "signature": "(self, other)", "funcdef": "def"}, "icepool.BaseDie.sample": {"fullname": "icepool.BaseDie.sample", "modulename": "icepool", "qualname": "BaseDie.sample", "type": "function", "doc": "<p>Returns a random roll of this die. </p>\n\n<p>Do not use for security purposes.</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.BaseDie.key_tuple": {"fullname": "icepool.BaseDie.key_tuple", "modulename": "icepool", "qualname": "BaseDie.key_tuple", "type": "function", "doc": "<p>Returns a tuple that uniquely (as <code>equals()</code>) identifies this die.</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.BaseDie.hash": {"fullname": "icepool.BaseDie.hash", "modulename": "icepool", "qualname": "BaseDie.hash", "type": "function", "doc": "<p>A true __hash__ doesn't work because we used the __eq__ operator \nfor determining the chance two dice will roll equal to each other.</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.BaseDie.equals": {"fullname": "icepool.BaseDie.equals", "modulename": "icepool", "qualname": "BaseDie.equals", "type": "function", "doc": "<p>Returns <code>True</code> iff both dice have the same ndim, outcomes, and weights.</p>\n\n<p>Also, if one die has a zero-weight outcome and the other die does not contain that outcome,\nthey are treated as unequal by this function.</p>\n\n<p>For the chance of two dice rolling the same outcome, use the <code>==</code> operator.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>reduce:</strong>  If <code>True</code>, the dice will be reduced before comparing.\nOtherwise, e.g. a 2:2 coin is not <code>equals()</code> to a 1:1 coin.</li>\n</ul>\n", "signature": "(self, other, *, reduce=False)", "funcdef": "def"}, "icepool.EmptyDie": {"fullname": "icepool.EmptyDie", "modulename": "icepool", "qualname": "EmptyDie", "type": "class", "doc": "<p>Die with no outcomes.</p>\n", "bases": "icepool.die.base.BaseDie"}, "icepool.EmptyDie.__init__": {"fullname": "icepool.EmptyDie.__init__", "modulename": "icepool", "qualname": "EmptyDie.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.EmptyDie.ndim": {"fullname": "icepool.EmptyDie.ndim", "modulename": "icepool", "qualname": "EmptyDie.ndim", "type": "function", "doc": "<p>Returns the number of dimensions if this is a <code>VectorDie</code>.</p>\n\n<p>Otherwise, returns <code>'scalar'</code> for a <code>ScalarDie</code> and <code>'empty'</code> for an <code>EmptyDie</code>.</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.EmptyDie.markdown": {"fullname": "icepool.EmptyDie.markdown", "modulename": "icepool", "qualname": "EmptyDie.markdown", "type": "function", "doc": "<p>Formats the die as a Markdown string. </p>\n\n<p>This will have the denominator and a table of outcomes and their probabilities.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>include_weights:</strong>  Iff <code>True</code>, the table will have a column for weights.</li>\n</ul>\n", "signature": "(self, include_weights=True)", "funcdef": "def"}, "icepool.ScalarDie": {"fullname": "icepool.ScalarDie", "modulename": "icepool", "qualname": "ScalarDie", "type": "class", "doc": "<p>Univariate die.</p>\n\n<p>Outcomes are scalars and operations are performed directly on the outcomes.</p>\n", "bases": "icepool.die.base.BaseDie"}, "icepool.ScalarDie.__init__": {"fullname": "icepool.ScalarDie.__init__", "modulename": "icepool", "qualname": "ScalarDie.__init__", "type": "function", "doc": "<p>Constructor.</p>\n\n<p>Dice should not be constructed directly;\ninstead, use one of the methods defined in <code>icepool.die.func</code> \n(which are imported into the top-level <code>icepool</code> module).</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>data:</strong>  A <code>Counts</code> mapping outcomes to weights.</li>\n</ul>\n", "signature": "(self, data)", "funcdef": "def"}, "icepool.ScalarDie.ndim": {"fullname": "icepool.ScalarDie.ndim", "modulename": "icepool", "qualname": "ScalarDie.ndim", "type": "function", "doc": "<p>Returns the number of dimensions if this is a <code>VectorDie</code>.</p>\n\n<p>Otherwise, returns <code>'scalar'</code> for a <code>ScalarDie</code> and <code>'empty'</code> for an <code>EmptyDie</code>.</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.ScalarDie.d": {"fullname": "icepool.ScalarDie.d", "modulename": "icepool", "qualname": "ScalarDie.d", "type": "function", "doc": "<p>Roll the left die, then roll the right die that many times and sum the outcomes. </p>\n\n<p>If an <code>int</code> is provided for the right side, it becomes a standard die with that many faces.\nOtherwise it is cast to a die.</p>\n", "signature": "(self, other, *, ndim=None)", "funcdef": "def"}, "icepool.ScalarDie.if_else": {"fullname": "icepool.ScalarDie.if_else", "modulename": "icepool", "qualname": "ScalarDie.if_else", "type": "function", "doc": "<p>If the result of <code>self</code> has a true value, roll <code>true_die</code>, else roll <code>false_die</code>.</p>\n\n<p>Also known as the ternary conditional operator.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>true_die:</strong>  The die to roll if <code>self.bool()</code> rolls <code>True</code>.</li>\n<li><strong>false_die:</strong>  The die to roll if <code>self.bool()</code> rolls <code>False</code>.</li>\n<li><strong>denominator_method:</strong>  As <code>icepool.Die()</code>.</li>\n</ul>\n", "signature": "(self, true_die, false_die, *, ndim=None, denominator_method='lcm')", "funcdef": "def"}, "icepool.ScalarDie.median_left": {"fullname": "icepool.ScalarDie.median_left", "modulename": "icepool", "qualname": "ScalarDie.median_left", "type": "function", "doc": "<p>Returns the median.</p>\n\n<p>If the median lies between two outcomes, returns the lower of the two.</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.ScalarDie.median_right": {"fullname": "icepool.ScalarDie.median_right", "modulename": "icepool", "qualname": "ScalarDie.median_right", "type": "function", "doc": "<p>Returns the median.</p>\n\n<p>If the median lies between two outcomes, returns the higher of the two.</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.ScalarDie.median": {"fullname": "icepool.ScalarDie.median", "modulename": "icepool", "qualname": "ScalarDie.median", "type": "function", "doc": "<p>Returns the median.</p>\n\n<p>If the median lies between two outcomes, returns the mean of the two.\nThis will fail if the outcomes do not support division;\nin this case, use <code>median_left</code> or <code>median_right</code> instead.</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.ScalarDie.ppf_left": {"fullname": "icepool.ScalarDie.ppf_left", "modulename": "icepool", "qualname": "ScalarDie.ppf_left", "type": "function", "doc": "<p>Returns a quantile, <code>n / d</code> of the way through the cdf.</p>\n\n<p>If the result lies between two outcomes, returns the lower of the two.</p>\n", "signature": "(self, n, d=100)", "funcdef": "def"}, "icepool.ScalarDie.ppf_right": {"fullname": "icepool.ScalarDie.ppf_right", "modulename": "icepool", "qualname": "ScalarDie.ppf_right", "type": "function", "doc": "<p>Returns a quantile, <code>n / d</code> of the way through the cdf.</p>\n\n<p>If the result lies between two outcomes, returns the higher of the two.</p>\n", "signature": "(self, n, d=100)", "funcdef": "def"}, "icepool.ScalarDie.ppf": {"fullname": "icepool.ScalarDie.ppf", "modulename": "icepool", "qualname": "ScalarDie.ppf", "type": "function", "doc": "<p>Returns a quantile, <code>n / d</code> of the way through the cdf.</p>\n\n<p>If the result lies between two outcomes, returns the mean of the two.\nThis will fail if the outcomes do not support division;\nin this case, use <code>ppf_left</code> or <code>ppf_right</code> instead.</p>\n", "signature": "(self, n, d=100)", "funcdef": "def"}, "icepool.ScalarDie.mean": {"fullname": "icepool.ScalarDie.mean", "modulename": "icepool", "qualname": "ScalarDie.mean", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.ScalarDie.variance": {"fullname": "icepool.ScalarDie.variance", "modulename": "icepool", "qualname": "ScalarDie.variance", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.ScalarDie.standard_deviation": {"fullname": "icepool.ScalarDie.standard_deviation", "modulename": "icepool", "qualname": "ScalarDie.standard_deviation", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.ScalarDie.sd": {"fullname": "icepool.ScalarDie.sd", "modulename": "icepool", "qualname": "ScalarDie.sd", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.ScalarDie.standardized_moment": {"fullname": "icepool.ScalarDie.standardized_moment", "modulename": "icepool", "qualname": "ScalarDie.standardized_moment", "type": "function", "doc": "<p></p>\n", "signature": "(self, k)", "funcdef": "def"}, "icepool.ScalarDie.skewness": {"fullname": "icepool.ScalarDie.skewness", "modulename": "icepool", "qualname": "ScalarDie.skewness", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.ScalarDie.excess_kurtosis": {"fullname": "icepool.ScalarDie.excess_kurtosis", "modulename": "icepool", "qualname": "ScalarDie.excess_kurtosis", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.ScalarDie.cartesian_product": {"fullname": "icepool.ScalarDie.cartesian_product", "modulename": "icepool", "qualname": "ScalarDie.cartesian_product", "type": "function", "doc": "<p>Produces a <code>VectorDie</code> from the Cartesian product of the input <code>ScalarDie</code>.</p>\n\n<p>This is usually not recommended, as it takes space and time exponential in the number of dice,\nwhile not actually producing any additional information.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>*dice:</strong>  Multiple dice or a single iterable of dice.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><code>TypeError</code> if any of the input dice are already <code>VectorDie</code>.</li>\n</ul>\n", "signature": "(*dice)", "funcdef": "def"}, "icepool.ScalarDie.markdown": {"fullname": "icepool.ScalarDie.markdown", "modulename": "icepool", "qualname": "ScalarDie.markdown", "type": "function", "doc": "<p>Formats the die as a Markdown string. </p>\n\n<p>This will have the denominator and a table of outcomes and their probabilities.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>include_weights:</strong>  Iff <code>True</code>, the table will have a column for weights.</li>\n</ul>\n", "signature": "(self, include_weights=True)", "funcdef": "def"}, "icepool.VectorDie": {"fullname": "icepool.VectorDie", "modulename": "icepool", "qualname": "VectorDie", "type": "class", "doc": "<p>Multivariate die.</p>\n\n<p>Outcomes are tuples. Most methods and operators are performed elementwise.\nMethods that depend on a flat outcome order use tuple order.</p>\n\n<p>Statistical methods other than <code>mode()</code> take in an argument <code>i</code> specifying which dimension to take the statistic over.</p>\n", "bases": "icepool.die.base.BaseDie"}, "icepool.VectorDie.__init__": {"fullname": "icepool.VectorDie.__init__", "modulename": "icepool", "qualname": "VectorDie.__init__", "type": "function", "doc": "<p>Constructor.</p>\n\n<p>Dice should not be constructed directly;\ninstead, use one of the methods defined in <code>icepool.die.func</code> \n(which are imported into the top-level <code>icepool</code> module).</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>data:</strong>  A <code>Counts</code> mapping outcomes to weights.</li>\n<li><strong>ndim:</strong>  The number of dimensions of this die.</li>\n</ul>\n", "signature": "(self, data, ndim)", "funcdef": "def"}, "icepool.VectorDie.ndim": {"fullname": "icepool.VectorDie.ndim", "modulename": "icepool", "qualname": "VectorDie.ndim", "type": "function", "doc": "<p>Returns the number of dimensions if this is a <code>VectorDie</code>.</p>\n\n<p>Otherwise, returns <code>'scalar'</code> for a <code>ScalarDie</code> and <code>'empty'</code> for an <code>EmptyDie</code>.</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.VectorDie.marginal": {"fullname": "icepool.VectorDie.marginal", "modulename": "icepool", "qualname": "VectorDie.marginal", "type": "function", "doc": "<p>Returns the marginal distribution over selected dimensions of the die.</p>\n", "signature": "(self, select)", "funcdef": "def"}, "icepool.VectorDie.dim": {"fullname": "icepool.VectorDie.dim", "modulename": "icepool", "qualname": "VectorDie.dim", "type": "variable", "doc": "<p>Subscript this to produce a marginal distribution.</p>\n\n<p>For example, <code>die.dim[0]</code> will extract the 0th dimension.</p>\n"}, "icepool.VectorDie.all": {"fullname": "icepool.VectorDie.all", "modulename": "icepool", "qualname": "VectorDie.all", "type": "function", "doc": "<p>Returns a die representing whether all dimensions are true.</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.VectorDie.any": {"fullname": "icepool.VectorDie.any", "modulename": "icepool", "qualname": "VectorDie.any", "type": "function", "doc": "<p>Returns a die representing whether any dimension is true.</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.VectorDie.median_left": {"fullname": "icepool.VectorDie.median_left", "modulename": "icepool", "qualname": "VectorDie.median_left", "type": "function", "doc": "<p></p>\n", "signature": "(self, i)", "funcdef": "def"}, "icepool.VectorDie.median_right": {"fullname": "icepool.VectorDie.median_right", "modulename": "icepool", "qualname": "VectorDie.median_right", "type": "function", "doc": "<p></p>\n", "signature": "(self, i)", "funcdef": "def"}, "icepool.VectorDie.median": {"fullname": "icepool.VectorDie.median", "modulename": "icepool", "qualname": "VectorDie.median", "type": "function", "doc": "<p></p>\n", "signature": "(self, i)", "funcdef": "def"}, "icepool.VectorDie.ppf_left": {"fullname": "icepool.VectorDie.ppf_left", "modulename": "icepool", "qualname": "VectorDie.ppf_left", "type": "function", "doc": "<p></p>\n", "signature": "(self, i)", "funcdef": "def"}, "icepool.VectorDie.ppf_right": {"fullname": "icepool.VectorDie.ppf_right", "modulename": "icepool", "qualname": "VectorDie.ppf_right", "type": "function", "doc": "<p></p>\n", "signature": "(self, i)", "funcdef": "def"}, "icepool.VectorDie.ppf": {"fullname": "icepool.VectorDie.ppf", "modulename": "icepool", "qualname": "VectorDie.ppf", "type": "function", "doc": "<p></p>\n", "signature": "(self, i)", "funcdef": "def"}, "icepool.VectorDie.mean": {"fullname": "icepool.VectorDie.mean", "modulename": "icepool", "qualname": "VectorDie.mean", "type": "function", "doc": "<p></p>\n", "signature": "(self, i)", "funcdef": "def"}, "icepool.VectorDie.variance": {"fullname": "icepool.VectorDie.variance", "modulename": "icepool", "qualname": "VectorDie.variance", "type": "function", "doc": "<p></p>\n", "signature": "(self, i)", "funcdef": "def"}, "icepool.VectorDie.standard_deviation": {"fullname": "icepool.VectorDie.standard_deviation", "modulename": "icepool", "qualname": "VectorDie.standard_deviation", "type": "function", "doc": "<p></p>\n", "signature": "(self, i)", "funcdef": "def"}, "icepool.VectorDie.sd": {"fullname": "icepool.VectorDie.sd", "modulename": "icepool", "qualname": "VectorDie.sd", "type": "function", "doc": "<p></p>\n", "signature": "(self, i)", "funcdef": "def"}, "icepool.VectorDie.standardized_moment": {"fullname": "icepool.VectorDie.standardized_moment", "modulename": "icepool", "qualname": "VectorDie.standardized_moment", "type": "function", "doc": "<p></p>\n", "signature": "(self, i, k)", "funcdef": "def"}, "icepool.VectorDie.skewness": {"fullname": "icepool.VectorDie.skewness", "modulename": "icepool", "qualname": "VectorDie.skewness", "type": "function", "doc": "<p></p>\n", "signature": "(self, i)", "funcdef": "def"}, "icepool.VectorDie.excess_kurtosis": {"fullname": "icepool.VectorDie.excess_kurtosis", "modulename": "icepool", "qualname": "VectorDie.excess_kurtosis", "type": "function", "doc": "<p></p>\n", "signature": "(self, i)", "funcdef": "def"}, "icepool.VectorDie.covariance": {"fullname": "icepool.VectorDie.covariance", "modulename": "icepool", "qualname": "VectorDie.covariance", "type": "function", "doc": "<p></p>\n", "signature": "(self, i, j)", "funcdef": "def"}, "icepool.VectorDie.correlation": {"fullname": "icepool.VectorDie.correlation", "modulename": "icepool", "qualname": "VectorDie.correlation", "type": "function", "doc": "<p></p>\n", "signature": "(self, i, j)", "funcdef": "def"}, "icepool.VectorDie.markdown": {"fullname": "icepool.VectorDie.markdown", "modulename": "icepool", "qualname": "VectorDie.markdown", "type": "function", "doc": "<p>Formats the die as a Markdown table.</p>\n", "signature": "(self, include_weights=True)", "funcdef": "def"}, "icepool.from_cweights": {"fullname": "icepool.from_cweights", "modulename": "icepool", "qualname": "from_cweights", "type": "function", "doc": "<p>Constructs a die from cumulative weights.</p>\n", "signature": "(outcomes, cweights, *, ndim=None)", "funcdef": "def"}, "icepool.from_sweights": {"fullname": "icepool.from_sweights", "modulename": "icepool", "qualname": "from_sweights", "type": "function", "doc": "<p>Constructs a die from survival weights.</p>\n", "signature": "(outcomes, sweights, *, ndim=None)", "funcdef": "def"}, "icepool.from_rv": {"fullname": "icepool.from_rv", "modulename": "icepool", "qualname": "from_rv", "type": "function", "doc": "<p>Constructs a die from a rv object (as <code>scipy.stats</code>).</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>rv:</strong>  A rv object (as <code>scipy.stats</code>).</li>\n<li><strong>outcomes:</strong>  An iterable of <code>int</code>s or <code>float</code>s that will be the outcomes of the resulting die.\nIf the distribution is discrete, outcomes must be <code>int</code>s.</li>\n<li><strong>denominator:</strong>  The denominator of the resulting die will be set to this.</li>\n<li><strong>**kwargs:</strong>  These will be provided to <code>rv.cdf()</code>.</li>\n</ul>\n", "signature": "(rv, outcomes, denominator, **kwargs)", "funcdef": "def"}, "icepool.align": {"fullname": "icepool.align", "modulename": "icepool", "qualname": "align", "type": "function", "doc": "<p>Pads all the dice with zero weights so that all have the same set of outcomes.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>*dice:</strong>  Multiple dice or a single iterable of dice.</li>\n<li><strong>ndim:</strong>  The number of dimensions of the result.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A tuple of aligned dice.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><code>ValueError</code> if the dice are of mixed ndims.</li>\n</ul>\n", "signature": "(*dice, ndim=None)", "funcdef": "def"}, "icepool.align_range": {"fullname": "icepool.align_range", "modulename": "icepool", "qualname": "align_range", "type": "function", "doc": "<p>Pads all the dice with zero weights so that all have the same set of consecutive <code>int</code> outcomes.</p>\n", "signature": "(*dice)", "funcdef": "def"}, "icepool.lowest": {"fullname": "icepool.lowest", "modulename": "icepool", "qualname": "lowest", "type": "function", "doc": "<p>Roll all the dice and take the lowest.</p>\n\n<p>The maximum outcome is equal to the highest maximum outcome among all input dice.</p>\n", "signature": "(*dice)", "funcdef": "def"}, "icepool.highest": {"fullname": "icepool.highest", "modulename": "icepool", "qualname": "highest", "type": "function", "doc": "<p>Roll all the dice and take the highest.</p>\n\n<p>The minimum outcome is equal to the highest minimum outcome among all input dice.</p>\n", "signature": "(*dice)", "funcdef": "def"}, "icepool.max_outcome": {"fullname": "icepool.max_outcome", "modulename": "icepool", "qualname": "max_outcome", "type": "function", "doc": "<p>Returns the maximum possible outcome among the dice.</p>\n", "signature": "(*dice)", "funcdef": "def"}, "icepool.min_outcome": {"fullname": "icepool.min_outcome", "modulename": "icepool", "qualname": "min_outcome", "type": "function", "doc": "<p>Returns the minimum possible outcome among the dice.</p>\n", "signature": "(*dice)", "funcdef": "def"}, "icepool.apply": {"fullname": "icepool.apply", "modulename": "icepool", "qualname": "apply", "type": "function", "doc": "<p>Applies <code>func(outcome_of_die_0, outcome_of_die_1, ...)</code> for all possible outcomes of the dice.</p>\n\n<p>This is flexible but not very efficient for large numbers of dice.\nIn particular, for pools use <code>icepool.Pool</code> and <code>icepool.EvalPool</code> instead if possible.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>func:</strong>  A function that takes one argument per input die and returns an argument to <code>Die()</code>.</li>\n<li><strong>ndim:</strong>  If supplied, the result will have this many dimensions.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A die constructed from the outputs of <code>func</code> and the product of the weights of the dice.</p>\n</blockquote>\n", "signature": "(func, *dice, ndim=None)", "funcdef": "def"}, "icepool.dice_with_common_ndim": {"fullname": "icepool.dice_with_common_ndim", "modulename": "icepool", "qualname": "dice_with_common_ndim", "type": "function", "doc": "<p>Converts the arguments to dice with a common <code>ndim</code>.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>*args:</strong>  Args to be converted to dice.</li>\n<li><strong>ndim:</strong>  The required <code>ndim</code> of the results.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>dice, ndim: A tuple containing one die per arg, and the common <code>ndim</code>,</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><code>ValueError</code> if the arguments include conflicting <code>ndim</code>s.</li>\n</ul>\n", "signature": "(*args, ndim=None)", "funcdef": "def"}, "icepool.Reroll": {"fullname": "icepool.Reroll", "modulename": "icepool", "qualname": "Reroll", "type": "variable", "doc": "<p></p>\n", "default_value": " = <SpecialValue.Reroll: 'Reroll'>"}, "icepool.BasePool": {"fullname": "icepool.BasePool", "modulename": "icepool", "qualname": "BasePool", "type": "class", "doc": "<p>Abstract base class for dice pools.</p>\n\n<p>This provides the methods needed to run the dice pool algorithm.</p>\n\n<p>There are two subclasses:</p>\n\n<ul>\n<li><code>DicePool</code>, which represents a pool of dice with random results.</li>\n<li><code>PoolRoll</code>, which represents a single, fixed roll of a pool.\n<code>PoolRoll</code> is only needed internally, as external dicts and sequences \nwill be implicitly cast to <code>PoolRoll</code> in <code>EvalPool.eval()</code>.</li>\n</ul>\n", "bases": "abc.ABC"}, "icepool.BasePool.outcomes": {"fullname": "icepool.BasePool.outcomes", "modulename": "icepool", "qualname": "BasePool.outcomes", "type": "function", "doc": "<p>The outcomes of the fundamental die (including those with zero weight).</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.BasePool.eval": {"fullname": "icepool.BasePool.eval", "modulename": "icepool", "qualname": "BasePool.eval", "type": "function", "doc": "<p>Evaluates this pool using the given <code>EvalPool</code> or function.</p>\n\n<p>Note that each <code>EvalPool</code> instance carries its own cache;\nif you plan to use an evaluation multiple times,\nyou may want to explicitly create an <code>EvalPool</code> instance\nrather than passing a function to this method directly.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>func:</strong>  This can be an <code>EvalPool</code>, in which case it evaluates the pool directly.\nOr it can be a <code>EvalPool.next_state()</code>-like function,\ntaking in <code>state, outcome, *counts</code> and returning the next state.\nIn this case a temporary <code>WrapFuncEval</code> is constructed and used to evaluate this pool.</li>\n</ul>\n", "signature": "(self, eval_or_func, /)", "funcdef": "def"}, "icepool.BasePool.sum": {"fullname": "icepool.BasePool.sum", "modulename": "icepool", "qualname": "BasePool.sum", "type": "function", "doc": "<p>Convenience method to simply sum the dice in this pool.</p>\n\n<p>This uses <code>icepool.sum_pool</code>.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A die representing the sum.</p>\n</blockquote>\n", "signature": "(self)", "funcdef": "def"}, "icepool.Pool": {"fullname": "icepool.Pool", "modulename": "icepool", "qualname": "Pool", "type": "function", "doc": "<p>Factory function for <code>DicePool</code>.</p>\n\n<p>This should be used in conjunction with <code>EvalPool</code> to generate a result.</p>\n\n<p>You can use <code>die.pool(num_dice=None, ...)</code> for the same effect as this function.</p>\n\n<p>All instances are cached. The members of the actual instance may not match the arguments exactly;\ninstead, they may be optimized to values that give the same result as far as <code>EvalPool</code> is concerned.</p>\n\n<p>This is capitalized because it is the preferred way of getting a new instance,\nand so that you can use <code>from icepool import Pool</code> while leaving the name <code>pool</code> free.\nThe name of the actual class is <code>DicePool</code>.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>die:</strong>  The fundamental die of the pool.\nIf outcomes are not reachable by any die due to <code>truncate_min</code> or <code>truncate_max</code>,\nthey will have 0 count. Zero-weight outcomes will appear with zero weight,\nbut can still generate nonzero counts.</li>\n<li><strong>num_dice:</strong>  An <code>int</code> that sets the number of dice in the pool.\nIf not provided, the number of dice will be inferred from the other arguments.\nIf no arguments are provided at all, this defaults to 0.</li>\n<li><strong>count_dice:</strong>  Determines which of the <strong>sorted</strong> dice will be counted, and how many times.\nPrefer to use the <code>DicePool</code>'s <code>[]</code> operator after the fact rather than providing an argument here.\nThis operator is an alias for <code>DicePool.set_count_dice()</code>.\nSee that method's docstring for details.</li>\n<li><strong>truncate_max:</strong>  A sequence of one outcome per die in the pool.\nThat die will be truncated to that maximum outcome, with all greater outcomes having 0 count.\nValues cannot be &gt; the <code>max_outcome</code> of the fundamental die.\nA pool cannot have both <code>truncate_min</code> and <code>truncate_max</code>.\nThis can be used to efficiently roll a set of mixed standard dice.\nFor example, <code>Pool(icepool.d12, truncate_max=[6, 6, 6, 8, 8])</code> would be a pool of 3d6 and 2d8.</li>\n<li><strong>truncate_min:</strong>  A sequence of one outcome per die in the pool.\nThat die will be truncated to that minimum outcome, with all lesser outcomes having 0 count.\nValues cannot be &lt; the <code>min_outcome</code> of the fundamental die.\nA pool cannot have both <code>truncate_min</code> and <code>truncate_max</code>.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><code>ValueError</code> if arguments result in a conflicting number of dice,</li>\n<li>if both <code>truncate_min</code> and <code>truncate_max</code> are provided,</li>\n<li>or if truncation would produce an empty die.</li>\n</ul>\n", "signature": "(\n    die,\n    num_dice=None,\n    count_dice=None,\n    *,\n    truncate_min=None,\n    truncate_max=None\n)", "funcdef": "def"}, "icepool.standard_pool": {"fullname": "icepool.standard_pool", "modulename": "icepool", "qualname": "standard_pool", "type": "function", "doc": "<p>Creates a pool of standard dice.</p>\n\n<p>For example, <code>standard_pool(8, 8, 6, 6, 6)</code> would be a pool of 2 d8s and 3 d6s.</p>\n\n<p>If no die sizes are given, the pool will consist of zero d1s.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>*die_sizes:</strong>  The size of each die in the pool.</li>\n<li><strong>count_dice:</strong>  Which dice will be counted, as <code>Pool()</code>.\nAs with <code>Pool()</code>, you can also use the <code>[]</code> operator after the fact.\nFor example, <code>standard_pool(8, 8, 6, 6, 6)[-2:]</code> would keep the highest two dice\nof 2 d8s and 3 d6s.</li>\n</ul>\n", "signature": "(*die_sizes, count_dice=None)", "funcdef": "def"}, "icepool.DicePool": {"fullname": "icepool.DicePool", "modulename": "icepool", "qualname": "DicePool", "type": "class", "doc": "<p>A pool is a set of (semi-)identical dice that are rolled in no particular order\nand sorted only after the fact.</p>\n\n<p>A pool is defined by:</p>\n\n<ul>\n<li>A fundamental die.</li>\n<li>The number of dice in the pool.</li>\n<li>Which of the sorted positions are counted (possibly multiple or negative times).</li>\n<li>Possibly limiting the max or min outcomes of dice in the pool (but not both)\nrelative to the fundamental die.</li>\n</ul>\n", "bases": "icepool.pool.base.BasePool"}, "icepool.DicePool.__init__": {"fullname": "icepool.DicePool.__init__", "modulename": "icepool", "qualname": "DicePool.__init__", "type": "function", "doc": "<p>Unchecked constructor.</p>\n\n<p>This should not be used directly. Use the <code>Pool()</code> factory function instead.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>die:</strong>  The fundamental die of the pool.</li>\n<li><strong>count_dice:</strong>  At this point, this should be a tuple the length of the pool.</li>\n<li><strong>truncate_max:</strong>  At this point this should be a tuple the length of the pool or <code>None</code>.</li>\n<li><strong>truncate_min:</strong>  At this point this should be a tuple the length of the pool or <code>None</code>.</li>\n</ul>\n", "signature": "(self, die, count_dice, *, truncate_min, truncate_max)", "funcdef": "def"}, "icepool.DicePool.die": {"fullname": "icepool.DicePool.die", "modulename": "icepool", "qualname": "DicePool.die", "type": "function", "doc": "<p>The fundamental die of the pool.</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.DicePool.outcomes": {"fullname": "icepool.DicePool.outcomes", "modulename": "icepool", "qualname": "DicePool.outcomes", "type": "function", "doc": "<p>The outcomes of the fundamental die (including those with zero weight).</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.DicePool.count_dice": {"fullname": "icepool.DicePool.count_dice", "modulename": "icepool", "qualname": "DicePool.count_dice", "type": "function", "doc": "<p>A tuple indicating how many times each of the dice, sorted from lowest to highest, counts.</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.DicePool.num_dice": {"fullname": "icepool.DicePool.num_dice", "modulename": "icepool", "qualname": "DicePool.num_dice", "type": "function", "doc": "<p>The number of dice in this pool (before dropping or counting multiple times).</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.DicePool.set_count_dice": {"fullname": "icepool.DicePool.set_count_dice", "modulename": "icepool", "qualname": "DicePool.set_count_dice", "type": "function", "doc": "<p>Returns a pool with the selected dice counted.</p>\n\n<p>You can use <code>pool[count_dice]</code> for the same effect as this method.</p>\n\n<p>The dice are sorted in ascending order for this purpose,\nregardless of which order the outcomes are evaluated in.</p>\n\n<p>This is always an absolute selection on all <code>num_dice</code>,\nnot a relative selection on already-selected dice,\nwhich would be ambiguous in the presence of multiple or negative counts.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong><code>None</code>:</strong>  All dice will be counted once.</li>\n<li>An <code>int</code>. This will count only the die at the specified index (once).\nIn this case, the result will be a die, not a pool.</li>\n<li>A <code>slice</code>. The selected dice are counted once each.\nIf provided, the third argument resizes the pool,\nrather than being a step,\nbut only if the pool does not have <code>truncate_max</code> or <code>truncate_min</code>.</li>\n<li><p>A sequence of one <code>int</code>s for each die.\nEach die is counted that many times, which could be multiple or negative times.\nThis may resize the pool, but only if the pool does not have <code>truncate_max</code> or <code>truncate_min</code>.</p>\n\n<p>Up to one <code>Ellipsis</code> (<code>...</code>) may be used.\nIf an <code>Ellipsis</code> is used, the size of the pool won't change. Instead:</p>\n\n<ul>\n<li>If <code>count_dice</code> is shorter than <code>num_dice</code>, the <code>Ellipsis</code>\nacts as enough zero counts to make up the difference.\nFor example, <code>pool[1, ..., 1]</code> on five dice would act as <code>pool[1, 0, 0, 0, 1]</code>.</li>\n<li>If <code>count_dice</code> has length equal to <code>num_dice</code>, the <code>Ellipsis</code> has no effect.\nFor example, <code>pool[1, ..., 1]</code> on two dice would act as <code>pool[1, 1]</code>.</li>\n<li>If <code>count_dice</code> is longer than <code>num_dice</code> and the <code>Ellipsis</code> is on one side,\nelements will be dropped from <code>count_dice</code> on the side with the <code>Ellipsis</code>.\nFor example, <code>pool[..., 1, 2, 3]</code> on two dice would act as <code>pool[2, 3]</code>.</li>\n<li>If <code>count_dice</code> is longer than <code>num_dice</code> and the <code>Ellipsis</code> is in the middle,\nthe counts will be as the sum of two one-sided <code>Ellipsis</code>.\nFor example, <code>pool[-1, ..., 1]</code> acts like <code>[-1, ...]</code> plus <code>[..., 1]</code>.\nOn a pool consisting of a single single die this would have the -1 and 1 cancel each other out.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError:</strong>   * If <code>count_dice</code> would change the size of a pool with <code>truncate_max</code> or <code>truncate_min</code>.\n<ul>\n<li>If more than one <code>Ellipsis</code> is used.</li>\n</ul></li>\n</ul>\n\n<p>For example, here are some ways of selecting the two highest dice out of 5:</p>\n\n<ul>\n<li><code>pool[3:5]</code></li>\n<li><code>pool[3:]</code></li>\n<li><code>pool[-2:]</code></li>\n<li><code>pool[..., 1, 1]</code></li>\n</ul>\n\n<p>These will also select the two highest dice out of 5, and will also resize the pool to 5 dice first:</p>\n\n<ul>\n<li><code>pool[3::5]</code></li>\n<li><code>pool[3:5:5]</code></li>\n<li><code>pool[-2::5]</code></li>\n<li><code>pool[0, 0, 0, 1, 1]</code></li>\n</ul>\n\n<p>These will count the highest as a positive and the lowest as a negative:</p>\n\n<ul>\n<li><code>pool[-1, 0, 0, 0, 1]</code></li>\n<li><code>pool[-1, ..., 1]</code></li>\n</ul>\n", "signature": "(self, count_dice)", "funcdef": "def"}, "icepool.DicePool.truncate_min": {"fullname": "icepool.DicePool.truncate_min", "modulename": "icepool", "qualname": "DicePool.truncate_min", "type": "function", "doc": "<p>A sorted tuple of thresholds below which outcomes are truncated, one for each die in the pool. </p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>always_tuple:</strong>  If <code>False</code>, this will return <code>None</code> if there are no die-specific <code>truncate_min</code>.\nIf <code>True</code> this will return a <code>tuple</code> even in this case.</li>\n</ul>\n", "signature": "(self, always_tuple=False)", "funcdef": "def"}, "icepool.DicePool.truncate_max": {"fullname": "icepool.DicePool.truncate_max", "modulename": "icepool", "qualname": "DicePool.truncate_max", "type": "function", "doc": "<p>A sorted tuple of thresholds above which outcomes are truncated, one for each die in the pool. </p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>always_tuple:</strong>  If <code>False</code>, this will return <code>None</code> if there are no die-specific <code>truncate_max</code>.\nIf <code>True</code> this will return a <code>tuple</code> even in this case.</li>\n</ul>\n", "signature": "(self, always_tuple=False)", "funcdef": "def"}, "icepool.DicePool.has_counted_dice": {"fullname": "icepool.DicePool.has_counted_dice", "modulename": "icepool", "qualname": "DicePool.has_counted_dice", "type": "function", "doc": "<p>Returns <code>True</code> iff any of the remaining dice are counted a nonzero number of times.</p>\n\n<p>This is used to skip to the base case when there are no more dice to consider.</p>\n", "signature": "(self)", "funcdef": "def"}, "icepool.DicePool.sample": {"fullname": "icepool.DicePool.sample", "modulename": "icepool", "qualname": "DicePool.sample", "type": "function", "doc": "<p>Samples a roll from this pool.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A dict mapping outcomes to counts representing a single roll of this pool.</p>\n</blockquote>\n", "signature": "(self)", "funcdef": "def"}, "icepool.EvalPool": {"fullname": "icepool.EvalPool", "modulename": "icepool", "qualname": "EvalPool", "type": "class", "doc": "<p>An abstract, immutable, callable class for evaulating one or more <code>DicePool</code>s.</p>\n\n<p>There is one abstract method to implement: <code>next_state()</code>.\nThis should incrementally calculate the result of the roll\ngiven one outcome at a time along with how many dice rolled that outcome.\nAn example sequence of calls, as far as <code>next_state()</code> is concerned, is:</p>\n\n<ol>\n<li><code>state = next_state(state=None, 1, how_many_dice_rolled_1)</code></li>\n<li><code>state = next_state(state, 2, how_many_dice_rolled_2)</code></li>\n<li><code>state = next_state(state, 3, how_many_dice_rolled_3)</code></li>\n<li><code>state = next_state(state, 4, how_many_dice_rolled_4)</code></li>\n<li><code>state = next_state(state, 5, how_many_dice_rolled_5)</code></li>\n<li><code>state = next_state(state, 6, how_many_dice_rolled_6)</code></li>\n<li><code>outcome = final_outcome(state, *pools)</code></li>\n</ol>\n\n<p>A few other methods can optionally be overridden to further customize behavior.</p>\n\n<p>It is not expected that subclasses of <code>EvalPool</code>\nbe able to handle arbitrary types or numbers of pools.\nIndeed, most are expected to handle only a fixed number of pools,\nand often even only pools with a particular type of die.</p>\n\n<p>Instances cache all intermediate state distributions.\nYou should therefore reuse instances when possible.</p>\n\n<p>Instances should not be modified after construction\nin any way that affects the return values of these methods.\nOtherwise, values in the cache may be incorrect.</p>\n", "bases": "abc.ABC"}, "icepool.EvalPool.next_state": {"fullname": "icepool.EvalPool.next_state", "modulename": "icepool", "qualname": "EvalPool.next_state", "type": "function", "doc": "<p>State transition function.</p>\n\n<p>This should produce a state given the previous state, an outcome,\nand the number of dice in each pool rolling that outcome.</p>\n\n<p>Make sure to handle the base case where <code>state is None</code>.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>state:</strong>  A hashable object indicating the state before rolling the current outcome.\nIf there was no previous outcome, this will be <code>None</code>.</li>\n<li><strong>outcome:</strong>  The current outcome.\n<code>next_state</code> will see all outcomes in monotonic order,\neither ascending or descending depending on <code>direction()</code>.\nIf there are multiple pools, the set of outcomes is the union of the outcomes of the invididual pools.\nInterleaving outcomes between different pools is allowed but discouraged.</li>\n<li><p><strong>*counts:</strong>  One <code>int</code> for each pool indicating how many dice in that pool rolled the current outcome.\nIf there are multiple pools, it's possible that some outcomes will not appear in all pools.\nIn this case, the count for the pool(s) that do not have the outcome will be 0. \nZero-weight outcomes count as having that outcome.</p>\n\n<p>Most subclasses will expect a fixed number of pools and \ncan replace this variadic parameter with a fixed number of named parameters.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A hashable object indicating the next state.\n  The special value <code>icepool.Reroll</code> can be used to immediately remove the state from consideration,\n  effectively performing a full reroll of the pool.</p>\n</blockquote>\n", "signature": "(self, state, outcome, *counts)", "funcdef": "def"}, "icepool.EvalPool.final_outcome": {"fullname": "icepool.EvalPool.final_outcome", "modulename": "icepool", "qualname": "EvalPool.final_outcome", "type": "function", "doc": "<p>Optional function to generate a final outcome from a final state.</p>\n\n<p>By default, the final outcome is equal to the final state.\nNote that <code>None</code> is not a valid outcome for a die,\nand if all pools consist of empty dice, the final state will be <code>None</code>.\nSubclasses that want to handle this case should explicitly define what happens.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>final_state:</strong>  A state after all outcomes have been processed.</li>\n<li><p><strong>*pools:</strong>  One or more <code>DicePool</code>s being evaluated.</p>\n\n<p>Most subclasses will expect a fixed number of pools and \ncan replace this variadic parameter with a fixed number of named parameters.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A final outcome that will be used as part of constructing the result die.\n  As usual for <code>Die()</code>, this could itself be a die or <code>icepool.Reroll</code>.</p>\n</blockquote>\n", "signature": "(self, final_state, *pools)", "funcdef": "def"}, "icepool.EvalPool.direction": {"fullname": "icepool.EvalPool.direction", "modulename": "icepool", "qualname": "EvalPool.direction", "type": "function", "doc": "<p>Optional function to determine the direction in which <code>next_state()</code> will see outcomes.</p>\n\n<p>Note that an ascending (&gt; 0) direction is not compatible with pools with <code>truncate_min</code>,\nand a descending (&lt; 0) direction is not compatible with pools with <code>truncate_max</code>.</p>\n\n<p>The default is ascending order.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><p><strong>*pools:</strong>  One or more <code>DicePool</code>s being evaluated.</p>\n\n<p>Most subclasses will expect a fixed number of pools and \ncan replace this variadic parameter with a fixed number of named parameters.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <ul>\n  <li>&gt; 0 if <code>next_state()</code> should always see the outcomes in ascending order.</li>\n  <li>&lt; 0 if <code>next_state()</code> should always see the outcomes in descending order.</li>\n  <li>0 if the order may be determined automatically.</li>\n  </ul>\n</blockquote>\n", "signature": "(self, *pools)", "funcdef": "def"}, "icepool.EvalPool.ndim": {"fullname": "icepool.EvalPool.ndim", "modulename": "icepool", "qualname": "EvalPool.ndim", "type": "function", "doc": "<p>Optional function to specify the number of dimensions of the output die.</p>\n\n<p>If not provided, the ndim of the result will be determined automatically as per <code>Die()</code>.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><p><strong>*pools:</strong>  One or more <code>DicePool</code>s being evaluated.</p>\n\n<p>Most subclasses will expect a fixed number of pools and \ncan replace this variadic parameter with a fixed number of named parameters.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The number of dimensions that the output die should have,\n  or <code>None</code> if this should be determined automatically by <code>Die()</code>.</p>\n</blockquote>\n", "signature": "(self, *pools)", "funcdef": "def"}, "icepool.EvalPool.eval": {"fullname": "icepool.EvalPool.eval", "modulename": "icepool", "qualname": "EvalPool.eval", "type": "function", "doc": "<p>Evaluates pools.</p>\n\n<p>You can call the <code>EvalPool</code> object directly for the same effect,\ne.g. <code>sum_pool(pool)</code> is an alias for <code>sum_pool.eval(pool)</code>.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>*pools:</strong>  Each element may be one of the following:\n<ul>\n<li>A <code>DicePool</code> representing possible rolls of a pool.</li>\n<li>A dict-like representing a single roll of a pool.\nThe dict maps outcomes to counts.</li>\n<li>A sequence of outcomes representing a single roll of a pool. \nOutcomes are treated as having 1 count per appearance.\nMost evaluators will expect a fixed number of pools.\nThe outcomes of the pools must be mutually comparable.\nPools with <code>truncate_min</code> and pools with <code>truncate_max</code> are not compatible.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A die representing the distribution of the final score.\n  If all pools are <code>PoolRoll</code>s, the result is a single outcome instead.</p>\n</blockquote>\n", "signature": "(self, *pools)", "funcdef": "def"}, "icepool.EvalPool.bind_dice": {"fullname": "icepool.EvalPool.bind_dice", "modulename": "icepool", "qualname": "EvalPool.bind_dice", "type": "function", "doc": "<p>Binds one die for each pool.</p>\n\n<p>For example, <code>sum_d6s = sum_pool.bind_dice(icepool.d6)</code> would produce\na function that takes one argument and sums that many d6s.\n<code>sum_d6s(3)</code> would then be the same as <code>3 @ icepool.d6</code>.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>*dice:</strong>  One die for each pool taken by this <code>EvalPool</code>.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A function that takes in one <code>num_dice</code> per pool,\n  then runs this <code>EvalPool</code> for pools of that size using the bound dice.</p>\n</blockquote>\n", "signature": "(self, *dice)", "funcdef": "def"}, "icepool.WrapFuncEval": {"fullname": "icepool.WrapFuncEval", "modulename": "icepool", "qualname": "WrapFuncEval", "type": "class", "doc": "<p>A <code>EvalPool</code> created from a single provided function.</p>\n\n<p><code>next_state()</code> simply calls that function.</p>\n", "bases": "icepool.pool.eval.EvalPool"}, "icepool.WrapFuncEval.__init__": {"fullname": "icepool.WrapFuncEval.__init__", "modulename": "icepool", "qualname": "WrapFuncEval.__init__", "type": "function", "doc": "<p>Constructs a new instance given the function that should be called for <code>next_state()</code>.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>func(state, outcome, *counts):</strong>  This should take the same arguments as <code>next_state()</code>, minus <code>self</code>,\nand return the next state.</li>\n</ul>\n", "signature": "(self, func, /)", "funcdef": "def"}, "icepool.WrapFuncEval.next_state": {"fullname": "icepool.WrapFuncEval.next_state", "modulename": "icepool", "qualname": "WrapFuncEval.next_state", "type": "function", "doc": "<p>State transition function.</p>\n\n<p>This should produce a state given the previous state, an outcome,\nand the number of dice in each pool rolling that outcome.</p>\n\n<p>Make sure to handle the base case where <code>state is None</code>.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>state:</strong>  A hashable object indicating the state before rolling the current outcome.\nIf there was no previous outcome, this will be <code>None</code>.</li>\n<li><strong>outcome:</strong>  The current outcome.\n<code>next_state</code> will see all outcomes in monotonic order,\neither ascending or descending depending on <code>direction()</code>.\nIf there are multiple pools, the set of outcomes is the union of the outcomes of the invididual pools.\nInterleaving outcomes between different pools is allowed but discouraged.</li>\n<li><p><strong>*counts:</strong>  One <code>int</code> for each pool indicating how many dice in that pool rolled the current outcome.\nIf there are multiple pools, it's possible that some outcomes will not appear in all pools.\nIn this case, the count for the pool(s) that do not have the outcome will be 0. \nZero-weight outcomes count as having that outcome.</p>\n\n<p>Most subclasses will expect a fixed number of pools and \ncan replace this variadic parameter with a fixed number of named parameters.</p></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A hashable object indicating the next state.\n  The special value <code>icepool.Reroll</code> can be used to immediately remove the state from consideration,\n  effectively performing a full reroll of the pool.</p>\n</blockquote>\n", "signature": "(self, state, outcome, *counts)", "funcdef": "def"}, "icepool.SumPool": {"fullname": "icepool.SumPool", "modulename": "icepool", "qualname": "SumPool", "type": "class", "doc": "<p>A simple <code>EvalPool</code> that just sums the dice in a pool.</p>\n", "bases": "icepool.pool.eval.EvalPool"}, "icepool.SumPool.__init__": {"fullname": "icepool.SumPool.__init__", "modulename": "icepool", "qualname": "SumPool.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "icepool.SumPool.next_state": {"fullname": "icepool.SumPool.next_state", "modulename": "icepool", "qualname": "SumPool.next_state", "type": "function", "doc": "<p>Add the dice to the running total.</p>\n", "signature": "(self, state, outcome, count)", "funcdef": "def"}, "icepool.SumPool.direction": {"fullname": "icepool.SumPool.direction", "modulename": "icepool", "qualname": "SumPool.direction", "type": "function", "doc": "<p>This eval doesn't care about direction.</p>\n", "signature": "(self, *pools)", "funcdef": "def"}, "icepool.sum_pool": {"fullname": "icepool.sum_pool", "modulename": "icepool", "qualname": "sum_pool", "type": "variable", "doc": "<p></p>\n", "default_value": " = <icepool.pool.eval.SumPool object>"}, "icepool.FindBestSet": {"fullname": "icepool.FindBestSet", "modulename": "icepool", "qualname": "FindBestSet", "type": "class", "doc": "<p>A <code>EvalPool</code> that takes the best matching set in a pool.</p>\n\n<p>This prioritizes set size, then the outcome.</p>\n\n<p>The outcomes are <code>(set_size, outcome)</code>.</p>\n", "bases": "icepool.pool.eval.EvalPool"}, "icepool.FindBestSet.__init__": {"fullname": "icepool.FindBestSet.__init__", "modulename": "icepool", "qualname": "FindBestSet.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "icepool.FindBestSet.next_state": {"fullname": "icepool.FindBestSet.next_state", "modulename": "icepool", "qualname": "FindBestSet.next_state", "type": "function", "doc": "<p>Replace the last best set if this one is better. </p>\n\n<p>Note the use of tuple comparison, which priortizes elements to the left.</p>\n", "signature": "(self, state, outcome, count)", "funcdef": "def"}, "icepool.FindBestSet.direction": {"fullname": "icepool.FindBestSet.direction", "modulename": "icepool", "qualname": "FindBestSet.direction", "type": "function", "doc": "<p>This eval doesn't care about direction.</p>\n", "signature": "(self, *pools)", "funcdef": "def"}, "icepool.FindBestRun": {"fullname": "icepool.FindBestRun", "modulename": "icepool", "qualname": "FindBestRun", "type": "class", "doc": "<p>A <code>EvalPool</code> that takes the best run (aka \"straight\") in a pool.</p>\n\n<p>Outcomes must be <code>int</code>s.</p>\n\n<p>This prioritizes run size, then the outcome.</p>\n\n<p>The outcomes are <code>(run_size, outcome)</code>.</p>\n", "bases": "icepool.pool.eval.EvalPool"}, "icepool.FindBestRun.__init__": {"fullname": "icepool.FindBestRun.__init__", "modulename": "icepool", "qualname": "FindBestRun.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "icepool.FindBestRun.next_state": {"fullname": "icepool.FindBestRun.next_state", "modulename": "icepool", "qualname": "FindBestRun.next_state", "type": "function", "doc": "<p>Increments the current run if at least one die rolled this outcome,\nthen saves the run to the state.</p>\n", "signature": "(self, state, outcome, count)", "funcdef": "def"}, "icepool.FindBestRun.final_outcome": {"fullname": "icepool.FindBestRun.final_outcome", "modulename": "icepool", "qualname": "FindBestRun.final_outcome", "type": "function", "doc": "<p>Returns the best run.</p>\n", "signature": "(self, final_state, *pools)", "funcdef": "def"}, "icepool.FindBestRun.direction": {"fullname": "icepool.FindBestRun.direction", "modulename": "icepool", "qualname": "FindBestRun.direction", "type": "function", "doc": "<p>This only considers outcomes in ascending order.</p>\n", "signature": "(self, *pools)", "funcdef": "def"}, "icepool.d2": {"fullname": "icepool.d2", "modulename": "icepool", "qualname": "d2", "type": "variable", "doc": "<p></p>\n"}, "icepool.d3": {"fullname": "icepool.d3", "modulename": "icepool", "qualname": "d3", "type": "variable", "doc": "<p></p>\n"}, "icepool.d4": {"fullname": "icepool.d4", "modulename": "icepool", "qualname": "d4", "type": "variable", "doc": "<p></p>\n"}, "icepool.d6": {"fullname": "icepool.d6", "modulename": "icepool", "qualname": "d6", "type": "variable", "doc": "<p></p>\n"}, "icepool.d8": {"fullname": "icepool.d8", "modulename": "icepool", "qualname": "d8", "type": "variable", "doc": "<p></p>\n"}, "icepool.d10": {"fullname": "icepool.d10", "modulename": "icepool", "qualname": "d10", "type": "variable", "doc": "<p></p>\n"}, "icepool.d12": {"fullname": "icepool.d12", "modulename": "icepool", "qualname": "d12", "type": "variable", "doc": "<p></p>\n"}, "icepool.d20": {"fullname": "icepool.d20", "modulename": "icepool", "qualname": "d20", "type": "variable", "doc": "<p></p>\n"}, "icepool.d100": {"fullname": "icepool.d100", "modulename": "icepool", "qualname": "d100", "type": "variable", "doc": "<p></p>\n"}}, "docInfo": {"icepool": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 72}, "icepool.Die": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 837}, "icepool.standard": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 74}, "icepool.d": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 92}, "icepool.bernoulli": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 22}, "icepool.coin": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 22}, "icepool.BaseDie": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 219}, "icepool.BaseDie.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "icepool.BaseDie.ndim": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 41}, "icepool.BaseDie.markdown": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 52}, "icepool.BaseDie.outcomes": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 13}, "icepool.BaseDie.num_outcomes": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 13}, "icepool.BaseDie.is_empty": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 13}, "icepool.BaseDie.weights": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 15}, "icepool.BaseDie.has_zero_weights": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 19}, "icepool.BaseDie.items": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 8}, "icepool.BaseDie.denominator": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 9}, "icepool.BaseDie.total_weight": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 9}, "icepool.BaseDie.pmf": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 48}, "icepool.BaseDie.cweights": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 12}, "icepool.BaseDie.sweights": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 12}, "icepool.BaseDie.cdf": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 49}, "icepool.BaseDie.sf": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 48}, "icepool.BaseDie.weight_eq": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 15}, "icepool.BaseDie.weight_ne": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 10}, "icepool.BaseDie.weight_le": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 10}, "icepool.BaseDie.weight_lt": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 10}, "icepool.BaseDie.weight_ge": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 10}, "icepool.BaseDie.weight_gt": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 10}, "icepool.BaseDie.probability": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 10}, "icepool.BaseDie.mode": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 25}, "icepool.BaseDie.modal_weight": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 10}, "icepool.BaseDie.ks_stat": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 11}, "icepool.BaseDie.cvm_stat": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 14}, "icepool.BaseDie.reduce": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 11}, "icepool.BaseDie.scale_weights": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 9}, "icepool.BaseDie.min_outcome": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 11}, "icepool.BaseDie.max_outcome": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 11}, "icepool.BaseDie.nearest_le": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 25}, "icepool.BaseDie.nearest_ge": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 25}, "icepool.BaseDie.reroll": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 136}, "icepool.BaseDie.reroll_until": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 122}, "icepool.BaseDie.truncate": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 87}, "icepool.BaseDie.clip": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 89}, "icepool.BaseDie.cond": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 29}, "icepool.BaseDie.set_outcomes": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 39}, "icepool.BaseDie.trim": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 8}, "icepool.BaseDie.sub": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 225}, "icepool.BaseDie.explode": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 117}, "icepool.BaseDie.lowest": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 28}, "icepool.BaseDie.highest": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 28}, "icepool.BaseDie.repeat_and_sum": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 39}, "icepool.BaseDie.pool": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 15}, "icepool.BaseDie.keep": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 178}, "icepool.BaseDie.keep_highest": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 189}, "icepool.BaseDie.keep_highest_single": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 12}, "icepool.BaseDie.keep_lowest": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 189}, "icepool.BaseDie.keep_lowest_single": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 12}, "icepool.BaseDie.abs": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "icepool.BaseDie.zero": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 63}, "icepool.BaseDie.zero_outcome": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 24}, "icepool.BaseDie.bool": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 28}, "icepool.BaseDie.sign": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 42}, "icepool.BaseDie.cmp": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 39}, "icepool.BaseDie.sample": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 19}, "icepool.BaseDie.key_tuple": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 16}, "icepool.BaseDie.hash": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 27}, "icepool.BaseDie.equals": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 106}, "icepool.EmptyDie": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 7}, "icepool.EmptyDie.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "icepool.EmptyDie.ndim": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 41}, "icepool.EmptyDie.markdown": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 52}, "icepool.ScalarDie": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 19}, "icepool.ScalarDie.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 58}, "icepool.ScalarDie.ndim": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 41}, "icepool.ScalarDie.d": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 49}, "icepool.ScalarDie.if_else": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 97}, "icepool.ScalarDie.median_left": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 22}, "icepool.ScalarDie.median_right": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 22}, "icepool.ScalarDie.median": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 46}, "icepool.ScalarDie.ppf_left": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 33}, "icepool.ScalarDie.ppf_right": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 33}, "icepool.ScalarDie.ppf": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 57}, "icepool.ScalarDie.mean": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "icepool.ScalarDie.variance": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "icepool.ScalarDie.standard_deviation": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "icepool.ScalarDie.sd": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "icepool.ScalarDie.standardized_moment": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "icepool.ScalarDie.skewness": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "icepool.ScalarDie.excess_kurtosis": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "icepool.ScalarDie.cartesian_product": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 90}, "icepool.ScalarDie.markdown": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 52}, "icepool.VectorDie": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 55}, "icepool.VectorDie.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 71}, "icepool.VectorDie.ndim": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 41}, "icepool.VectorDie.marginal": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 13}, "icepool.VectorDie.dim": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 24}, "icepool.VectorDie.all": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 12}, "icepool.VectorDie.any": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 12}, "icepool.VectorDie.median_left": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "icepool.VectorDie.median_right": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "icepool.VectorDie.median": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "icepool.VectorDie.ppf_left": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "icepool.VectorDie.ppf_right": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "icepool.VectorDie.ppf": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "icepool.VectorDie.mean": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "icepool.VectorDie.variance": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "icepool.VectorDie.standard_deviation": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "icepool.VectorDie.sd": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "icepool.VectorDie.standardized_moment": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 3}, "icepool.VectorDie.skewness": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "icepool.VectorDie.excess_kurtosis": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "icepool.VectorDie.covariance": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 3}, "icepool.VectorDie.correlation": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 3}, "icepool.VectorDie.markdown": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 10}, "icepool.from_cweights": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 9}, "icepool.from_sweights": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 9}, "icepool.from_rv": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 105}, "icepool.align": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 88}, "icepool.align_range": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 23}, "icepool.lowest": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 28}, "icepool.highest": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 28}, "icepool.max_outcome": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 11}, "icepool.min_outcome": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 11}, "icepool.apply": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 130}, "icepool.dice_with_common_ndim": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 93}, "icepool.Reroll": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "icepool.BasePool": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 89}, "icepool.BasePool.outcomes": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 14}, "icepool.BasePool.eval": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 126}, "icepool.BasePool.sum": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 38}, "icepool.Pool": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 503}, "icepool.standard_pool": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 132}, "icepool.DicePool": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 90}, "icepool.DicePool.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 110}, "icepool.DicePool.die": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 9}, "icepool.DicePool.outcomes": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 14}, "icepool.DicePool.count_dice": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 19}, "icepool.DicePool.num_dice": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 16}, "icepool.DicePool.set_count_dice": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 673}, "icepool.DicePool.truncate_min": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 69}, "icepool.DicePool.truncate_max": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 69}, "icepool.DicePool.has_counted_dice": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 40}, "icepool.DicePool.sample": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 32}, "icepool.EvalPool": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 280}, "icepool.EvalPool.next_state": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 277}, "icepool.EvalPool.final_outcome": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 174}, "icepool.EvalPool.direction": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 173}, "icepool.EvalPool.ndim": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 119}, "icepool.EvalPool.eval": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 186}, "icepool.EvalPool.bind_dice": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 117}, "icepool.WrapFuncEval": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 25}, "icepool.WrapFuncEval.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 58}, "icepool.WrapFuncEval.next_state": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 277}, "icepool.SumPool": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 16}, "icepool.SumPool.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "icepool.SumPool.next_state": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 10}, "icepool.SumPool.direction": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 10}, "icepool.sum_pool": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "icepool.FindBestSet": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 39}, "icepool.FindBestSet.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "icepool.FindBestSet.next_state": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 28}, "icepool.FindBestSet.direction": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 10}, "icepool.FindBestRun": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 49}, "icepool.FindBestRun.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "icepool.FindBestRun.next_state": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 22}, "icepool.FindBestRun.final_outcome": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 7}, "icepool.FindBestRun.direction": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 10}, "icepool.d2": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "icepool.d3": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "icepool.d4": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "icepool.d6": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "icepool.d8": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "icepool.d10": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "icepool.d12": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "icepool.d20": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "icepool.d100": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}}, "length": 177, "save": true}, "index": {"qualname": {"root": {"docs": {"icepool.BaseDie.__init__": {"tf": 1}, "icepool.EmptyDie.__init__": {"tf": 1}, "icepool.ScalarDie.__init__": {"tf": 1}, "icepool.VectorDie.__init__": {"tf": 1}, "icepool.DicePool.__init__": {"tf": 1}, "icepool.WrapFuncEval.__init__": {"tf": 1}, "icepool.SumPool.__init__": {"tf": 1}, "icepool.FindBestSet.__init__": {"tf": 1}, "icepool.FindBestRun.__init__": {"tf": 1}}, "df": 9, "d": {"1": {"0": {"0": {"docs": {"icepool.d100": {"tf": 1}}, "df": 1}, "docs": {"icepool.d10": {"tf": 1}}, "df": 1}, "2": {"docs": {"icepool.d12": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "2": {"0": {"docs": {"icepool.d20": {"tf": 1}}, "df": 1}, "docs": {"icepool.d2": {"tf": 1}}, "df": 1}, "3": {"docs": {"icepool.d3": {"tf": 1}}, "df": 1}, "4": {"docs": {"icepool.d4": {"tf": 1}}, "df": 1}, "6": {"docs": {"icepool.d6": {"tf": 1}}, "df": 1}, "8": {"docs": {"icepool.d8": {"tf": 1}}, "df": 1}, "docs": {"icepool.d": {"tf": 1}, "icepool.ScalarDie.d": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1}, "icepool.DicePool.die": {"tf": 1}}, "df": 2}, "m": {"docs": {"icepool.VectorDie.dim": {"tf": 1}}, "df": 1}, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.dice_with_common_ndim": {"tf": 1}, "icepool.DicePool.count_dice": {"tf": 1}, "icepool.DicePool.num_dice": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.DicePool.has_counted_dice": {"tf": 1}, "icepool.EvalPool.bind_dice": {"tf": 1}}, "df": 6, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"icepool.DicePool": {"tf": 1}, "icepool.DicePool.__init__": {"tf": 1}, "icepool.DicePool.die": {"tf": 1}, "icepool.DicePool.outcomes": {"tf": 1}, "icepool.DicePool.count_dice": {"tf": 1}, "icepool.DicePool.num_dice": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.DicePool.truncate_min": {"tf": 1}, "icepool.DicePool.truncate_max": {"tf": 1}, "icepool.DicePool.has_counted_dice": {"tf": 1}, "icepool.DicePool.sample": {"tf": 1}}, "df": 11}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.EvalPool.direction": {"tf": 1}, "icepool.SumPool.direction": {"tf": 1}, "icepool.FindBestSet.direction": {"tf": 1}, "icepool.FindBestRun.direction": {"tf": 1}}, "df": 4}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.BaseDie.denominator": {"tf": 1}}, "df": 1}}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.ScalarDie.standard_deviation": {"tf": 1}, "icepool.VectorDie.standard_deviation": {"tf": 1}}, "df": 2}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"icepool.standard": {"tf": 1}, "icepool.ScalarDie.standard_deviation": {"tf": 1}, "icepool.VectorDie.standard_deviation": {"tf": 1}, "icepool.standard_pool": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.ScalarDie.standardized_moment": {"tf": 1}, "icepool.VectorDie.standardized_moment": {"tf": 1}}, "df": 2}}}}}}}}}, "t": {"docs": {"icepool.BaseDie.ks_stat": {"tf": 1}, "icepool.BaseDie.cvm_stat": {"tf": 1}}, "df": 2, "e": {"docs": {"icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}, "icepool.SumPool.next_state": {"tf": 1}, "icepool.FindBestSet.next_state": {"tf": 1}, "icepool.FindBestRun.next_state": {"tf": 1}}, "df": 5}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"icepool.BaseDie.sweights": {"tf": 1}, "icepool.from_sweights": {"tf": 1}}, "df": 2}}}}}}}, "f": {"docs": {"icepool.BaseDie.sf": {"tf": 1}}, "df": 1}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.scale_weights": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {"icepool.ScalarDie": {"tf": 1}, "icepool.ScalarDie.__init__": {"tf": 1}, "icepool.ScalarDie.ndim": {"tf": 1}, "icepool.ScalarDie.d": {"tf": 1}, "icepool.ScalarDie.if_else": {"tf": 1}, "icepool.ScalarDie.median_left": {"tf": 1}, "icepool.ScalarDie.median_right": {"tf": 1}, "icepool.ScalarDie.median": {"tf": 1}, "icepool.ScalarDie.ppf_left": {"tf": 1}, "icepool.ScalarDie.ppf_right": {"tf": 1}, "icepool.ScalarDie.ppf": {"tf": 1}, "icepool.ScalarDie.mean": {"tf": 1}, "icepool.ScalarDie.variance": {"tf": 1}, "icepool.ScalarDie.standard_deviation": {"tf": 1}, "icepool.ScalarDie.sd": {"tf": 1}, "icepool.ScalarDie.standardized_moment": {"tf": 1}, "icepool.ScalarDie.skewness": {"tf": 1}, "icepool.ScalarDie.excess_kurtosis": {"tf": 1}, "icepool.ScalarDie.cartesian_product": {"tf": 1}, "icepool.ScalarDie.markdown": {"tf": 1}}, "df": 20}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"icepool.BaseDie.set_outcomes": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "b": {"docs": {"icepool.BaseDie.sub": {"tf": 1}}, "df": 1}, "m": {"docs": {"icepool.BaseDie.repeat_and_sum": {"tf": 1}, "icepool.BasePool.sum": {"tf": 1}, "icepool.sum_pool": {"tf": 1}}, "df": 3, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"icepool.SumPool": {"tf": 1}, "icepool.SumPool.__init__": {"tf": 1}, "icepool.SumPool.next_state": {"tf": 1}, "icepool.SumPool.direction": {"tf": 1}}, "df": 4}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.keep_highest_single": {"tf": 1}, "icepool.BaseDie.keep_lowest_single": {"tf": 1}}, "df": 2}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {"icepool.BaseDie.sign": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.sample": {"tf": 1}, "icepool.DicePool.sample": {"tf": 1}}, "df": 2}}}}}, "d": {"docs": {"icepool.ScalarDie.sd": {"tf": 1}, "icepool.VectorDie.sd": {"tf": 1}}, "df": 2}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"icepool.ScalarDie.skewness": {"tf": 1}, "icepool.VectorDie.skewness": {"tf": 1}}, "df": 2}}}}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"icepool.bernoulli": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie": {"tf": 1}, "icepool.BaseDie.__init__": {"tf": 1}, "icepool.BaseDie.ndim": {"tf": 1}, "icepool.BaseDie.markdown": {"tf": 1}, "icepool.BaseDie.outcomes": {"tf": 1}, "icepool.BaseDie.num_outcomes": {"tf": 1}, "icepool.BaseDie.is_empty": {"tf": 1}, "icepool.BaseDie.weights": {"tf": 1}, "icepool.BaseDie.has_zero_weights": {"tf": 1}, "icepool.BaseDie.items": {"tf": 1}, "icepool.BaseDie.denominator": {"tf": 1}, "icepool.BaseDie.total_weight": {"tf": 1}, "icepool.BaseDie.pmf": {"tf": 1}, "icepool.BaseDie.cweights": {"tf": 1}, "icepool.BaseDie.sweights": {"tf": 1}, "icepool.BaseDie.cdf": {"tf": 1}, "icepool.BaseDie.sf": {"tf": 1}, "icepool.BaseDie.weight_eq": {"tf": 1}, "icepool.BaseDie.weight_ne": {"tf": 1}, "icepool.BaseDie.weight_le": {"tf": 1}, "icepool.BaseDie.weight_lt": {"tf": 1}, "icepool.BaseDie.weight_ge": {"tf": 1}, "icepool.BaseDie.weight_gt": {"tf": 1}, "icepool.BaseDie.probability": {"tf": 1}, "icepool.BaseDie.mode": {"tf": 1}, "icepool.BaseDie.modal_weight": {"tf": 1}, "icepool.BaseDie.ks_stat": {"tf": 1}, "icepool.BaseDie.cvm_stat": {"tf": 1}, "icepool.BaseDie.reduce": {"tf": 1}, "icepool.BaseDie.scale_weights": {"tf": 1}, "icepool.BaseDie.min_outcome": {"tf": 1}, "icepool.BaseDie.max_outcome": {"tf": 1}, "icepool.BaseDie.nearest_le": {"tf": 1}, "icepool.BaseDie.nearest_ge": {"tf": 1}, "icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.reroll_until": {"tf": 1}, "icepool.BaseDie.truncate": {"tf": 1}, "icepool.BaseDie.clip": {"tf": 1}, "icepool.BaseDie.cond": {"tf": 1}, "icepool.BaseDie.set_outcomes": {"tf": 1}, "icepool.BaseDie.trim": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.BaseDie.explode": {"tf": 1}, "icepool.BaseDie.lowest": {"tf": 1}, "icepool.BaseDie.highest": {"tf": 1}, "icepool.BaseDie.repeat_and_sum": {"tf": 1}, "icepool.BaseDie.pool": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 1}, "icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_highest_single": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}, "icepool.BaseDie.keep_lowest_single": {"tf": 1}, "icepool.BaseDie.abs": {"tf": 1}, "icepool.BaseDie.zero": {"tf": 1}, "icepool.BaseDie.zero_outcome": {"tf": 1}, "icepool.BaseDie.bool": {"tf": 1}, "icepool.BaseDie.sign": {"tf": 1}, "icepool.BaseDie.cmp": {"tf": 1}, "icepool.BaseDie.sample": {"tf": 1}, "icepool.BaseDie.key_tuple": {"tf": 1}, "icepool.BaseDie.hash": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1}}, "df": 62}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"icepool.BasePool": {"tf": 1}, "icepool.BasePool.outcomes": {"tf": 1}, "icepool.BasePool.eval": {"tf": 1}, "icepool.BasePool.sum": {"tf": 1}}, "df": 4}}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"icepool.BaseDie.bool": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"icepool.EvalPool.bind_dice": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"icepool.coin": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"icepool.BaseDie.cond": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.VectorDie.covariance": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.VectorDie.correlation": {"tf": 1}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.dice_with_common_ndim": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.DicePool.count_dice": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.DicePool.has_counted_dice": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"icepool.BaseDie.cweights": {"tf": 1}, "icepool.from_cweights": {"tf": 1}}, "df": 2}}}}}}}, "d": {"docs": {}, "df": 0, "f": {"docs": {"icepool.BaseDie.cdf": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "m": {"docs": {"icepool.BaseDie.cvm_stat": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"icepool.BaseDie.clip": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"icepool.BaseDie.cmp": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"icepool.ScalarDie.cartesian_product": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"icepool.BaseDie.__init__": {"tf": 1}, "icepool.EmptyDie.__init__": {"tf": 1}, "icepool.ScalarDie.__init__": {"tf": 1}, "icepool.VectorDie.__init__": {"tf": 1}, "icepool.DicePool.__init__": {"tf": 1}, "icepool.WrapFuncEval.__init__": {"tf": 1}, "icepool.SumPool.__init__": {"tf": 1}, "icepool.FindBestSet.__init__": {"tf": 1}, "icepool.FindBestRun.__init__": {"tf": 1}}, "df": 9}}}, "s": {"docs": {"icepool.BaseDie.is_empty": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"icepool.BaseDie.items": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {"icepool.ScalarDie.if_else": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"icepool.BaseDie.ndim": {"tf": 1}, "icepool.EmptyDie.ndim": {"tf": 1}, "icepool.ScalarDie.ndim": {"tf": 1}, "icepool.VectorDie.ndim": {"tf": 1}, "icepool.dice_with_common_ndim": {"tf": 1}, "icepool.EvalPool.ndim": {"tf": 1}}, "df": 6}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"icepool.BaseDie.num_outcomes": {"tf": 1}, "icepool.DicePool.num_dice": {"tf": 1}}, "df": 2}}, "e": {"docs": {"icepool.BaseDie.weight_ne": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"icepool.BaseDie.nearest_le": {"tf": 1}, "icepool.BaseDie.nearest_ge": {"tf": 1}}, "df": 2}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}, "icepool.SumPool.next_state": {"tf": 1}, "icepool.FindBestSet.next_state": {"tf": 1}, "icepool.FindBestRun.next_state": {"tf": 1}}, "df": 5}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"icepool.BaseDie.markdown": {"tf": 1}, "icepool.EmptyDie.markdown": {"tf": 1}, "icepool.ScalarDie.markdown": {"tf": 1}, "icepool.VectorDie.markdown": {"tf": 1}}, "df": 4}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.VectorDie.marginal": {"tf": 1}}, "df": 1}}}}}}, "x": {"docs": {"icepool.BaseDie.max_outcome": {"tf": 1}, "icepool.max_outcome": {"tf": 1}, "icepool.DicePool.truncate_max": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.mode": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.BaseDie.modal_weight": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.ScalarDie.standardized_moment": {"tf": 1}, "icepool.VectorDie.standardized_moment": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"icepool.BaseDie.min_outcome": {"tf": 1}, "icepool.min_outcome": {"tf": 1}, "icepool.DicePool.truncate_min": {"tf": 1}}, "df": 3}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"icepool.ScalarDie.median_left": {"tf": 1}, "icepool.ScalarDie.median_right": {"tf": 1}, "icepool.ScalarDie.median": {"tf": 1}, "icepool.VectorDie.median_left": {"tf": 1}, "icepool.VectorDie.median_right": {"tf": 1}, "icepool.VectorDie.median": {"tf": 1}}, "df": 6}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"icepool.ScalarDie.mean": {"tf": 1}, "icepool.VectorDie.mean": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.min_outcome": {"tf": 1}, "icepool.BaseDie.max_outcome": {"tf": 1}, "icepool.BaseDie.zero_outcome": {"tf": 1}, "icepool.max_outcome": {"tf": 1}, "icepool.min_outcome": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.FindBestRun.final_outcome": {"tf": 1}}, "df": 7, "s": {"docs": {"icepool.BaseDie.outcomes": {"tf": 1}, "icepool.BaseDie.num_outcomes": {"tf": 1}, "icepool.BaseDie.set_outcomes": {"tf": 1}, "icepool.BasePool.outcomes": {"tf": 1}, "icepool.DicePool.outcomes": {"tf": 1}}, "df": 5}}}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"icepool.BaseDie.is_empty": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {"icepool.EmptyDie": {"tf": 1}, "icepool.EmptyDie.__init__": {"tf": 1}, "icepool.EmptyDie.ndim": {"tf": 1}, "icepool.EmptyDie.markdown": {"tf": 1}}, "df": 4}}}}}}}, "q": {"docs": {"icepool.BaseDie.weight_eq": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"icepool.BaseDie.equals": {"tf": 1}}, "df": 1}}}}}, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.explode": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"icepool.ScalarDie.excess_kurtosis": {"tf": 1}, "icepool.VectorDie.excess_kurtosis": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"icepool.ScalarDie.if_else": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.BasePool.eval": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"icepool.EvalPool": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1}, "icepool.EvalPool.ndim": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}, "icepool.EvalPool.bind_dice": {"tf": 1}}, "df": 7}}}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"icepool.BaseDie.total_weight": {"tf": 1}, "icepool.BaseDie.weight_eq": {"tf": 1}, "icepool.BaseDie.weight_ne": {"tf": 1}, "icepool.BaseDie.weight_le": {"tf": 1}, "icepool.BaseDie.weight_lt": {"tf": 1}, "icepool.BaseDie.weight_ge": {"tf": 1}, "icepool.BaseDie.weight_gt": {"tf": 1}, "icepool.BaseDie.modal_weight": {"tf": 1}}, "df": 8, "s": {"docs": {"icepool.BaseDie.weights": {"tf": 1}, "icepool.BaseDie.has_zero_weights": {"tf": 1}, "icepool.BaseDie.scale_weights": {"tf": 1}}, "df": 3}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"icepool.dice_with_common_ndim": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.WrapFuncEval": {"tf": 1}, "icepool.WrapFuncEval.__init__": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"icepool.BaseDie.has_zero_weights": {"tf": 1}, "icepool.DicePool.has_counted_dice": {"tf": 1}}, "df": 2, "h": {"docs": {"icepool.BaseDie.hash": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"icepool.BaseDie.highest": {"tf": 1}, "icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_highest_single": {"tf": 1}, "icepool.highest": {"tf": 1}}, "df": 4}}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"icepool.BaseDie.has_zero_weights": {"tf": 1}, "icepool.BaseDie.zero": {"tf": 1}, "icepool.BaseDie.zero_outcome": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.BaseDie.total_weight": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.truncate": {"tf": 1}, "icepool.DicePool.truncate_min": {"tf": 1}, "icepool.DicePool.truncate_max": {"tf": 1}}, "df": 3}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {"icepool.BaseDie.trim": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.key_tuple": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "f": {"docs": {"icepool.BaseDie.pmf": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"icepool.BaseDie.probability": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"icepool.ScalarDie.cartesian_product": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"icepool.BaseDie.pool": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.standard_pool": {"tf": 1}, "icepool.sum_pool": {"tf": 1}}, "df": 4}}}, "p": {"docs": {}, "df": 0, "f": {"docs": {"icepool.ScalarDie.ppf_left": {"tf": 1}, "icepool.ScalarDie.ppf_right": {"tf": 1}, "icepool.ScalarDie.ppf": {"tf": 1}, "icepool.VectorDie.ppf_left": {"tf": 1}, "icepool.VectorDie.ppf_right": {"tf": 1}, "icepool.VectorDie.ppf": {"tf": 1}}, "df": 6}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.weight_le": {"tf": 1}, "icepool.BaseDie.nearest_le": {"tf": 1}}, "df": 2, "f": {"docs": {}, "df": 0, "t": {"docs": {"icepool.ScalarDie.median_left": {"tf": 1}, "icepool.ScalarDie.ppf_left": {"tf": 1}, "icepool.VectorDie.median_left": {"tf": 1}, "icepool.VectorDie.ppf_left": {"tf": 1}}, "df": 4}}}, "t": {"docs": {"icepool.BaseDie.weight_lt": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"icepool.BaseDie.lowest": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}, "icepool.BaseDie.keep_lowest_single": {"tf": 1}, "icepool.lowest": {"tf": 1}}, "df": 4}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.weight_ge": {"tf": 1}, "icepool.BaseDie.nearest_ge": {"tf": 1}}, "df": 2}, "t": {"docs": {"icepool.BaseDie.weight_gt": {"tf": 1}}, "df": 1}}, "k": {"docs": {}, "df": 0, "s": {"docs": {"icepool.BaseDie.ks_stat": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"icepool.BaseDie.keep": {"tf": 1}, "icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_highest_single": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}, "icepool.BaseDie.keep_lowest_single": {"tf": 1}}, "df": 5}}, "y": {"docs": {"icepool.BaseDie.key_tuple": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"icepool.ScalarDie.excess_kurtosis": {"tf": 1}, "icepool.VectorDie.excess_kurtosis": {"tf": 1}}, "df": 2}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.reduce": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.reroll_until": {"tf": 1}, "icepool.Reroll": {"tf": 1}}, "df": 3}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"icepool.BaseDie.repeat_and_sum": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"icepool.ScalarDie.median_right": {"tf": 1}, "icepool.ScalarDie.ppf_right": {"tf": 1}, "icepool.VectorDie.median_right": {"tf": 1}, "icepool.VectorDie.ppf_right": {"tf": 1}}, "df": 4}}}}, "v": {"docs": {"icepool.from_rv": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"icepool.align_range": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"icepool.BaseDie.reroll_until": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"icepool.BaseDie.repeat_and_sum": {"tf": 1}}, "df": 1}, "y": {"docs": {"icepool.VectorDie.any": {"tf": 1}}, "df": 1}}, "b": {"docs": {}, "df": 0, "s": {"docs": {"icepool.BaseDie.abs": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"icepool.VectorDie.all": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"icepool.align": {"tf": 1}, "icepool.align_range": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.apply": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.ScalarDie.variance": {"tf": 1}, "icepool.VectorDie.variance": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {"icepool.VectorDie": {"tf": 1}, "icepool.VectorDie.__init__": {"tf": 1}, "icepool.VectorDie.ndim": {"tf": 1}, "icepool.VectorDie.marginal": {"tf": 1}, "icepool.VectorDie.dim": {"tf": 1}, "icepool.VectorDie.all": {"tf": 1}, "icepool.VectorDie.any": {"tf": 1}, "icepool.VectorDie.median_left": {"tf": 1}, "icepool.VectorDie.median_right": {"tf": 1}, "icepool.VectorDie.median": {"tf": 1}, "icepool.VectorDie.ppf_left": {"tf": 1}, "icepool.VectorDie.ppf_right": {"tf": 1}, "icepool.VectorDie.ppf": {"tf": 1}, "icepool.VectorDie.mean": {"tf": 1}, "icepool.VectorDie.variance": {"tf": 1}, "icepool.VectorDie.standard_deviation": {"tf": 1}, "icepool.VectorDie.sd": {"tf": 1}, "icepool.VectorDie.standardized_moment": {"tf": 1}, "icepool.VectorDie.skewness": {"tf": 1}, "icepool.VectorDie.excess_kurtosis": {"tf": 1}, "icepool.VectorDie.covariance": {"tf": 1}, "icepool.VectorDie.correlation": {"tf": 1}, "icepool.VectorDie.markdown": {"tf": 1}}, "df": 23}}}}}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"icepool.from_cweights": {"tf": 1}, "icepool.from_sweights": {"tf": 1}, "icepool.from_rv": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.FindBestRun.final_outcome": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"icepool.FindBestSet": {"tf": 1}, "icepool.FindBestSet.__init__": {"tf": 1}, "icepool.FindBestSet.next_state": {"tf": 1}, "icepool.FindBestSet.direction": {"tf": 1}}, "df": 4}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"icepool.FindBestRun": {"tf": 1}, "icepool.FindBestRun.__init__": {"tf": 1}, "icepool.FindBestRun.next_state": {"tf": 1}, "icepool.FindBestRun.final_outcome": {"tf": 1}, "icepool.FindBestRun.direction": {"tf": 1}}, "df": 5}}}}}}}}}}}}}, "fullname": {"root": {"docs": {"icepool.BaseDie.__init__": {"tf": 1}, "icepool.EmptyDie.__init__": {"tf": 1}, "icepool.ScalarDie.__init__": {"tf": 1}, "icepool.VectorDie.__init__": {"tf": 1}, "icepool.DicePool.__init__": {"tf": 1}, "icepool.WrapFuncEval.__init__": {"tf": 1}, "icepool.SumPool.__init__": {"tf": 1}, "icepool.FindBestSet.__init__": {"tf": 1}, "icepool.FindBestRun.__init__": {"tf": 1}}, "df": 9, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"icepool": {"tf": 1}, "icepool.Die": {"tf": 1}, "icepool.standard": {"tf": 1}, "icepool.d": {"tf": 1}, "icepool.bernoulli": {"tf": 1}, "icepool.coin": {"tf": 1}, "icepool.BaseDie": {"tf": 1}, "icepool.BaseDie.__init__": {"tf": 1}, "icepool.BaseDie.ndim": {"tf": 1}, "icepool.BaseDie.markdown": {"tf": 1}, "icepool.BaseDie.outcomes": {"tf": 1}, "icepool.BaseDie.num_outcomes": {"tf": 1}, "icepool.BaseDie.is_empty": {"tf": 1}, "icepool.BaseDie.weights": {"tf": 1}, "icepool.BaseDie.has_zero_weights": {"tf": 1}, "icepool.BaseDie.items": {"tf": 1}, "icepool.BaseDie.denominator": {"tf": 1}, "icepool.BaseDie.total_weight": {"tf": 1}, "icepool.BaseDie.pmf": {"tf": 1}, "icepool.BaseDie.cweights": {"tf": 1}, "icepool.BaseDie.sweights": {"tf": 1}, "icepool.BaseDie.cdf": {"tf": 1}, "icepool.BaseDie.sf": {"tf": 1}, "icepool.BaseDie.weight_eq": {"tf": 1}, "icepool.BaseDie.weight_ne": {"tf": 1}, "icepool.BaseDie.weight_le": {"tf": 1}, "icepool.BaseDie.weight_lt": {"tf": 1}, "icepool.BaseDie.weight_ge": {"tf": 1}, "icepool.BaseDie.weight_gt": {"tf": 1}, "icepool.BaseDie.probability": {"tf": 1}, "icepool.BaseDie.mode": {"tf": 1}, "icepool.BaseDie.modal_weight": {"tf": 1}, "icepool.BaseDie.ks_stat": {"tf": 1}, "icepool.BaseDie.cvm_stat": {"tf": 1}, "icepool.BaseDie.reduce": {"tf": 1}, "icepool.BaseDie.scale_weights": {"tf": 1}, "icepool.BaseDie.min_outcome": {"tf": 1}, "icepool.BaseDie.max_outcome": {"tf": 1}, "icepool.BaseDie.nearest_le": {"tf": 1}, "icepool.BaseDie.nearest_ge": {"tf": 1}, "icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.reroll_until": {"tf": 1}, "icepool.BaseDie.truncate": {"tf": 1}, "icepool.BaseDie.clip": {"tf": 1}, "icepool.BaseDie.cond": {"tf": 1}, "icepool.BaseDie.set_outcomes": {"tf": 1}, "icepool.BaseDie.trim": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.BaseDie.explode": {"tf": 1}, "icepool.BaseDie.lowest": {"tf": 1}, "icepool.BaseDie.highest": {"tf": 1}, "icepool.BaseDie.repeat_and_sum": {"tf": 1}, "icepool.BaseDie.pool": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 1}, "icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_highest_single": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}, "icepool.BaseDie.keep_lowest_single": {"tf": 1}, "icepool.BaseDie.abs": {"tf": 1}, "icepool.BaseDie.zero": {"tf": 1}, "icepool.BaseDie.zero_outcome": {"tf": 1}, "icepool.BaseDie.bool": {"tf": 1}, "icepool.BaseDie.sign": {"tf": 1}, "icepool.BaseDie.cmp": {"tf": 1}, "icepool.BaseDie.sample": {"tf": 1}, "icepool.BaseDie.key_tuple": {"tf": 1}, "icepool.BaseDie.hash": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1}, "icepool.EmptyDie": {"tf": 1}, "icepool.EmptyDie.__init__": {"tf": 1}, "icepool.EmptyDie.ndim": {"tf": 1}, "icepool.EmptyDie.markdown": {"tf": 1}, "icepool.ScalarDie": {"tf": 1}, "icepool.ScalarDie.__init__": {"tf": 1}, "icepool.ScalarDie.ndim": {"tf": 1}, "icepool.ScalarDie.d": {"tf": 1}, "icepool.ScalarDie.if_else": {"tf": 1}, "icepool.ScalarDie.median_left": {"tf": 1}, "icepool.ScalarDie.median_right": {"tf": 1}, "icepool.ScalarDie.median": {"tf": 1}, "icepool.ScalarDie.ppf_left": {"tf": 1}, "icepool.ScalarDie.ppf_right": {"tf": 1}, "icepool.ScalarDie.ppf": {"tf": 1}, "icepool.ScalarDie.mean": {"tf": 1}, "icepool.ScalarDie.variance": {"tf": 1}, "icepool.ScalarDie.standard_deviation": {"tf": 1}, "icepool.ScalarDie.sd": {"tf": 1}, "icepool.ScalarDie.standardized_moment": {"tf": 1}, "icepool.ScalarDie.skewness": {"tf": 1}, "icepool.ScalarDie.excess_kurtosis": {"tf": 1}, "icepool.ScalarDie.cartesian_product": {"tf": 1}, "icepool.ScalarDie.markdown": {"tf": 1}, "icepool.VectorDie": {"tf": 1}, "icepool.VectorDie.__init__": {"tf": 1}, "icepool.VectorDie.ndim": {"tf": 1}, "icepool.VectorDie.marginal": {"tf": 1}, "icepool.VectorDie.dim": {"tf": 1}, "icepool.VectorDie.all": {"tf": 1}, "icepool.VectorDie.any": {"tf": 1}, "icepool.VectorDie.median_left": {"tf": 1}, "icepool.VectorDie.median_right": {"tf": 1}, "icepool.VectorDie.median": {"tf": 1}, "icepool.VectorDie.ppf_left": {"tf": 1}, "icepool.VectorDie.ppf_right": {"tf": 1}, "icepool.VectorDie.ppf": {"tf": 1}, "icepool.VectorDie.mean": {"tf": 1}, "icepool.VectorDie.variance": {"tf": 1}, "icepool.VectorDie.standard_deviation": {"tf": 1}, "icepool.VectorDie.sd": {"tf": 1}, "icepool.VectorDie.standardized_moment": {"tf": 1}, "icepool.VectorDie.skewness": {"tf": 1}, "icepool.VectorDie.excess_kurtosis": {"tf": 1}, "icepool.VectorDie.covariance": {"tf": 1}, "icepool.VectorDie.correlation": {"tf": 1}, "icepool.VectorDie.markdown": {"tf": 1}, "icepool.from_cweights": {"tf": 1}, "icepool.from_sweights": {"tf": 1}, "icepool.from_rv": {"tf": 1}, "icepool.align": {"tf": 1}, "icepool.align_range": {"tf": 1}, "icepool.lowest": {"tf": 1}, "icepool.highest": {"tf": 1}, "icepool.max_outcome": {"tf": 1}, "icepool.min_outcome": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.dice_with_common_ndim": {"tf": 1}, "icepool.Reroll": {"tf": 1}, "icepool.BasePool": {"tf": 1}, "icepool.BasePool.outcomes": {"tf": 1}, "icepool.BasePool.eval": {"tf": 1}, "icepool.BasePool.sum": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.standard_pool": {"tf": 1}, "icepool.DicePool": {"tf": 1}, "icepool.DicePool.__init__": {"tf": 1}, "icepool.DicePool.die": {"tf": 1}, "icepool.DicePool.outcomes": {"tf": 1}, "icepool.DicePool.count_dice": {"tf": 1}, "icepool.DicePool.num_dice": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.DicePool.truncate_min": {"tf": 1}, "icepool.DicePool.truncate_max": {"tf": 1}, "icepool.DicePool.has_counted_dice": {"tf": 1}, "icepool.DicePool.sample": {"tf": 1}, "icepool.EvalPool": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1}, "icepool.EvalPool.ndim": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}, "icepool.EvalPool.bind_dice": {"tf": 1}, "icepool.WrapFuncEval": {"tf": 1}, "icepool.WrapFuncEval.__init__": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}, "icepool.SumPool": {"tf": 1}, "icepool.SumPool.__init__": {"tf": 1}, "icepool.SumPool.next_state": {"tf": 1}, "icepool.SumPool.direction": {"tf": 1}, "icepool.sum_pool": {"tf": 1}, "icepool.FindBestSet": {"tf": 1}, "icepool.FindBestSet.__init__": {"tf": 1}, "icepool.FindBestSet.next_state": {"tf": 1}, "icepool.FindBestSet.direction": {"tf": 1}, "icepool.FindBestRun": {"tf": 1}, "icepool.FindBestRun.__init__": {"tf": 1}, "icepool.FindBestRun.next_state": {"tf": 1}, "icepool.FindBestRun.final_outcome": {"tf": 1}, "icepool.FindBestRun.direction": {"tf": 1}, "icepool.d2": {"tf": 1}, "icepool.d3": {"tf": 1}, "icepool.d4": {"tf": 1}, "icepool.d6": {"tf": 1}, "icepool.d8": {"tf": 1}, "icepool.d10": {"tf": 1}, "icepool.d12": {"tf": 1}, "icepool.d20": {"tf": 1}, "icepool.d100": {"tf": 1}}, "df": 177}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"icepool.BaseDie.__init__": {"tf": 1}, "icepool.EmptyDie.__init__": {"tf": 1}, "icepool.ScalarDie.__init__": {"tf": 1}, "icepool.VectorDie.__init__": {"tf": 1}, "icepool.DicePool.__init__": {"tf": 1}, "icepool.WrapFuncEval.__init__": {"tf": 1}, "icepool.SumPool.__init__": {"tf": 1}, "icepool.FindBestSet.__init__": {"tf": 1}, "icepool.FindBestRun.__init__": {"tf": 1}}, "df": 9}}}, "s": {"docs": {"icepool.BaseDie.is_empty": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"icepool.BaseDie.items": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {"icepool.ScalarDie.if_else": {"tf": 1}}, "df": 1}}, "d": {"1": {"0": {"0": {"docs": {"icepool.d100": {"tf": 1}}, "df": 1}, "docs": {"icepool.d10": {"tf": 1}}, "df": 1}, "2": {"docs": {"icepool.d12": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "2": {"0": {"docs": {"icepool.d20": {"tf": 1}}, "df": 1}, "docs": {"icepool.d2": {"tf": 1}}, "df": 1}, "3": {"docs": {"icepool.d3": {"tf": 1}}, "df": 1}, "4": {"docs": {"icepool.d4": {"tf": 1}}, "df": 1}, "6": {"docs": {"icepool.d6": {"tf": 1}}, "df": 1}, "8": {"docs": {"icepool.d8": {"tf": 1}}, "df": 1}, "docs": {"icepool.d": {"tf": 1}, "icepool.ScalarDie.d": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1}, "icepool.DicePool.die": {"tf": 1}}, "df": 2}, "m": {"docs": {"icepool.VectorDie.dim": {"tf": 1}}, "df": 1}, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.dice_with_common_ndim": {"tf": 1}, "icepool.DicePool.count_dice": {"tf": 1}, "icepool.DicePool.num_dice": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.DicePool.has_counted_dice": {"tf": 1}, "icepool.EvalPool.bind_dice": {"tf": 1}}, "df": 6, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"icepool.DicePool": {"tf": 1}, "icepool.DicePool.__init__": {"tf": 1}, "icepool.DicePool.die": {"tf": 1}, "icepool.DicePool.outcomes": {"tf": 1}, "icepool.DicePool.count_dice": {"tf": 1}, "icepool.DicePool.num_dice": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.DicePool.truncate_min": {"tf": 1}, "icepool.DicePool.truncate_max": {"tf": 1}, "icepool.DicePool.has_counted_dice": {"tf": 1}, "icepool.DicePool.sample": {"tf": 1}}, "df": 11}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.EvalPool.direction": {"tf": 1}, "icepool.SumPool.direction": {"tf": 1}, "icepool.FindBestSet.direction": {"tf": 1}, "icepool.FindBestRun.direction": {"tf": 1}}, "df": 4}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.BaseDie.denominator": {"tf": 1}}, "df": 1}}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.ScalarDie.standard_deviation": {"tf": 1}, "icepool.VectorDie.standard_deviation": {"tf": 1}}, "df": 2}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"icepool.standard": {"tf": 1}, "icepool.ScalarDie.standard_deviation": {"tf": 1}, "icepool.VectorDie.standard_deviation": {"tf": 1}, "icepool.standard_pool": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.ScalarDie.standardized_moment": {"tf": 1}, "icepool.VectorDie.standardized_moment": {"tf": 1}}, "df": 2}}}}}}}}}, "t": {"docs": {"icepool.BaseDie.ks_stat": {"tf": 1}, "icepool.BaseDie.cvm_stat": {"tf": 1}}, "df": 2, "e": {"docs": {"icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}, "icepool.SumPool.next_state": {"tf": 1}, "icepool.FindBestSet.next_state": {"tf": 1}, "icepool.FindBestRun.next_state": {"tf": 1}}, "df": 5}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"icepool.BaseDie.sweights": {"tf": 1}, "icepool.from_sweights": {"tf": 1}}, "df": 2}}}}}}}, "f": {"docs": {"icepool.BaseDie.sf": {"tf": 1}}, "df": 1}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.scale_weights": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {"icepool.ScalarDie": {"tf": 1}, "icepool.ScalarDie.__init__": {"tf": 1}, "icepool.ScalarDie.ndim": {"tf": 1}, "icepool.ScalarDie.d": {"tf": 1}, "icepool.ScalarDie.if_else": {"tf": 1}, "icepool.ScalarDie.median_left": {"tf": 1}, "icepool.ScalarDie.median_right": {"tf": 1}, "icepool.ScalarDie.median": {"tf": 1}, "icepool.ScalarDie.ppf_left": {"tf": 1}, "icepool.ScalarDie.ppf_right": {"tf": 1}, "icepool.ScalarDie.ppf": {"tf": 1}, "icepool.ScalarDie.mean": {"tf": 1}, "icepool.ScalarDie.variance": {"tf": 1}, "icepool.ScalarDie.standard_deviation": {"tf": 1}, "icepool.ScalarDie.sd": {"tf": 1}, "icepool.ScalarDie.standardized_moment": {"tf": 1}, "icepool.ScalarDie.skewness": {"tf": 1}, "icepool.ScalarDie.excess_kurtosis": {"tf": 1}, "icepool.ScalarDie.cartesian_product": {"tf": 1}, "icepool.ScalarDie.markdown": {"tf": 1}}, "df": 20}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"icepool.BaseDie.set_outcomes": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "b": {"docs": {"icepool.BaseDie.sub": {"tf": 1}}, "df": 1}, "m": {"docs": {"icepool.BaseDie.repeat_and_sum": {"tf": 1}, "icepool.BasePool.sum": {"tf": 1}, "icepool.sum_pool": {"tf": 1}}, "df": 3, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"icepool.SumPool": {"tf": 1}, "icepool.SumPool.__init__": {"tf": 1}, "icepool.SumPool.next_state": {"tf": 1}, "icepool.SumPool.direction": {"tf": 1}}, "df": 4}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.keep_highest_single": {"tf": 1}, "icepool.BaseDie.keep_lowest_single": {"tf": 1}}, "df": 2}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {"icepool.BaseDie.sign": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.sample": {"tf": 1}, "icepool.DicePool.sample": {"tf": 1}}, "df": 2}}}}}, "d": {"docs": {"icepool.ScalarDie.sd": {"tf": 1}, "icepool.VectorDie.sd": {"tf": 1}}, "df": 2}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"icepool.ScalarDie.skewness": {"tf": 1}, "icepool.VectorDie.skewness": {"tf": 1}}, "df": 2}}}}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"icepool.bernoulli": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie": {"tf": 1}, "icepool.BaseDie.__init__": {"tf": 1}, "icepool.BaseDie.ndim": {"tf": 1}, "icepool.BaseDie.markdown": {"tf": 1}, "icepool.BaseDie.outcomes": {"tf": 1}, "icepool.BaseDie.num_outcomes": {"tf": 1}, "icepool.BaseDie.is_empty": {"tf": 1}, "icepool.BaseDie.weights": {"tf": 1}, "icepool.BaseDie.has_zero_weights": {"tf": 1}, "icepool.BaseDie.items": {"tf": 1}, "icepool.BaseDie.denominator": {"tf": 1}, "icepool.BaseDie.total_weight": {"tf": 1}, "icepool.BaseDie.pmf": {"tf": 1}, "icepool.BaseDie.cweights": {"tf": 1}, "icepool.BaseDie.sweights": {"tf": 1}, "icepool.BaseDie.cdf": {"tf": 1}, "icepool.BaseDie.sf": {"tf": 1}, "icepool.BaseDie.weight_eq": {"tf": 1}, "icepool.BaseDie.weight_ne": {"tf": 1}, "icepool.BaseDie.weight_le": {"tf": 1}, "icepool.BaseDie.weight_lt": {"tf": 1}, "icepool.BaseDie.weight_ge": {"tf": 1}, "icepool.BaseDie.weight_gt": {"tf": 1}, "icepool.BaseDie.probability": {"tf": 1}, "icepool.BaseDie.mode": {"tf": 1}, "icepool.BaseDie.modal_weight": {"tf": 1}, "icepool.BaseDie.ks_stat": {"tf": 1}, "icepool.BaseDie.cvm_stat": {"tf": 1}, "icepool.BaseDie.reduce": {"tf": 1}, "icepool.BaseDie.scale_weights": {"tf": 1}, "icepool.BaseDie.min_outcome": {"tf": 1}, "icepool.BaseDie.max_outcome": {"tf": 1}, "icepool.BaseDie.nearest_le": {"tf": 1}, "icepool.BaseDie.nearest_ge": {"tf": 1}, "icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.reroll_until": {"tf": 1}, "icepool.BaseDie.truncate": {"tf": 1}, "icepool.BaseDie.clip": {"tf": 1}, "icepool.BaseDie.cond": {"tf": 1}, "icepool.BaseDie.set_outcomes": {"tf": 1}, "icepool.BaseDie.trim": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.BaseDie.explode": {"tf": 1}, "icepool.BaseDie.lowest": {"tf": 1}, "icepool.BaseDie.highest": {"tf": 1}, "icepool.BaseDie.repeat_and_sum": {"tf": 1}, "icepool.BaseDie.pool": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 1}, "icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_highest_single": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}, "icepool.BaseDie.keep_lowest_single": {"tf": 1}, "icepool.BaseDie.abs": {"tf": 1}, "icepool.BaseDie.zero": {"tf": 1}, "icepool.BaseDie.zero_outcome": {"tf": 1}, "icepool.BaseDie.bool": {"tf": 1}, "icepool.BaseDie.sign": {"tf": 1}, "icepool.BaseDie.cmp": {"tf": 1}, "icepool.BaseDie.sample": {"tf": 1}, "icepool.BaseDie.key_tuple": {"tf": 1}, "icepool.BaseDie.hash": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1}}, "df": 62}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"icepool.BasePool": {"tf": 1}, "icepool.BasePool.outcomes": {"tf": 1}, "icepool.BasePool.eval": {"tf": 1}, "icepool.BasePool.sum": {"tf": 1}}, "df": 4}}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"icepool.BaseDie.bool": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"icepool.EvalPool.bind_dice": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"icepool.coin": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"icepool.BaseDie.cond": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.VectorDie.covariance": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.VectorDie.correlation": {"tf": 1}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.dice_with_common_ndim": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.DicePool.count_dice": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.DicePool.has_counted_dice": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"icepool.BaseDie.cweights": {"tf": 1}, "icepool.from_cweights": {"tf": 1}}, "df": 2}}}}}}}, "d": {"docs": {}, "df": 0, "f": {"docs": {"icepool.BaseDie.cdf": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "m": {"docs": {"icepool.BaseDie.cvm_stat": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"icepool.BaseDie.clip": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"icepool.BaseDie.cmp": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"icepool.ScalarDie.cartesian_product": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"icepool.BaseDie.ndim": {"tf": 1}, "icepool.EmptyDie.ndim": {"tf": 1}, "icepool.ScalarDie.ndim": {"tf": 1}, "icepool.VectorDie.ndim": {"tf": 1}, "icepool.dice_with_common_ndim": {"tf": 1}, "icepool.EvalPool.ndim": {"tf": 1}}, "df": 6}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"icepool.BaseDie.num_outcomes": {"tf": 1}, "icepool.DicePool.num_dice": {"tf": 1}}, "df": 2}}, "e": {"docs": {"icepool.BaseDie.weight_ne": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"icepool.BaseDie.nearest_le": {"tf": 1}, "icepool.BaseDie.nearest_ge": {"tf": 1}}, "df": 2}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}, "icepool.SumPool.next_state": {"tf": 1}, "icepool.FindBestSet.next_state": {"tf": 1}, "icepool.FindBestRun.next_state": {"tf": 1}}, "df": 5}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"icepool.BaseDie.markdown": {"tf": 1}, "icepool.EmptyDie.markdown": {"tf": 1}, "icepool.ScalarDie.markdown": {"tf": 1}, "icepool.VectorDie.markdown": {"tf": 1}}, "df": 4}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.VectorDie.marginal": {"tf": 1}}, "df": 1}}}}}}, "x": {"docs": {"icepool.BaseDie.max_outcome": {"tf": 1}, "icepool.max_outcome": {"tf": 1}, "icepool.DicePool.truncate_max": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.mode": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.BaseDie.modal_weight": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.ScalarDie.standardized_moment": {"tf": 1}, "icepool.VectorDie.standardized_moment": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"icepool.BaseDie.min_outcome": {"tf": 1}, "icepool.min_outcome": {"tf": 1}, "icepool.DicePool.truncate_min": {"tf": 1}}, "df": 3}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"icepool.ScalarDie.median_left": {"tf": 1}, "icepool.ScalarDie.median_right": {"tf": 1}, "icepool.ScalarDie.median": {"tf": 1}, "icepool.VectorDie.median_left": {"tf": 1}, "icepool.VectorDie.median_right": {"tf": 1}, "icepool.VectorDie.median": {"tf": 1}}, "df": 6}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"icepool.ScalarDie.mean": {"tf": 1}, "icepool.VectorDie.mean": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.min_outcome": {"tf": 1}, "icepool.BaseDie.max_outcome": {"tf": 1}, "icepool.BaseDie.zero_outcome": {"tf": 1}, "icepool.max_outcome": {"tf": 1}, "icepool.min_outcome": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.FindBestRun.final_outcome": {"tf": 1}}, "df": 7, "s": {"docs": {"icepool.BaseDie.outcomes": {"tf": 1}, "icepool.BaseDie.num_outcomes": {"tf": 1}, "icepool.BaseDie.set_outcomes": {"tf": 1}, "icepool.BasePool.outcomes": {"tf": 1}, "icepool.DicePool.outcomes": {"tf": 1}}, "df": 5}}}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"icepool.BaseDie.is_empty": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {"icepool.EmptyDie": {"tf": 1}, "icepool.EmptyDie.__init__": {"tf": 1}, "icepool.EmptyDie.ndim": {"tf": 1}, "icepool.EmptyDie.markdown": {"tf": 1}}, "df": 4}}}}}}}, "q": {"docs": {"icepool.BaseDie.weight_eq": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"icepool.BaseDie.equals": {"tf": 1}}, "df": 1}}}}}, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.explode": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"icepool.ScalarDie.excess_kurtosis": {"tf": 1}, "icepool.VectorDie.excess_kurtosis": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"icepool.ScalarDie.if_else": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.BasePool.eval": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"icepool.EvalPool": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1}, "icepool.EvalPool.ndim": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}, "icepool.EvalPool.bind_dice": {"tf": 1}}, "df": 7}}}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"icepool.BaseDie.total_weight": {"tf": 1}, "icepool.BaseDie.weight_eq": {"tf": 1}, "icepool.BaseDie.weight_ne": {"tf": 1}, "icepool.BaseDie.weight_le": {"tf": 1}, "icepool.BaseDie.weight_lt": {"tf": 1}, "icepool.BaseDie.weight_ge": {"tf": 1}, "icepool.BaseDie.weight_gt": {"tf": 1}, "icepool.BaseDie.modal_weight": {"tf": 1}}, "df": 8, "s": {"docs": {"icepool.BaseDie.weights": {"tf": 1}, "icepool.BaseDie.has_zero_weights": {"tf": 1}, "icepool.BaseDie.scale_weights": {"tf": 1}}, "df": 3}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"icepool.dice_with_common_ndim": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.WrapFuncEval": {"tf": 1}, "icepool.WrapFuncEval.__init__": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"icepool.BaseDie.has_zero_weights": {"tf": 1}, "icepool.DicePool.has_counted_dice": {"tf": 1}}, "df": 2, "h": {"docs": {"icepool.BaseDie.hash": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"icepool.BaseDie.highest": {"tf": 1}, "icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_highest_single": {"tf": 1}, "icepool.highest": {"tf": 1}}, "df": 4}}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"icepool.BaseDie.has_zero_weights": {"tf": 1}, "icepool.BaseDie.zero": {"tf": 1}, "icepool.BaseDie.zero_outcome": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.BaseDie.total_weight": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.truncate": {"tf": 1}, "icepool.DicePool.truncate_min": {"tf": 1}, "icepool.DicePool.truncate_max": {"tf": 1}}, "df": 3}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {"icepool.BaseDie.trim": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.key_tuple": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "f": {"docs": {"icepool.BaseDie.pmf": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"icepool.BaseDie.probability": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"icepool.ScalarDie.cartesian_product": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"icepool.BaseDie.pool": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.standard_pool": {"tf": 1}, "icepool.sum_pool": {"tf": 1}}, "df": 4}}}, "p": {"docs": {}, "df": 0, "f": {"docs": {"icepool.ScalarDie.ppf_left": {"tf": 1}, "icepool.ScalarDie.ppf_right": {"tf": 1}, "icepool.ScalarDie.ppf": {"tf": 1}, "icepool.VectorDie.ppf_left": {"tf": 1}, "icepool.VectorDie.ppf_right": {"tf": 1}, "icepool.VectorDie.ppf": {"tf": 1}}, "df": 6}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.weight_le": {"tf": 1}, "icepool.BaseDie.nearest_le": {"tf": 1}}, "df": 2, "f": {"docs": {}, "df": 0, "t": {"docs": {"icepool.ScalarDie.median_left": {"tf": 1}, "icepool.ScalarDie.ppf_left": {"tf": 1}, "icepool.VectorDie.median_left": {"tf": 1}, "icepool.VectorDie.ppf_left": {"tf": 1}}, "df": 4}}}, "t": {"docs": {"icepool.BaseDie.weight_lt": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"icepool.BaseDie.lowest": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}, "icepool.BaseDie.keep_lowest_single": {"tf": 1}, "icepool.lowest": {"tf": 1}}, "df": 4}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.weight_ge": {"tf": 1}, "icepool.BaseDie.nearest_ge": {"tf": 1}}, "df": 2}, "t": {"docs": {"icepool.BaseDie.weight_gt": {"tf": 1}}, "df": 1}}, "k": {"docs": {}, "df": 0, "s": {"docs": {"icepool.BaseDie.ks_stat": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"icepool.BaseDie.keep": {"tf": 1}, "icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_highest_single": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}, "icepool.BaseDie.keep_lowest_single": {"tf": 1}}, "df": 5}}, "y": {"docs": {"icepool.BaseDie.key_tuple": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"icepool.ScalarDie.excess_kurtosis": {"tf": 1}, "icepool.VectorDie.excess_kurtosis": {"tf": 1}}, "df": 2}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.reduce": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.reroll_until": {"tf": 1}, "icepool.Reroll": {"tf": 1}}, "df": 3}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"icepool.BaseDie.repeat_and_sum": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"icepool.ScalarDie.median_right": {"tf": 1}, "icepool.ScalarDie.ppf_right": {"tf": 1}, "icepool.VectorDie.median_right": {"tf": 1}, "icepool.VectorDie.ppf_right": {"tf": 1}}, "df": 4}}}}, "v": {"docs": {"icepool.from_rv": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"icepool.align_range": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"icepool.BaseDie.reroll_until": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"icepool.BaseDie.repeat_and_sum": {"tf": 1}}, "df": 1}, "y": {"docs": {"icepool.VectorDie.any": {"tf": 1}}, "df": 1}}, "b": {"docs": {}, "df": 0, "s": {"docs": {"icepool.BaseDie.abs": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"icepool.VectorDie.all": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"icepool.align": {"tf": 1}, "icepool.align_range": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.apply": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.ScalarDie.variance": {"tf": 1}, "icepool.VectorDie.variance": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {"icepool.VectorDie": {"tf": 1}, "icepool.VectorDie.__init__": {"tf": 1}, "icepool.VectorDie.ndim": {"tf": 1}, "icepool.VectorDie.marginal": {"tf": 1}, "icepool.VectorDie.dim": {"tf": 1}, "icepool.VectorDie.all": {"tf": 1}, "icepool.VectorDie.any": {"tf": 1}, "icepool.VectorDie.median_left": {"tf": 1}, "icepool.VectorDie.median_right": {"tf": 1}, "icepool.VectorDie.median": {"tf": 1}, "icepool.VectorDie.ppf_left": {"tf": 1}, "icepool.VectorDie.ppf_right": {"tf": 1}, "icepool.VectorDie.ppf": {"tf": 1}, "icepool.VectorDie.mean": {"tf": 1}, "icepool.VectorDie.variance": {"tf": 1}, "icepool.VectorDie.standard_deviation": {"tf": 1}, "icepool.VectorDie.sd": {"tf": 1}, "icepool.VectorDie.standardized_moment": {"tf": 1}, "icepool.VectorDie.skewness": {"tf": 1}, "icepool.VectorDie.excess_kurtosis": {"tf": 1}, "icepool.VectorDie.covariance": {"tf": 1}, "icepool.VectorDie.correlation": {"tf": 1}, "icepool.VectorDie.markdown": {"tf": 1}}, "df": 23}}}}}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"icepool.from_cweights": {"tf": 1}, "icepool.from_sweights": {"tf": 1}, "icepool.from_rv": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.FindBestRun.final_outcome": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"icepool.FindBestSet": {"tf": 1}, "icepool.FindBestSet.__init__": {"tf": 1}, "icepool.FindBestSet.next_state": {"tf": 1}, "icepool.FindBestSet.direction": {"tf": 1}}, "df": 4}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"icepool.FindBestRun": {"tf": 1}, "icepool.FindBestRun.__init__": {"tf": 1}, "icepool.FindBestRun.next_state": {"tf": 1}, "icepool.FindBestRun.final_outcome": {"tf": 1}, "icepool.FindBestRun.direction": {"tf": 1}}, "df": 5}}}}}}}}}}}}}, "annotation": {"root": {"docs": {}, "df": 0}}, "default_value": {"root": {"docs": {"icepool.Reroll": {"tf": 1.7320508075688772}, "icepool.sum_pool": {"tf": 1.7320508075688772}}, "df": 2}}, "signature": {"root": {"0": {"docs": {"icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}}, "df": 2}, "1": {"0": {"0": {"docs": {"icepool.ScalarDie.ppf_left": {"tf": 1}, "icepool.ScalarDie.ppf_right": {"tf": 1}, "icepool.ScalarDie.ppf": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0}, "docs": {"icepool.BaseDie.sub": {"tf": 1}, "icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}}, "df": 3}, "docs": {"icepool.Die": {"tf": 1.4142135623730951}, "icepool.standard": {"tf": 1.4142135623730951}, "icepool.d": {"tf": 1.4142135623730951}, "icepool.bernoulli": {"tf": 1.4142135623730951}, "icepool.coin": {"tf": 1.4142135623730951}, "icepool.BaseDie.__init__": {"tf": 1.4142135623730951}, "icepool.BaseDie.ndim": {"tf": 1.4142135623730951}, "icepool.BaseDie.markdown": {"tf": 1.4142135623730951}, "icepool.BaseDie.outcomes": {"tf": 1.4142135623730951}, "icepool.BaseDie.num_outcomes": {"tf": 1.4142135623730951}, "icepool.BaseDie.is_empty": {"tf": 1.4142135623730951}, "icepool.BaseDie.weights": {"tf": 1.4142135623730951}, "icepool.BaseDie.has_zero_weights": {"tf": 1.4142135623730951}, "icepool.BaseDie.items": {"tf": 1.4142135623730951}, "icepool.BaseDie.denominator": {"tf": 1.4142135623730951}, "icepool.BaseDie.total_weight": {"tf": 1.4142135623730951}, "icepool.BaseDie.pmf": {"tf": 1.4142135623730951}, "icepool.BaseDie.cweights": {"tf": 1.4142135623730951}, "icepool.BaseDie.sweights": {"tf": 1.4142135623730951}, "icepool.BaseDie.cdf": {"tf": 1.4142135623730951}, "icepool.BaseDie.sf": {"tf": 1.4142135623730951}, "icepool.BaseDie.weight_eq": {"tf": 1.4142135623730951}, "icepool.BaseDie.weight_ne": {"tf": 1.4142135623730951}, "icepool.BaseDie.weight_le": {"tf": 1.4142135623730951}, "icepool.BaseDie.weight_lt": {"tf": 1.4142135623730951}, "icepool.BaseDie.weight_ge": {"tf": 1.4142135623730951}, "icepool.BaseDie.weight_gt": {"tf": 1.4142135623730951}, "icepool.BaseDie.probability": {"tf": 1.4142135623730951}, "icepool.BaseDie.mode": {"tf": 1.4142135623730951}, "icepool.BaseDie.modal_weight": {"tf": 1.4142135623730951}, "icepool.BaseDie.ks_stat": {"tf": 1.4142135623730951}, "icepool.BaseDie.cvm_stat": {"tf": 1.4142135623730951}, "icepool.BaseDie.reduce": {"tf": 1.4142135623730951}, "icepool.BaseDie.scale_weights": {"tf": 1.4142135623730951}, "icepool.BaseDie.min_outcome": {"tf": 1.4142135623730951}, "icepool.BaseDie.max_outcome": {"tf": 1.4142135623730951}, "icepool.BaseDie.nearest_le": {"tf": 1.4142135623730951}, "icepool.BaseDie.nearest_ge": {"tf": 1.4142135623730951}, "icepool.BaseDie.reroll": {"tf": 1.7320508075688772}, "icepool.BaseDie.reroll_until": {"tf": 1.7320508075688772}, "icepool.BaseDie.truncate": {"tf": 1.4142135623730951}, "icepool.BaseDie.clip": {"tf": 1.4142135623730951}, "icepool.BaseDie.cond": {"tf": 1.7320508075688772}, "icepool.BaseDie.set_outcomes": {"tf": 1.4142135623730951}, "icepool.BaseDie.trim": {"tf": 1.4142135623730951}, "icepool.BaseDie.sub": {"tf": 2}, "icepool.BaseDie.explode": {"tf": 1.7320508075688772}, "icepool.BaseDie.lowest": {"tf": 1.4142135623730951}, "icepool.BaseDie.highest": {"tf": 1.4142135623730951}, "icepool.BaseDie.repeat_and_sum": {"tf": 1.4142135623730951}, "icepool.BaseDie.pool": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep": {"tf": 1.7320508075688772}, "icepool.BaseDie.keep_highest": {"tf": 1.7320508075688772}, "icepool.BaseDie.keep_highest_single": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep_lowest": {"tf": 1.7320508075688772}, "icepool.BaseDie.keep_lowest_single": {"tf": 1.4142135623730951}, "icepool.BaseDie.abs": {"tf": 1.4142135623730951}, "icepool.BaseDie.zero": {"tf": 1.4142135623730951}, "icepool.BaseDie.zero_outcome": {"tf": 1.4142135623730951}, "icepool.BaseDie.bool": {"tf": 1.4142135623730951}, "icepool.BaseDie.sign": {"tf": 1.4142135623730951}, "icepool.BaseDie.cmp": {"tf": 1.4142135623730951}, "icepool.BaseDie.sample": {"tf": 1.4142135623730951}, "icepool.BaseDie.key_tuple": {"tf": 1.4142135623730951}, "icepool.BaseDie.hash": {"tf": 1.4142135623730951}, "icepool.BaseDie.equals": {"tf": 1.7320508075688772}, "icepool.EmptyDie.__init__": {"tf": 1.4142135623730951}, "icepool.EmptyDie.ndim": {"tf": 1.4142135623730951}, "icepool.EmptyDie.markdown": {"tf": 1.4142135623730951}, "icepool.ScalarDie.__init__": {"tf": 1.4142135623730951}, "icepool.ScalarDie.ndim": {"tf": 1.4142135623730951}, "icepool.ScalarDie.d": {"tf": 1.7320508075688772}, "icepool.ScalarDie.if_else": {"tf": 1.7320508075688772}, "icepool.ScalarDie.median_left": {"tf": 1.4142135623730951}, "icepool.ScalarDie.median_right": {"tf": 1.4142135623730951}, "icepool.ScalarDie.median": {"tf": 1.4142135623730951}, "icepool.ScalarDie.ppf_left": {"tf": 1.4142135623730951}, "icepool.ScalarDie.ppf_right": {"tf": 1.4142135623730951}, "icepool.ScalarDie.ppf": {"tf": 1.4142135623730951}, "icepool.ScalarDie.mean": {"tf": 1.4142135623730951}, "icepool.ScalarDie.variance": {"tf": 1.4142135623730951}, "icepool.ScalarDie.standard_deviation": {"tf": 1.4142135623730951}, "icepool.ScalarDie.sd": {"tf": 1.4142135623730951}, "icepool.ScalarDie.standardized_moment": {"tf": 1.4142135623730951}, "icepool.ScalarDie.skewness": {"tf": 1.4142135623730951}, "icepool.ScalarDie.excess_kurtosis": {"tf": 1.4142135623730951}, "icepool.ScalarDie.cartesian_product": {"tf": 1.4142135623730951}, "icepool.ScalarDie.markdown": {"tf": 1.4142135623730951}, "icepool.VectorDie.__init__": {"tf": 1.4142135623730951}, "icepool.VectorDie.ndim": {"tf": 1.4142135623730951}, "icepool.VectorDie.marginal": {"tf": 1.4142135623730951}, "icepool.VectorDie.all": {"tf": 1.4142135623730951}, "icepool.VectorDie.any": {"tf": 1.4142135623730951}, "icepool.VectorDie.median_left": {"tf": 1.4142135623730951}, "icepool.VectorDie.median_right": {"tf": 1.4142135623730951}, "icepool.VectorDie.median": {"tf": 1.4142135623730951}, "icepool.VectorDie.ppf_left": {"tf": 1.4142135623730951}, "icepool.VectorDie.ppf_right": {"tf": 1.4142135623730951}, "icepool.VectorDie.ppf": {"tf": 1.4142135623730951}, "icepool.VectorDie.mean": {"tf": 1.4142135623730951}, "icepool.VectorDie.variance": {"tf": 1.4142135623730951}, "icepool.VectorDie.standard_deviation": {"tf": 1.4142135623730951}, "icepool.VectorDie.sd": {"tf": 1.4142135623730951}, "icepool.VectorDie.standardized_moment": {"tf": 1.4142135623730951}, "icepool.VectorDie.skewness": {"tf": 1.4142135623730951}, "icepool.VectorDie.excess_kurtosis": {"tf": 1.4142135623730951}, "icepool.VectorDie.covariance": {"tf": 1.4142135623730951}, "icepool.VectorDie.correlation": {"tf": 1.4142135623730951}, "icepool.VectorDie.markdown": {"tf": 1.4142135623730951}, "icepool.from_cweights": {"tf": 1.7320508075688772}, "icepool.from_sweights": {"tf": 1.7320508075688772}, "icepool.from_rv": {"tf": 1.4142135623730951}, "icepool.align": {"tf": 1.4142135623730951}, "icepool.align_range": {"tf": 1.4142135623730951}, "icepool.lowest": {"tf": 1.4142135623730951}, "icepool.highest": {"tf": 1.4142135623730951}, "icepool.max_outcome": {"tf": 1.4142135623730951}, "icepool.min_outcome": {"tf": 1.4142135623730951}, "icepool.apply": {"tf": 1.4142135623730951}, "icepool.dice_with_common_ndim": {"tf": 1.4142135623730951}, "icepool.BasePool.outcomes": {"tf": 1.4142135623730951}, "icepool.BasePool.eval": {"tf": 1.7320508075688772}, "icepool.BasePool.sum": {"tf": 1.4142135623730951}, "icepool.Pool": {"tf": 1.7320508075688772}, "icepool.standard_pool": {"tf": 1.4142135623730951}, "icepool.DicePool.__init__": {"tf": 1.7320508075688772}, "icepool.DicePool.die": {"tf": 1.4142135623730951}, "icepool.DicePool.outcomes": {"tf": 1.4142135623730951}, "icepool.DicePool.count_dice": {"tf": 1.4142135623730951}, "icepool.DicePool.num_dice": {"tf": 1.4142135623730951}, "icepool.DicePool.set_count_dice": {"tf": 1.4142135623730951}, "icepool.DicePool.truncate_min": {"tf": 1.4142135623730951}, "icepool.DicePool.truncate_max": {"tf": 1.4142135623730951}, "icepool.DicePool.has_counted_dice": {"tf": 1.4142135623730951}, "icepool.DicePool.sample": {"tf": 1.4142135623730951}, "icepool.EvalPool.next_state": {"tf": 1.4142135623730951}, "icepool.EvalPool.final_outcome": {"tf": 1.4142135623730951}, "icepool.EvalPool.direction": {"tf": 1.4142135623730951}, "icepool.EvalPool.ndim": {"tf": 1.4142135623730951}, "icepool.EvalPool.eval": {"tf": 1.4142135623730951}, "icepool.EvalPool.bind_dice": {"tf": 1.4142135623730951}, "icepool.WrapFuncEval.__init__": {"tf": 1.7320508075688772}, "icepool.WrapFuncEval.next_state": {"tf": 1.4142135623730951}, "icepool.SumPool.__init__": {"tf": 1.4142135623730951}, "icepool.SumPool.next_state": {"tf": 1.4142135623730951}, "icepool.SumPool.direction": {"tf": 1.4142135623730951}, "icepool.FindBestSet.__init__": {"tf": 1.4142135623730951}, "icepool.FindBestSet.next_state": {"tf": 1.4142135623730951}, "icepool.FindBestSet.direction": {"tf": 1.4142135623730951}, "icepool.FindBestRun.__init__": {"tf": 1.4142135623730951}, "icepool.FindBestRun.next_state": {"tf": 1.4142135623730951}, "icepool.FindBestRun.final_outcome": {"tf": 1.4142135623730951}, "icepool.FindBestRun.direction": {"tf": 1.4142135623730951}}, "df": 153, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {"icepool.d": {"tf": 1}}, "df": 1, "s": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie.pool": {"tf": 1}, "icepool.dice_with_common_ndim": {"tf": 1}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"icepool.DicePool.truncate_min": {"tf": 1}, "icepool.DicePool.truncate_max": {"tf": 1}}, "df": 2}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie.markdown": {"tf": 1}, "icepool.EmptyDie.markdown": {"tf": 1}, "icepool.ScalarDie.markdown": {"tf": 1}, "icepool.VectorDie.markdown": {"tf": 1}}, "df": 5}}}}}}}, "n": {"docs": {"icepool.bernoulli": {"tf": 1}, "icepool.coin": {"tf": 1}, "icepool.ScalarDie.ppf_left": {"tf": 1}, "icepool.ScalarDie.ppf_right": {"tf": 1}, "icepool.ScalarDie.ppf": {"tf": 1}}, "df": 5, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1.7320508075688772}, "icepool.BaseDie.reroll": {"tf": 1.4142135623730951}, "icepool.BaseDie.reroll_until": {"tf": 1}, "icepool.BaseDie.truncate": {"tf": 1.4142135623730951}, "icepool.BaseDie.clip": {"tf": 1.4142135623730951}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.BaseDie.explode": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep": {"tf": 2}, "icepool.BaseDie.keep_highest": {"tf": 1.7320508075688772}, "icepool.BaseDie.keep_highest_single": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1.7320508075688772}, "icepool.BaseDie.keep_lowest_single": {"tf": 1}, "icepool.ScalarDie.d": {"tf": 1}, "icepool.ScalarDie.if_else": {"tf": 1}, "icepool.from_cweights": {"tf": 1}, "icepool.from_sweights": {"tf": 1}, "icepool.align": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.dice_with_common_ndim": {"tf": 1}, "icepool.Pool": {"tf": 2}, "icepool.standard_pool": {"tf": 1}}, "df": 21}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.ScalarDie.d": {"tf": 1}, "icepool.ScalarDie.if_else": {"tf": 1}, "icepool.VectorDie.__init__": {"tf": 1}, "icepool.from_cweights": {"tf": 1}, "icepool.from_sweights": {"tf": 1}, "icepool.align": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.dice_with_common_ndim": {"tf": 1}}, "df": 10}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"icepool.standard": {"tf": 1}, "icepool.BaseDie.repeat_and_sum": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 1}, "icepool.BaseDie.keep_highest": {"tf": 1.7320508075688772}, "icepool.BaseDie.keep_highest_single": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1.7320508075688772}, "icepool.BaseDie.keep_lowest_single": {"tf": 1}, "icepool.Pool": {"tf": 1}}, "df": 8}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie.truncate": {"tf": 1}, "icepool.BaseDie.clip": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 1}, "icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.DicePool.__init__": {"tf": 1}}, "df": 8}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.ScalarDie.if_else": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.reroll_until": {"tf": 1}, "icepool.BaseDie.truncate": {"tf": 1}, "icepool.BaseDie.clip": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.BaseDie.explode": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 1}, "icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.DicePool.__init__": {"tf": 1}}, "df": 11}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie.weight_eq": {"tf": 1}, "icepool.BaseDie.weight_ne": {"tf": 1}, "icepool.BaseDie.weight_le": {"tf": 1}, "icepool.BaseDie.weight_lt": {"tf": 1}, "icepool.BaseDie.weight_ge": {"tf": 1}, "icepool.BaseDie.weight_gt": {"tf": 1}, "icepool.BaseDie.probability": {"tf": 1}, "icepool.BaseDie.nearest_le": {"tf": 1}, "icepool.BaseDie.nearest_ge": {"tf": 1}, "icepool.BaseDie.truncate": {"tf": 1.4142135623730951}, "icepool.BaseDie.clip": {"tf": 1.4142135623730951}, "icepool.BaseDie.cond": {"tf": 1.4142135623730951}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}, "icepool.SumPool.next_state": {"tf": 1}, "icepool.FindBestSet.next_state": {"tf": 1}, "icepool.FindBestRun.next_state": {"tf": 1}}, "df": 18, "s": {"docs": {"icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.reroll_until": {"tf": 1}, "icepool.BaseDie.set_outcomes": {"tf": 1}, "icepool.BaseDie.explode": {"tf": 1}, "icepool.from_cweights": {"tf": 1}, "icepool.from_sweights": {"tf": 1}, "icepool.from_rv": {"tf": 1}}, "df": 7}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.BaseDie.ks_stat": {"tf": 1}, "icepool.BaseDie.cvm_stat": {"tf": 1}, "icepool.BaseDie.cmp": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1}, "icepool.ScalarDie.d": {"tf": 1}}, "df": 5}}}}, "r": {"docs": {"icepool.BasePool.eval": {"tf": 1}}, "df": 1}}, "d": {"docs": {"icepool.bernoulli": {"tf": 1}, "icepool.coin": {"tf": 1}, "icepool.ScalarDie.ppf_left": {"tf": 1}, "icepool.ScalarDie.ppf_right": {"tf": 1}, "icepool.ScalarDie.ppf": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.ScalarDie.if_else": {"tf": 1}, "icepool.from_rv": {"tf": 1}}, "df": 4}}}}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.reroll_until": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.BaseDie.explode": {"tf": 1}}, "df": 4}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.min_outcome": {"tf": 1}, "icepool.BaseDie.max_outcome": {"tf": 1}, "icepool.BaseDie.lowest": {"tf": 1}, "icepool.BaseDie.highest": {"tf": 1}, "icepool.BaseDie.repeat_and_sum": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_highest_single": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}, "icepool.BaseDie.keep_lowest_single": {"tf": 1}, "icepool.ScalarDie.cartesian_product": {"tf": 1}, "icepool.align": {"tf": 1}, "icepool.align_range": {"tf": 1}, "icepool.lowest": {"tf": 1}, "icepool.highest": {"tf": 1}, "icepool.max_outcome": {"tf": 1}, "icepool.min_outcome": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.Pool": {"tf": 1.4142135623730951}, "icepool.standard_pool": {"tf": 1}, "icepool.DicePool.__init__": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.EvalPool.bind_dice": {"tf": 1}}, "df": 23}}, "e": {"docs": {"icepool.ScalarDie.if_else": {"tf": 1.4142135623730951}, "icepool.Pool": {"tf": 1}, "icepool.standard_pool": {"tf": 1}, "icepool.DicePool.__init__": {"tf": 1}}, "df": 4}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"icepool.ScalarDie.__init__": {"tf": 1}, "icepool.VectorDie.__init__": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "m": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.ScalarDie.if_else": {"tf": 1}}, "df": 3}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.standard": {"tf": 1}}, "df": 1}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.standard_pool": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"icepool.BaseDie.ndim": {"tf": 1}, "icepool.BaseDie.markdown": {"tf": 1}, "icepool.BaseDie.outcomes": {"tf": 1}, "icepool.BaseDie.num_outcomes": {"tf": 1}, "icepool.BaseDie.is_empty": {"tf": 1}, "icepool.BaseDie.weights": {"tf": 1}, "icepool.BaseDie.has_zero_weights": {"tf": 1}, "icepool.BaseDie.items": {"tf": 1}, "icepool.BaseDie.denominator": {"tf": 1}, "icepool.BaseDie.total_weight": {"tf": 1}, "icepool.BaseDie.pmf": {"tf": 1}, "icepool.BaseDie.cweights": {"tf": 1}, "icepool.BaseDie.sweights": {"tf": 1}, "icepool.BaseDie.cdf": {"tf": 1}, "icepool.BaseDie.sf": {"tf": 1}, "icepool.BaseDie.weight_eq": {"tf": 1}, "icepool.BaseDie.weight_ne": {"tf": 1}, "icepool.BaseDie.weight_le": {"tf": 1}, "icepool.BaseDie.weight_lt": {"tf": 1}, "icepool.BaseDie.weight_ge": {"tf": 1}, "icepool.BaseDie.weight_gt": {"tf": 1}, "icepool.BaseDie.probability": {"tf": 1}, "icepool.BaseDie.mode": {"tf": 1}, "icepool.BaseDie.modal_weight": {"tf": 1}, "icepool.BaseDie.ks_stat": {"tf": 1}, "icepool.BaseDie.cvm_stat": {"tf": 1}, "icepool.BaseDie.reduce": {"tf": 1}, "icepool.BaseDie.scale_weights": {"tf": 1}, "icepool.BaseDie.nearest_le": {"tf": 1}, "icepool.BaseDie.nearest_ge": {"tf": 1}, "icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.reroll_until": {"tf": 1}, "icepool.BaseDie.truncate": {"tf": 1}, "icepool.BaseDie.clip": {"tf": 1}, "icepool.BaseDie.cond": {"tf": 1}, "icepool.BaseDie.set_outcomes": {"tf": 1}, "icepool.BaseDie.trim": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.BaseDie.explode": {"tf": 1}, "icepool.BaseDie.repeat_and_sum": {"tf": 1}, "icepool.BaseDie.pool": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 1}, "icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_highest_single": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}, "icepool.BaseDie.keep_lowest_single": {"tf": 1}, "icepool.BaseDie.abs": {"tf": 1}, "icepool.BaseDie.zero": {"tf": 1}, "icepool.BaseDie.zero_outcome": {"tf": 1}, "icepool.BaseDie.bool": {"tf": 1}, "icepool.BaseDie.sign": {"tf": 1}, "icepool.BaseDie.cmp": {"tf": 1}, "icepool.BaseDie.sample": {"tf": 1}, "icepool.BaseDie.key_tuple": {"tf": 1}, "icepool.BaseDie.hash": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1}, "icepool.EmptyDie.__init__": {"tf": 1}, "icepool.EmptyDie.ndim": {"tf": 1}, "icepool.EmptyDie.markdown": {"tf": 1}, "icepool.ScalarDie.__init__": {"tf": 1}, "icepool.ScalarDie.ndim": {"tf": 1}, "icepool.ScalarDie.d": {"tf": 1}, "icepool.ScalarDie.if_else": {"tf": 1}, "icepool.ScalarDie.median_left": {"tf": 1}, "icepool.ScalarDie.median_right": {"tf": 1}, "icepool.ScalarDie.median": {"tf": 1}, "icepool.ScalarDie.ppf_left": {"tf": 1}, "icepool.ScalarDie.ppf_right": {"tf": 1}, "icepool.ScalarDie.ppf": {"tf": 1}, "icepool.ScalarDie.mean": {"tf": 1}, "icepool.ScalarDie.variance": {"tf": 1}, "icepool.ScalarDie.standard_deviation": {"tf": 1}, "icepool.ScalarDie.sd": {"tf": 1}, "icepool.ScalarDie.standardized_moment": {"tf": 1}, "icepool.ScalarDie.skewness": {"tf": 1}, "icepool.ScalarDie.excess_kurtosis": {"tf": 1}, "icepool.ScalarDie.markdown": {"tf": 1}, "icepool.VectorDie.__init__": {"tf": 1}, "icepool.VectorDie.ndim": {"tf": 1}, "icepool.VectorDie.marginal": {"tf": 1}, "icepool.VectorDie.all": {"tf": 1}, "icepool.VectorDie.any": {"tf": 1}, "icepool.VectorDie.median_left": {"tf": 1}, "icepool.VectorDie.median_right": {"tf": 1}, "icepool.VectorDie.median": {"tf": 1}, "icepool.VectorDie.ppf_left": {"tf": 1}, "icepool.VectorDie.ppf_right": {"tf": 1}, "icepool.VectorDie.ppf": {"tf": 1}, "icepool.VectorDie.mean": {"tf": 1}, "icepool.VectorDie.variance": {"tf": 1}, "icepool.VectorDie.standard_deviation": {"tf": 1}, "icepool.VectorDie.sd": {"tf": 1}, "icepool.VectorDie.standardized_moment": {"tf": 1}, "icepool.VectorDie.skewness": {"tf": 1}, "icepool.VectorDie.excess_kurtosis": {"tf": 1}, "icepool.VectorDie.covariance": {"tf": 1}, "icepool.VectorDie.correlation": {"tf": 1}, "icepool.VectorDie.markdown": {"tf": 1}, "icepool.BasePool.outcomes": {"tf": 1}, "icepool.BasePool.eval": {"tf": 1}, "icepool.BasePool.sum": {"tf": 1}, "icepool.DicePool.__init__": {"tf": 1}, "icepool.DicePool.die": {"tf": 1}, "icepool.DicePool.outcomes": {"tf": 1}, "icepool.DicePool.count_dice": {"tf": 1}, "icepool.DicePool.num_dice": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.DicePool.truncate_min": {"tf": 1}, "icepool.DicePool.truncate_max": {"tf": 1}, "icepool.DicePool.has_counted_dice": {"tf": 1}, "icepool.DicePool.sample": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1}, "icepool.EvalPool.ndim": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}, "icepool.EvalPool.bind_dice": {"tf": 1}, "icepool.WrapFuncEval.__init__": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}, "icepool.SumPool.next_state": {"tf": 1}, "icepool.SumPool.direction": {"tf": 1}, "icepool.FindBestSet.next_state": {"tf": 1}, "icepool.FindBestSet.direction": {"tf": 1}, "icepool.FindBestRun.next_state": {"tf": 1}, "icepool.FindBestRun.final_outcome": {"tf": 1}, "icepool.FindBestRun.direction": {"tf": 1}}, "df": 126}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"icepool.VectorDie.marginal": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.scale_weights": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"icepool.from_sweights": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"icepool.EvalPool.next_state": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}, "icepool.SumPool.next_state": {"tf": 1}, "icepool.FindBestSet.next_state": {"tf": 1}, "icepool.FindBestRun.next_state": {"tf": 1}, "icepool.FindBestRun.final_outcome": {"tf": 1}}, "df": 7}}}}}, "i": {"docs": {"icepool.VectorDie.median_left": {"tf": 1}, "icepool.VectorDie.median_right": {"tf": 1}, "icepool.VectorDie.median": {"tf": 1}, "icepool.VectorDie.ppf_left": {"tf": 1}, "icepool.VectorDie.ppf_right": {"tf": 1}, "icepool.VectorDie.ppf": {"tf": 1}, "icepool.VectorDie.mean": {"tf": 1}, "icepool.VectorDie.variance": {"tf": 1}, "icepool.VectorDie.standard_deviation": {"tf": 1}, "icepool.VectorDie.sd": {"tf": 1}, "icepool.VectorDie.standardized_moment": {"tf": 1}, "icepool.VectorDie.skewness": {"tf": 1}, "icepool.VectorDie.excess_kurtosis": {"tf": 1}, "icepool.VectorDie.covariance": {"tf": 1}, "icepool.VectorDie.correlation": {"tf": 1}}, "df": 15, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.markdown": {"tf": 1}, "icepool.EmptyDie.markdown": {"tf": 1}, "icepool.ScalarDie.markdown": {"tf": 1}, "icepool.VectorDie.markdown": {"tf": 1}}, "df": 4}}}}}}, "f": {"docs": {"icepool.BaseDie.cond": {"tf": 1.4142135623730951}}, "df": 1}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.markdown": {"tf": 1}, "icepool.BaseDie.cond": {"tf": 1}, "icepool.EmptyDie.markdown": {"tf": 1}, "icepool.ScalarDie.if_else": {"tf": 1}, "icepool.ScalarDie.markdown": {"tf": 1}, "icepool.VectorDie.markdown": {"tf": 1}}, "df": 6}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.keep": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep_highest": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep_lowest": {"tf": 1.4142135623730951}, "icepool.Pool": {"tf": 1.4142135623730951}, "icepool.DicePool.__init__": {"tf": 1.4142135623730951}}, "df": 5}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.DicePool.truncate_min": {"tf": 1}, "icepool.DicePool.truncate_max": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.BaseDie.pmf": {"tf": 1}, "icepool.BaseDie.cdf": {"tf": 1}, "icepool.BaseDie.sf": {"tf": 1}}, "df": 3}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1}, "icepool.EvalPool.ndim": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}, "icepool.SumPool.direction": {"tf": 1}, "icepool.FindBestSet.direction": {"tf": 1}, "icepool.FindBestRun.final_outcome": {"tf": 1}, "icepool.FindBestRun.direction": {"tf": 1}}, "df": 8}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.pmf": {"tf": 1}, "icepool.BaseDie.cdf": {"tf": 1}, "icepool.BaseDie.sf": {"tf": 1}, "icepool.BaseDie.cond": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1}, "icepool.ScalarDie.if_else": {"tf": 1}, "icepool.DicePool.truncate_min": {"tf": 1}, "icepool.DicePool.truncate_max": {"tf": 1}}, "df": 8}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"icepool.apply": {"tf": 1}, "icepool.BasePool.eval": {"tf": 1}, "icepool.WrapFuncEval.__init__": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.FindBestRun.final_outcome": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {"icepool.BaseDie.sub": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.equals": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {"icepool.from_rv": {"tf": 1}}, "df": 1}}, "k": {"docs": {"icepool.ScalarDie.standardized_moment": {"tf": 1}, "icepool.VectorDie.standardized_moment": {"tf": 1}}, "df": 2, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"icepool.BaseDie.pool": {"tf": 1}, "icepool.from_rv": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.BaseDie.keep": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.standard_pool": {"tf": 1}, "icepool.DicePool.__init__": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.SumPool.next_state": {"tf": 1}, "icepool.FindBestSet.next_state": {"tf": 1}, "icepool.FindBestRun.next_state": {"tf": 1}}, "df": 8, "s": {"docs": {"icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 2}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"icepool.from_cweights": {"tf": 1}}, "df": 1}}}}}}}}, "j": {"docs": {"icepool.VectorDie.covariance": {"tf": 1}, "icepool.VectorDie.correlation": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.BasePool.eval": {"tf": 1}}, "df": 1}}}}}}, "bases": {"root": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"icepool.EmptyDie": {"tf": 1}, "icepool.ScalarDie": {"tf": 1}, "icepool.VectorDie": {"tf": 1}, "icepool.DicePool": {"tf": 1}, "icepool.WrapFuncEval": {"tf": 1}, "icepool.SumPool": {"tf": 1}, "icepool.FindBestSet": {"tf": 1}, "icepool.FindBestRun": {"tf": 1}}, "df": 8}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {"icepool.EmptyDie": {"tf": 1}, "icepool.ScalarDie": {"tf": 1}, "icepool.VectorDie": {"tf": 1}}, "df": 3}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"icepool.EmptyDie": {"tf": 1}, "icepool.ScalarDie": {"tf": 1}, "icepool.VectorDie": {"tf": 1}, "icepool.DicePool": {"tf": 1}}, "df": 4, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {"icepool.EmptyDie": {"tf": 1}, "icepool.ScalarDie": {"tf": 1}, "icepool.VectorDie": {"tf": 1}}, "df": 3}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"icepool.DicePool": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "c": {"docs": {"icepool.BasePool": {"tf": 1.4142135623730951}, "icepool.EvalPool": {"tf": 1.4142135623730951}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"icepool.DicePool": {"tf": 1}, "icepool.WrapFuncEval": {"tf": 1}, "icepool.SumPool": {"tf": 1}, "icepool.FindBestSet": {"tf": 1}, "icepool.FindBestRun": {"tf": 1}}, "df": 5}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.WrapFuncEval": {"tf": 1}, "icepool.SumPool": {"tf": 1}, "icepool.FindBestSet": {"tf": 1}, "icepool.FindBestRun": {"tf": 1}}, "df": 4, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"icepool.WrapFuncEval": {"tf": 1}, "icepool.SumPool": {"tf": 1}, "icepool.FindBestSet": {"tf": 1}, "icepool.FindBestRun": {"tf": 1}}, "df": 4}}}}}}}}}}, "doc": {"root": {"0": {"docs": {"icepool.BaseDie": {"tf": 1}, "icepool.BaseDie.pmf": {"tf": 1.4142135623730951}, "icepool.BaseDie.cdf": {"tf": 1.4142135623730951}, "icepool.BaseDie.sf": {"tf": 1.4142135623730951}, "icepool.BaseDie.weight_eq": {"tf": 1}, "icepool.BaseDie.zero_outcome": {"tf": 1}, "icepool.BaseDie.sign": {"tf": 2.449489742783178}, "icepool.BaseDie.cmp": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.Pool": {"tf": 2}, "icepool.DicePool.set_count_dice": {"tf": 2.8284271247461903}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 2.23606797749979}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 14, "t": {"docs": {}, "df": 0, "h": {"docs": {"icepool.VectorDie.dim": {"tf": 1}}, "df": 1}}}, "1": {"0": {"0": {"docs": {"icepool.BaseDie.pmf": {"tf": 1}, "icepool.BaseDie.cdf": {"tf": 1}, "icepool.BaseDie.sf": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0}, "docs": {"icepool.Die": {"tf": 1.4142135623730951}, "icepool.standard": {"tf": 1.4142135623730951}, "icepool.BaseDie.pmf": {"tf": 1}, "icepool.BaseDie.cdf": {"tf": 1}, "icepool.BaseDie.sf": {"tf": 1}, "icepool.BaseDie.zero": {"tf": 1}, "icepool.BaseDie.sign": {"tf": 1.4142135623730951}, "icepool.BaseDie.cmp": {"tf": 1.4142135623730951}, "icepool.apply": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 4.358898943540674}, "icepool.EvalPool": {"tf": 1.4142135623730951}, "icepool.EvalPool.eval": {"tf": 1}}, "df": 12, ":": {"1": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}}, "2": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}, "icepool.standard_pool": {"tf": 1.7320508075688772}, "icepool.DicePool.set_count_dice": {"tf": 1.4142135623730951}, "icepool.EvalPool": {"tf": 1.4142135623730951}}, "df": 4, ":": {"1": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}, "2": {"docs": {"icepool.BaseDie.equals": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, ":": {"5": {"docs": {"icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "d": {"8": {"docs": {"icepool.Pool": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "3": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}, "icepool.standard_pool": {"tf": 1.4142135623730951}, "icepool.DicePool.set_count_dice": {"tf": 1.4142135623730951}, "icepool.EvalPool": {"tf": 1.4142135623730951}, "icepool.EvalPool.bind_dice": {"tf": 1.4142135623730951}}, "df": 5, ":": {"1": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "d": {"6": {"docs": {"icepool.Pool": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "4": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}, "icepool.EvalPool": {"tf": 1.4142135623730951}}, "df": 2, ":": {"1": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "5": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}, "icepool.DicePool.set_count_dice": {"tf": 1.7320508075688772}, "icepool.EvalPool": {"tf": 1.4142135623730951}}, "df": 3, ":": {"1": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "6": {"docs": {"icepool.Die": {"tf": 2.449489742783178}, "icepool.standard": {"tf": 1.7320508075688772}, "icepool.Pool": {"tf": 1.7320508075688772}, "icepool.standard_pool": {"tf": 2.449489742783178}, "icepool.EvalPool": {"tf": 1.4142135623730951}}, "df": 5, ":": {"1": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "7": {"docs": {"icepool.Die": {"tf": 2.6457513110645907}}, "df": 1}, "8": {"docs": {"icepool.Pool": {"tf": 1.4142135623730951}, "icepool.standard_pool": {"tf": 2}}, "df": 2}, "docs": {"icepool": {"tf": 5}, "icepool.Die": {"tf": 14.966629547095765}, "icepool.standard": {"tf": 5.656854249492381}, "icepool.d": {"tf": 6.855654600401044}, "icepool.bernoulli": {"tf": 3.1622776601683795}, "icepool.coin": {"tf": 3.1622776601683795}, "icepool.BaseDie": {"tf": 6.708203932499369}, "icepool.BaseDie.__init__": {"tf": 1.7320508075688772}, "icepool.BaseDie.ndim": {"tf": 4.47213595499958}, "icepool.BaseDie.markdown": {"tf": 4.358898943540674}, "icepool.BaseDie.outcomes": {"tf": 1.7320508075688772}, "icepool.BaseDie.num_outcomes": {"tf": 1.7320508075688772}, "icepool.BaseDie.is_empty": {"tf": 2.23606797749979}, "icepool.BaseDie.weights": {"tf": 1.7320508075688772}, "icepool.BaseDie.has_zero_weights": {"tf": 2.6457513110645907}, "icepool.BaseDie.items": {"tf": 1.7320508075688772}, "icepool.BaseDie.denominator": {"tf": 1.7320508075688772}, "icepool.BaseDie.total_weight": {"tf": 1.7320508075688772}, "icepool.BaseDie.pmf": {"tf": 3.7416573867739413}, "icepool.BaseDie.cweights": {"tf": 1.7320508075688772}, "icepool.BaseDie.sweights": {"tf": 1.7320508075688772}, "icepool.BaseDie.cdf": {"tf": 3.7416573867739413}, "icepool.BaseDie.sf": {"tf": 3.7416573867739413}, "icepool.BaseDie.weight_eq": {"tf": 1.7320508075688772}, "icepool.BaseDie.weight_ne": {"tf": 2}, "icepool.BaseDie.weight_le": {"tf": 1.7320508075688772}, "icepool.BaseDie.weight_lt": {"tf": 1.7320508075688772}, "icepool.BaseDie.weight_ge": {"tf": 1.7320508075688772}, "icepool.BaseDie.weight_gt": {"tf": 1.7320508075688772}, "icepool.BaseDie.probability": {"tf": 1.7320508075688772}, "icepool.BaseDie.mode": {"tf": 2.449489742783178}, "icepool.BaseDie.modal_weight": {"tf": 1.7320508075688772}, "icepool.BaseDie.ks_stat": {"tf": 1.7320508075688772}, "icepool.BaseDie.cvm_stat": {"tf": 1.7320508075688772}, "icepool.BaseDie.reduce": {"tf": 1.7320508075688772}, "icepool.BaseDie.scale_weights": {"tf": 1.7320508075688772}, "icepool.BaseDie.min_outcome": {"tf": 1.7320508075688772}, "icepool.BaseDie.max_outcome": {"tf": 1.7320508075688772}, "icepool.BaseDie.nearest_le": {"tf": 2.8284271247461903}, "icepool.BaseDie.nearest_ge": {"tf": 2.8284271247461903}, "icepool.BaseDie.reroll": {"tf": 6.782329983125268}, "icepool.BaseDie.reroll_until": {"tf": 6.708203932499369}, "icepool.BaseDie.truncate": {"tf": 4.242640687119285}, "icepool.BaseDie.clip": {"tf": 3.4641016151377544}, "icepool.BaseDie.cond": {"tf": 2.449489742783178}, "icepool.BaseDie.set_outcomes": {"tf": 2.449489742783178}, "icepool.BaseDie.trim": {"tf": 1.7320508075688772}, "icepool.BaseDie.sub": {"tf": 8.366600265340756}, "icepool.BaseDie.explode": {"tf": 6.082762530298219}, "icepool.BaseDie.lowest": {"tf": 2.449489742783178}, "icepool.BaseDie.highest": {"tf": 2.449489742783178}, "icepool.BaseDie.repeat_and_sum": {"tf": 3.605551275463989}, "icepool.BaseDie.pool": {"tf": 2.449489742783178}, "icepool.BaseDie.keep": {"tf": 6.855654600401044}, "icepool.BaseDie.keep_highest": {"tf": 7.3484692283495345}, "icepool.BaseDie.keep_highest_single": {"tf": 1.7320508075688772}, "icepool.BaseDie.keep_lowest": {"tf": 7.3484692283495345}, "icepool.BaseDie.keep_lowest_single": {"tf": 1.7320508075688772}, "icepool.BaseDie.abs": {"tf": 1.7320508075688772}, "icepool.BaseDie.zero": {"tf": 4.47213595499958}, "icepool.BaseDie.zero_outcome": {"tf": 2.449489742783178}, "icepool.BaseDie.bool": {"tf": 3}, "icepool.BaseDie.sign": {"tf": 3.605551275463989}, "icepool.BaseDie.cmp": {"tf": 3.1622776601683795}, "icepool.BaseDie.sample": {"tf": 2.449489742783178}, "icepool.BaseDie.key_tuple": {"tf": 2.449489742783178}, "icepool.BaseDie.hash": {"tf": 1.7320508075688772}, "icepool.BaseDie.equals": {"tf": 5.5677643628300215}, "icepool.EmptyDie": {"tf": 1.7320508075688772}, "icepool.EmptyDie.__init__": {"tf": 1.7320508075688772}, "icepool.EmptyDie.ndim": {"tf": 4.47213595499958}, "icepool.EmptyDie.markdown": {"tf": 4.358898943540674}, "icepool.ScalarDie": {"tf": 2.449489742783178}, "icepool.ScalarDie.__init__": {"tf": 4.795831523312719}, "icepool.ScalarDie.ndim": {"tf": 4.47213595499958}, "icepool.ScalarDie.d": {"tf": 2.8284271247461903}, "icepool.ScalarDie.if_else": {"tf": 6.782329983125268}, "icepool.ScalarDie.median_left": {"tf": 2.449489742783178}, "icepool.ScalarDie.median_right": {"tf": 2.449489742783178}, "icepool.ScalarDie.median": {"tf": 3.1622776601683795}, "icepool.ScalarDie.ppf_left": {"tf": 3}, "icepool.ScalarDie.ppf_right": {"tf": 3}, "icepool.ScalarDie.ppf": {"tf": 3.605551275463989}, "icepool.ScalarDie.mean": {"tf": 1.7320508075688772}, "icepool.ScalarDie.variance": {"tf": 1.7320508075688772}, "icepool.ScalarDie.standard_deviation": {"tf": 1.7320508075688772}, "icepool.ScalarDie.sd": {"tf": 1.7320508075688772}, "icepool.ScalarDie.standardized_moment": {"tf": 1.7320508075688772}, "icepool.ScalarDie.skewness": {"tf": 1.7320508075688772}, "icepool.ScalarDie.excess_kurtosis": {"tf": 1.7320508075688772}, "icepool.ScalarDie.cartesian_product": {"tf": 5.830951894845301}, "icepool.ScalarDie.markdown": {"tf": 4.358898943540674}, "icepool.VectorDie": {"tf": 3.7416573867739413}, "icepool.VectorDie.__init__": {"tf": 5.291502622129181}, "icepool.VectorDie.ndim": {"tf": 4.47213595499958}, "icepool.VectorDie.marginal": {"tf": 1.7320508075688772}, "icepool.VectorDie.dim": {"tf": 2.8284271247461903}, "icepool.VectorDie.all": {"tf": 1.7320508075688772}, "icepool.VectorDie.any": {"tf": 1.7320508075688772}, "icepool.VectorDie.median_left": {"tf": 1.7320508075688772}, "icepool.VectorDie.median_right": {"tf": 1.7320508075688772}, "icepool.VectorDie.median": {"tf": 1.7320508075688772}, "icepool.VectorDie.ppf_left": {"tf": 1.7320508075688772}, "icepool.VectorDie.ppf_right": {"tf": 1.7320508075688772}, "icepool.VectorDie.ppf": {"tf": 1.7320508075688772}, "icepool.VectorDie.mean": {"tf": 1.7320508075688772}, "icepool.VectorDie.variance": {"tf": 1.7320508075688772}, "icepool.VectorDie.standard_deviation": {"tf": 1.7320508075688772}, "icepool.VectorDie.sd": {"tf": 1.7320508075688772}, "icepool.VectorDie.standardized_moment": {"tf": 1.7320508075688772}, "icepool.VectorDie.skewness": {"tf": 1.7320508075688772}, "icepool.VectorDie.excess_kurtosis": {"tf": 1.7320508075688772}, "icepool.VectorDie.covariance": {"tf": 1.7320508075688772}, "icepool.VectorDie.correlation": {"tf": 1.7320508075688772}, "icepool.VectorDie.markdown": {"tf": 1.7320508075688772}, "icepool.from_cweights": {"tf": 1.7320508075688772}, "icepool.from_sweights": {"tf": 1.7320508075688772}, "icepool.from_rv": {"tf": 6.244997998398398}, "icepool.align": {"tf": 6.244997998398398}, "icepool.align_range": {"tf": 2.23606797749979}, "icepool.lowest": {"tf": 2.449489742783178}, "icepool.highest": {"tf": 2.449489742783178}, "icepool.max_outcome": {"tf": 1.7320508075688772}, "icepool.min_outcome": {"tf": 1.7320508075688772}, "icepool.apply": {"tf": 6.557438524302}, "icepool.dice_with_common_ndim": {"tf": 6.782329983125268}, "icepool.Reroll": {"tf": 1.7320508075688772}, "icepool.BasePool": {"tf": 5.385164807134504}, "icepool.BasePool.outcomes": {"tf": 1.7320508075688772}, "icepool.BasePool.eval": {"tf": 5.656854249492381}, "icepool.BasePool.sum": {"tf": 4.123105625617661}, "icepool.Pool": {"tf": 10.63014581273465}, "icepool.standard_pool": {"tf": 6.324555320336759}, "icepool.DicePool": {"tf": 4.58257569495584}, "icepool.DicePool.__init__": {"tf": 6.244997998398398}, "icepool.DicePool.die": {"tf": 1.7320508075688772}, "icepool.DicePool.outcomes": {"tf": 1.7320508075688772}, "icepool.DicePool.count_dice": {"tf": 1.7320508075688772}, "icepool.DicePool.num_dice": {"tf": 1.7320508075688772}, "icepool.DicePool.set_count_dice": {"tf": 14.628738838327793}, "icepool.DicePool.truncate_min": {"tf": 4.898979485566356}, "icepool.DicePool.truncate_max": {"tf": 4.898979485566356}, "icepool.DicePool.has_counted_dice": {"tf": 2.8284271247461903}, "icepool.DicePool.sample": {"tf": 3.4641016151377544}, "icepool.EvalPool": {"tf": 8.06225774829855}, "icepool.EvalPool.next_state": {"tf": 7.54983443527075}, "icepool.EvalPool.final_outcome": {"tf": 6.782329983125268}, "icepool.EvalPool.direction": {"tf": 7.745966692414834}, "icepool.EvalPool.ndim": {"tf": 6.324555320336759}, "icepool.EvalPool.eval": {"tf": 7.280109889280518}, "icepool.EvalPool.bind_dice": {"tf": 6.4031242374328485}, "icepool.WrapFuncEval": {"tf": 3.3166247903554}, "icepool.WrapFuncEval.__init__": {"tf": 4.795831523312719}, "icepool.WrapFuncEval.next_state": {"tf": 7.54983443527075}, "icepool.SumPool": {"tf": 2.23606797749979}, "icepool.SumPool.__init__": {"tf": 1.7320508075688772}, "icepool.SumPool.next_state": {"tf": 1.7320508075688772}, "icepool.SumPool.direction": {"tf": 1.7320508075688772}, "icepool.sum_pool": {"tf": 1.7320508075688772}, "icepool.FindBestSet": {"tf": 3.872983346207417}, "icepool.FindBestSet.__init__": {"tf": 1.7320508075688772}, "icepool.FindBestSet.next_state": {"tf": 2.449489742783178}, "icepool.FindBestSet.direction": {"tf": 1.7320508075688772}, "icepool.FindBestRun": {"tf": 4.358898943540674}, "icepool.FindBestRun.__init__": {"tf": 1.7320508075688772}, "icepool.FindBestRun.next_state": {"tf": 1.7320508075688772}, "icepool.FindBestRun.final_outcome": {"tf": 1.7320508075688772}, "icepool.FindBestRun.direction": {"tf": 1.7320508075688772}, "icepool.d2": {"tf": 1.7320508075688772}, "icepool.d3": {"tf": 1.7320508075688772}, "icepool.d4": {"tf": 1.7320508075688772}, "icepool.d6": {"tf": 1.7320508075688772}, "icepool.d8": {"tf": 1.7320508075688772}, "icepool.d10": {"tf": 1.7320508075688772}, "icepool.d12": {"tf": 1.7320508075688772}, "icepool.d20": {"tf": 1.7320508075688772}, "icepool.d100": {"tf": 1.7320508075688772}}, "df": 177, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"icepool": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"icepool": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"icepool.BaseDie.items": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "s": {"docs": {"icepool.align": {"tf": 1}, "icepool.align_range": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"icepool.EvalPool.final_outcome": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"icepool.apply": {"tf": 1}, "icepool.DicePool": {"tf": 1}, "icepool.EvalPool": {"tf": 1}}, "df": 3}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.EvalPool.next_state": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1}, "icepool.EvalPool.ndim": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 5, "s": {"docs": {"icepool.EvalPool.next_state": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1}, "icepool.EvalPool.ndim": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 5}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.BasePool.eval": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool": {"tf": 1}, "icepool.BaseDie.markdown": {"tf": 1}, "icepool.EmptyDie.markdown": {"tf": 1}, "icepool.ScalarDie.markdown": {"tf": 1}}, "df": 4}}}, "y": {"docs": {"icepool.BaseDie": {"tf": 1}, "icepool.BaseDie.pmf": {"tf": 1.4142135623730951}, "icepool.BaseDie.probability": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 1}, "icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}}, "df": 6}}}}}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"icepool": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.BaseDie": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die": {"tf": 1.7320508075688772}, "icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.truncate": {"tf": 1}, "icepool.BaseDie.clip": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.BaseDie.keep_highest": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep_lowest": {"tf": 1.4142135623730951}, "icepool.ScalarDie.d": {"tf": 1}, "icepool.from_rv": {"tf": 1}, "icepool.Pool": {"tf": 1.7320508075688772}, "icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.EvalPool.ndim": {"tf": 1}, "icepool.WrapFuncEval": {"tf": 1}}, "df": 13}, "s": {"docs": {"icepool.BasePool": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Pool": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die": {"tf": 1}, "icepool.ScalarDie.cartesian_product": {"tf": 1}, "icepool.apply": {"tf": 1}}, "df": 3}, "e": {"docs": {"icepool.VectorDie.dim": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.EvalPool.bind_dice": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 5, "s": {"docs": {"icepool.d": {"tf": 1}, "icepool.ScalarDie.cartesian_product": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.ScalarDie.cartesian_product": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.EvalPool.final_outcome": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Pool": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Pool": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.BaseDie.weight_eq": {"tf": 1}, "icepool.BaseDie.set_outcomes": {"tf": 1.4142135623730951}}, "df": 2}, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"icepool.EvalPool.next_state": {"tf": 1.4142135623730951}, "icepool.WrapFuncEval.next_state": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.FindBestSet": {"tf": 1}, "icepool.FindBestRun": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.FindBestSet.next_state": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"icepool": {"tf": 1}, "icepool.BaseDie.pool": {"tf": 1.4142135623730951}, "icepool.apply": {"tf": 1}, "icepool.BasePool": {"tf": 1.7320508075688772}, "icepool.BasePool.eval": {"tf": 1.7320508075688772}, "icepool.BasePool.sum": {"tf": 1.4142135623730951}, "icepool.Pool": {"tf": 3.3166247903554}, "icepool.standard_pool": {"tf": 2.8284271247461903}, "icepool.DicePool": {"tf": 2}, "icepool.DicePool.__init__": {"tf": 2.23606797749979}, "icepool.DicePool.die": {"tf": 1}, "icepool.DicePool.num_dice": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 4.123105625617661}, "icepool.DicePool.truncate_min": {"tf": 1}, "icepool.DicePool.truncate_max": {"tf": 1}, "icepool.DicePool.sample": {"tf": 1.4142135623730951}, "icepool.EvalPool.next_state": {"tf": 2.23606797749979}, "icepool.EvalPool.eval": {"tf": 2.6457513110645907}, "icepool.EvalPool.bind_dice": {"tf": 2}, "icepool.WrapFuncEval.next_state": {"tf": 2.23606797749979}, "icepool.SumPool": {"tf": 1}, "icepool.FindBestSet": {"tf": 1}, "icepool.FindBestRun": {"tf": 1}}, "df": 23, "s": {"docs": {"icepool.apply": {"tf": 1}, "icepool.BasePool": {"tf": 1}, "icepool.EvalPool": {"tf": 2}, "icepool.EvalPool.next_state": {"tf": 2.449489742783178}, "icepool.EvalPool.final_outcome": {"tf": 1.7320508075688772}, "icepool.EvalPool.direction": {"tf": 2}, "icepool.EvalPool.ndim": {"tf": 1.4142135623730951}, "icepool.EvalPool.eval": {"tf": 2.6457513110645907}, "icepool.EvalPool.bind_dice": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 2.449489742783178}}, "df": 10}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"icepool.BasePool": {"tf": 1.7320508075688772}, "icepool.EvalPool.eval": {"tf": 1}}, "df": 2}}}}, "[": {"0": {"docs": {"icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 1}, "1": {"docs": {"icepool.DicePool.set_count_dice": {"tf": 2}}, "df": 1}, "2": {"docs": {"icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 1}, "3": {"docs": {"icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 1, ":": {"5": {"docs": {"icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 1, ":": {"5": {"docs": {"icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "docs": {}, "df": 0, ":": {"5": {"docs": {"icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie": {"tf": 1}, "icepool.BaseDie.min_outcome": {"tf": 1}, "icepool.BaseDie.max_outcome": {"tf": 1}, "icepool.BaseDie.cmp": {"tf": 1}, "icepool.max_outcome": {"tf": 1}, "icepool.min_outcome": {"tf": 1}, "icepool.apply": {"tf": 1.4142135623730951}, "icepool.EvalPool": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 12}, "y": {"docs": {"icepool.BaseDie.keep": {"tf": 1}, "icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}, "icepool.DicePool": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.cmp": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"icepool.DicePool": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.BaseDie.sub": {"tf": 1}, "icepool.DicePool.__init__": {"tf": 1.7320508075688772}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.BaseDie.explode": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep_highest": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep_lowest": {"tf": 1.4142135623730951}, "icepool.apply": {"tf": 1}, "icepool.dice_with_common_ndim": {"tf": 1}, "icepool.Pool": {"tf": 1.4142135623730951}, "icepool.EvalPool.ndim": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}, "icepool.EvalPool.bind_dice": {"tf": 1}}, "df": 13, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.BaseDie.pmf": {"tf": 1.4142135623730951}, "icepool.BaseDie.cdf": {"tf": 1.4142135623730951}, "icepool.BaseDie.sf": {"tf": 1.4142135623730951}}, "df": 3}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"icepool.BaseDie.truncate": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.ScalarDie": {"tf": 1}, "icepool.VectorDie": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 2}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie": {"tf": 1}}, "df": 1}}, "n": {"docs": {"icepool.BasePool.eval": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "s": {"docs": {"icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 1, "s": {"docs": {"icepool.BaseDie.sample": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "f": {"docs": {"icepool.ScalarDie.ppf": {"tf": 1.4142135623730951}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool": {"tf": 1.4142135623730951}, "icepool.Die": {"tf": 1.7320508075688772}, "icepool.BaseDie": {"tf": 1.4142135623730951}, "icepool.BaseDie.ndim": {"tf": 1.4142135623730951}, "icepool.BaseDie.markdown": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 1}, "icepool.BaseDie.keep_highest_single": {"tf": 1}, "icepool.BaseDie.keep_lowest_single": {"tf": 1}, "icepool.BaseDie.zero": {"tf": 1}, "icepool.BaseDie.zero_outcome": {"tf": 1.4142135623730951}, "icepool.BaseDie.sign": {"tf": 1}, "icepool.BaseDie.sample": {"tf": 1}, "icepool.BaseDie.hash": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1}, "icepool.EmptyDie.ndim": {"tf": 1.4142135623730951}, "icepool.EmptyDie.markdown": {"tf": 1}, "icepool.ScalarDie.ndim": {"tf": 1.4142135623730951}, "icepool.ScalarDie.d": {"tf": 1}, "icepool.ScalarDie.markdown": {"tf": 1}, "icepool.VectorDie.ndim": {"tf": 1.4142135623730951}, "icepool.VectorDie.dim": {"tf": 1}, "icepool.apply": {"tf": 1.7320508075688772}, "icepool.BasePool": {"tf": 1}, "icepool.Pool": {"tf": 2.23606797749979}, "icepool.standard_pool": {"tf": 1.4142135623730951}, "icepool.DicePool.set_count_dice": {"tf": 2.8284271247461903}, "icepool.DicePool.truncate_min": {"tf": 1}, "icepool.DicePool.truncate_max": {"tf": 1}, "icepool.EvalPool": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1.4142135623730951}, "icepool.EvalPool.final_outcome": {"tf": 1.4142135623730951}, "icepool.EvalPool.eval": {"tf": 1.4142135623730951}, "icepool.EvalPool.bind_dice": {"tf": 2}, "icepool.WrapFuncEval.__init__": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1.4142135623730951}}, "df": 36, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"icepool.BaseDie.markdown": {"tf": 1}, "icepool.EmptyDie.markdown": {"tf": 1}, "icepool.ScalarDie.markdown": {"tf": 1}, "icepool.VectorDie.markdown": {"tf": 1}}, "df": 4}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}}, "df": 3}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Pool": {"tf": 1}, "icepool.standard_pool": {"tf": 1}, "icepool.DicePool": {"tf": 1}}, "df": 3, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.DicePool.__init__": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Die": {"tf": 1}, "icepool.ScalarDie.d": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"icepool.bernoulli": {"tf": 1}, "icepool.coin": {"tf": 1}, "icepool.ScalarDie.if_else": {"tf": 1.7320508075688772}, "icepool.DicePool.truncate_min": {"tf": 1}, "icepool.DicePool.truncate_max": {"tf": 1}}, "df": 5}, "y": {"docs": {"icepool.BaseDie.cond": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.BaseDie.keep_highest_single": {"tf": 1}, "icepool.BaseDie.keep_lowest_single": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {"icepool.ScalarDie.median": {"tf": 1}, "icepool.ScalarDie.ppf": {"tf": 1}}, "df": 2}}, "r": {"docs": {"icepool.Pool": {"tf": 1}, "icepool.EvalPool": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"icepool.Die": {"tf": 2}, "icepool.standard": {"tf": 1}, "icepool.BaseDie.mode": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.BaseDie.pool": {"tf": 1}, "icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}, "icepool.ScalarDie.cartesian_product": {"tf": 1}, "icepool.from_cweights": {"tf": 1}, "icepool.from_sweights": {"tf": 1}, "icepool.from_rv": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.Pool": {"tf": 1.4142135623730951}, "icepool.DicePool.count_dice": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.DicePool.sample": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.WrapFuncEval": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 20}}, "e": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Pool": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"icepool.ScalarDie.__init__": {"tf": 1}, "icepool.VectorDie.__init__": {"tf": 1}, "icepool.apply": {"tf": 1.7320508075688772}, "icepool.BasePool.eval": {"tf": 1}, "icepool.WrapFuncEval.__init__": {"tf": 1}}, "df": 5, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie.pmf": {"tf": 1}, "icepool.BaseDie.cdf": {"tf": 1}, "icepool.BaseDie.sf": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.BasePool.eval": {"tf": 1.7320508075688772}, "icepool.Pool": {"tf": 1.4142135623730951}, "icepool.DicePool.__init__": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1}, "icepool.EvalPool.ndim": {"tf": 1}, "icepool.EvalPool.bind_dice": {"tf": 1.4142135623730951}, "icepool.WrapFuncEval": {"tf": 1.4142135623730951}, "icepool.WrapFuncEval.__init__": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 17}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.BasePool.outcomes": {"tf": 1}, "icepool.Pool": {"tf": 1.7320508075688772}, "icepool.DicePool": {"tf": 1.4142135623730951}, "icepool.DicePool.__init__": {"tf": 1}, "icepool.DicePool.die": {"tf": 1}, "icepool.DicePool.outcomes": {"tf": 1}}, "df": 6}}}}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.EvalPool": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"icepool.VectorDie": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"icepool.BaseDie.sign": {"tf": 1}, "icepool.from_rv": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.apply": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie.cond": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 3}}}, "t": {"docs": {"icepool.BaseDie.clip": {"tf": 1}}, "df": 1}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.BaseDie.sub": {"tf": 1}, "icepool.BasePool": {"tf": 1}, "icepool.EvalPool": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1.4142135623730951}, "icepool.EvalPool.final_outcome": {"tf": 1.4142135623730951}, "icepool.EvalPool.direction": {"tf": 1.4142135623730951}, "icepool.EvalPool.ndim": {"tf": 1.4142135623730951}, "icepool.EvalPool.eval": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1.4142135623730951}}, "df": 9}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.EvalPool": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 2.6457513110645907}, "icepool.EvalPool.eval": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"icepool.BaseDie": {"tf": 1}, "icepool.EvalPool": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.BaseDie": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}, "icepool.EvalPool.eval": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.BaseDie.equals": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.FindBestSet.next_state": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.keep": {"tf": 1.4142135623730951}, "icepool.EvalPool.direction": {"tf": 1.4142135623730951}, "icepool.EvalPool.eval": {"tf": 1}}, "df": 3}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.BaseDie.reroll_until": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.BaseDie.mode": {"tf": 1}, "icepool.BaseDie.reduce": {"tf": 1}, "icepool.dice_with_common_ndim": {"tf": 1.4142135623730951}}, "df": 3}}}}, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"icepool": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.BaseDie": {"tf": 1}}, "df": 1}, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BasePool.sum": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"icepool.d": {"tf": 1}, "icepool.dice_with_common_ndim": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.dice_with_common_ndim": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}, "icepool.EvalPool.final_outcome": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Die": {"tf": 1}, "icepool.EvalPool": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.BaseDie.zero": {"tf": null}, "icepool.ScalarDie.__init__": {"tf": null}, "icepool.VectorDie.__init__": {"tf": null}, "icepool.DicePool.__init__": {"tf": null}}, "df": 4}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.ScalarDie.__init__": {"tf": 1}, "icepool.VectorDie.__init__": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.BasePool.eval": {"tf": 1}}, "df": 4}}, "s": {"docs": {"icepool.from_cweights": {"tf": 1}, "icepool.from_sweights": {"tf": 1}, "icepool.from_rv": {"tf": 1}, "icepool.WrapFuncEval.__init__": {"tf": 1}}, "df": 4}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.BaseDie.scale_weights": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.DicePool.has_counted_dice": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Die": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.BaseDie.bool": {"tf": 1}}, "df": 1}}, "s": {"docs": {"icepool.FindBestRun.direction": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"icepool.standard_pool": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"icepool.align_range": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1}, "icepool.standard": {"tf": 1}}, "df": 2, "d": {"docs": {"icepool.BaseDie.truncate": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.dice_with_common_ndim": {"tf": 1}, "icepool.Pool": {"tf": 1}}, "df": 2}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}, "icepool.BaseDie.equals": {"tf": 1}}, "df": 2, "s": {"docs": {"icepool.BaseDie.has_zero_weights": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.BaseDie.mode": {"tf": 1}, "icepool.BaseDie.explode": {"tf": 1}, "icepool.dice_with_common_ndim": {"tf": 1}}, "df": 3}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.BaseDie.cond": {"tf": 1}, "icepool.ScalarDie.if_else": {"tf": 1}}, "df": 2}}}}}}}}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Pool": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Pool": {"tf": 1}, "icepool.EvalPool": {"tf": 1}}, "df": 2}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.BaseDie": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 1.4142135623730951}, "icepool.Pool": {"tf": 2.23606797749979}, "icepool.standard_pool": {"tf": 1}, "icepool.DicePool.__init__": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 2.8284271247461903}, "icepool.EvalPool.next_state": {"tf": 1.4142135623730951}, "icepool.EvalPool.eval": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1.4142135623730951}}, "df": 9, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.BaseDie.keep": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.standard_pool": {"tf": 1}, "icepool.DicePool": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 2}, "icepool.DicePool.has_counted_dice": {"tf": 1}}, "df": 6}}, "s": {"docs": {"icepool.ScalarDie.__init__": {"tf": 1}, "icepool.VectorDie.__init__": {"tf": 1}, "icepool.BasePool.eval": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.DicePool.count_dice": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1.7320508075688772}, "icepool.DicePool.sample": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}, "icepool.WrapFuncEval.__init__": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 11}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.DicePool.num_dice": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"icepool.BaseDie": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"icepool.BaseDie.markdown": {"tf": 1}, "icepool.EmptyDie.markdown": {"tf": 1}, "icepool.ScalarDie.markdown": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"icepool.BaseDie.equals": {"tf": 1.4142135623730951}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Pool": {"tf": 1}}, "df": 2}}}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.BaseDie.keep_lowest": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"icepool.Die": {"tf": 2}, "icepool.BaseDie": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.BasePool.eval": {"tf": 1.4142135623730951}, "icepool.Pool": {"tf": 2}, "icepool.standard_pool": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.EvalPool": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1.4142135623730951}, "icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1}, "icepool.EvalPool.ndim": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1.4142135623730951}}, "df": 14, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Pool": {"tf": 2}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie": {"tf": 1}, "icepool.ScalarDie.median": {"tf": 1}, "icepool.ScalarDie.ppf": {"tf": 1}, "icepool.BasePool.eval": {"tf": 1.4142135623730951}, "icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.DicePool.truncate_min": {"tf": 1}, "icepool.DicePool.truncate_max": {"tf": 1}, "icepool.DicePool.has_counted_dice": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1.4142135623730951}, "icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1.4142135623730951}}, "df": 12, "s": {"docs": {"icepool.BaseDie": {"tf": 1}}, "df": 1}}, "t": {"docs": {"icepool.ScalarDie.d": {"tf": 1}, "icepool.BasePool": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"icepool.EvalPool.eval": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die": {"tf": 1}, "icepool.WrapFuncEval.__init__": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.reroll": {"tf": 1.4142135623730951}, "icepool.BaseDie.reroll_until": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1.4142135623730951}, "icepool.BaseDie.explode": {"tf": 1.4142135623730951}, "icepool.EvalPool": {"tf": 1}}, "df": 5}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.BaseDie.zero": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"icepool.EvalPool": {"tf": 1}, "icepool.WrapFuncEval": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"icepool.EvalPool": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.clip": {"tf": 1}}, "df": 1, "s": {"docs": {"icepool.BaseDie.explode": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"icepool.ScalarDie.cartesian_product": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.BasePool.eval": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"icepool.SumPool.direction": {"tf": 1}, "icepool.FindBestSet.direction": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BasePool.eval": {"tf": 1}, "icepool.EvalPool": {"tf": 1.4142135623730951}}, "df": 2, "d": {"docs": {"icepool.Pool": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie": {"tf": 1}, "icepool.BasePool": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.EvalPool": {"tf": 1}}, "df": 5}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {"icepool.BaseDie.truncate": {"tf": 1}}, "df": 1, "s": {"docs": {"icepool.BaseDie.clip": {"tf": 1}}, "df": 1}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.BaseDie.clip": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.bernoulli": {"tf": 1}, "icepool.coin": {"tf": 1}, "icepool.BaseDie.cdf": {"tf": 1}, "icepool.BaseDie.sf": {"tf": 1}, "icepool.BaseDie.hash": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1}}, "df": 6}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"icepool.DicePool.set_count_dice": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"icepool.BaseDie.sub": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.cweights": {"tf": 1}, "icepool.BaseDie.cdf": {"tf": 1}, "icepool.from_cweights": {"tf": 1}}, "df": 3}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"icepool.EvalPool": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.EvalPool.next_state": {"tf": 1.7320508075688772}, "icepool.WrapFuncEval.next_state": {"tf": 1.7320508075688772}, "icepool.FindBestRun.next_state": {"tf": 1}}, "df": 3}}}}}}, "d": {"docs": {}, "df": 0, "f": {"docs": {"icepool.ScalarDie.ppf_left": {"tf": 1}, "icepool.ScalarDie.ppf_right": {"tf": 1}, "icepool.ScalarDie.ppf": {"tf": 1}, "icepool.from_rv": {"tf": 1}}, "df": 4, "s": {"docs": {"icepool.BaseDie.ks_stat": {"tf": 1}, "icepool.BaseDie.cvm_stat": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "\u00e9": {"docs": {}, "df": 0, "r": {"docs": {"icepool.BaseDie.cvm_stat": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BasePool.eval": {"tf": 1}}, "df": 1, "s": {"docs": {"icepool.BaseDie.pool": {"tf": 1}, "icepool.standard_pool": {"tf": 1}}, "df": 2}, "d": {"docs": {"icepool.WrapFuncEval": {"tf": 1}}, "df": 1}}}}}}}, "d": {"1": {"2": {"docs": {"icepool.Pool": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "s": {"docs": {"icepool.standard_pool": {"tf": 1}}, "df": 1}}, "3": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}}, "df": 1, "+": {"3": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}}, "6": {"docs": {"icepool.Die": {"tf": 2.449489742783178}, "icepool.standard": {"tf": 1}, "icepool.EvalPool.bind_dice": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"icepool.standard_pool": {"tf": 1.4142135623730951}, "icepool.EvalPool.bind_dice": {"tf": 1.7320508075688772}}, "df": 2}}, "8": {"docs": {}, "df": 0, "s": {"docs": {"icepool.standard_pool": {"tf": 1.4142135623730951}}, "df": 1}}, "docs": {"icepool.Die": {"tf": 2}, "icepool.standard": {"tf": 1}, "icepool.bernoulli": {"tf": 1}, "icepool.coin": {"tf": 1}, "icepool.ScalarDie.ppf_left": {"tf": 1}, "icepool.ScalarDie.ppf_right": {"tf": 1}, "icepool.ScalarDie.ppf": {"tf": 1}}, "df": 7, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool": {"tf": 1.4142135623730951}, "icepool.Die": {"tf": 1}, "icepool.BaseDie": {"tf": 1.7320508075688772}, "icepool.BaseDie.min_outcome": {"tf": 1}, "icepool.BaseDie.max_outcome": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1.4142135623730951}, "icepool.BaseDie.explode": {"tf": 1}, "icepool.BaseDie.lowest": {"tf": 1.4142135623730951}, "icepool.BaseDie.highest": {"tf": 1.4142135623730951}, "icepool.BaseDie.repeat_and_sum": {"tf": 1.7320508075688772}, "icepool.BaseDie.keep": {"tf": 2.449489742783178}, "icepool.BaseDie.keep_highest": {"tf": 2.449489742783178}, "icepool.BaseDie.keep_lowest": {"tf": 2.449489742783178}, "icepool.BaseDie.hash": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1.7320508075688772}, "icepool.ScalarDie.__init__": {"tf": 1}, "icepool.ScalarDie.cartesian_product": {"tf": 2.23606797749979}, "icepool.VectorDie.__init__": {"tf": 1}, "icepool.align": {"tf": 2.449489742783178}, "icepool.align_range": {"tf": 1}, "icepool.lowest": {"tf": 1.4142135623730951}, "icepool.highest": {"tf": 1.4142135623730951}, "icepool.max_outcome": {"tf": 1}, "icepool.min_outcome": {"tf": 1}, "icepool.apply": {"tf": 1.7320508075688772}, "icepool.dice_with_common_ndim": {"tf": 1.7320508075688772}, "icepool.BasePool": {"tf": 1.7320508075688772}, "icepool.BasePool.sum": {"tf": 1}, "icepool.Pool": {"tf": 3}, "icepool.standard_pool": {"tf": 2}, "icepool.DicePool": {"tf": 1.7320508075688772}, "icepool.DicePool.__init__": {"tf": 1}, "icepool.DicePool.count_dice": {"tf": 1}, "icepool.DicePool.num_dice": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 4.795831523312719}, "icepool.DicePool.has_counted_dice": {"tf": 1.4142135623730951}, "icepool.EvalPool": {"tf": 2.6457513110645907}, "icepool.EvalPool.next_state": {"tf": 1.4142135623730951}, "icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.EvalPool.bind_dice": {"tf": 2}, "icepool.WrapFuncEval.next_state": {"tf": 1.4142135623730951}, "icepool.SumPool": {"tf": 1}, "icepool.SumPool.next_state": {"tf": 1}}, "df": 43, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"icepool.BaseDie": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 1}, "icepool.BasePool": {"tf": 1}, "icepool.Pool": {"tf": 2}, "icepool.EvalPool": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1}, "icepool.EvalPool.ndim": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}}, "df": 9}}}}}, "t": {"docs": {"icepool.Die": {"tf": 2.8284271247461903}, "icepool.DicePool.sample": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"icepool.BasePool": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool": {"tf": 1}, "icepool.BaseDie": {"tf": 1}, "icepool.BaseDie.cdf": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 1}, "icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}, "icepool.VectorDie.marginal": {"tf": 1}, "icepool.VectorDie.dim": {"tf": 1}, "icepool.from_rv": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}}, "df": 10, "s": {"docs": {"icepool.EvalPool": {"tf": 1}}, "df": 1}}}}}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"icepool.from_rv": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 2}}}}}}}}}, "e": {"docs": {"icepool.Die": {"tf": 4.358898943540674}, "icepool.standard": {"tf": 2}, "icepool.d": {"tf": 2.449489742783178}, "icepool.bernoulli": {"tf": 1}, "icepool.coin": {"tf": 1}, "icepool.BaseDie": {"tf": 2.23606797749979}, "icepool.BaseDie.markdown": {"tf": 1}, "icepool.BaseDie.outcomes": {"tf": 1}, "icepool.BaseDie.is_empty": {"tf": 1}, "icepool.BaseDie.weights": {"tf": 1}, "icepool.BaseDie.mode": {"tf": 1}, "icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.reroll_until": {"tf": 1}, "icepool.BaseDie.truncate": {"tf": 1.4142135623730951}, "icepool.BaseDie.clip": {"tf": 1}, "icepool.BaseDie.set_outcomes": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 2.23606797749979}, "icepool.BaseDie.repeat_and_sum": {"tf": 1.4142135623730951}, "icepool.BaseDie.pool": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 2.449489742783178}, "icepool.BaseDie.keep_highest": {"tf": 2.449489742783178}, "icepool.BaseDie.keep_highest_single": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 2.449489742783178}, "icepool.BaseDie.keep_lowest_single": {"tf": 1}, "icepool.BaseDie.zero": {"tf": 1}, "icepool.BaseDie.zero_outcome": {"tf": 1.4142135623730951}, "icepool.BaseDie.bool": {"tf": 1}, "icepool.BaseDie.cmp": {"tf": 1}, "icepool.BaseDie.sample": {"tf": 1}, "icepool.BaseDie.key_tuple": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1.4142135623730951}, "icepool.EmptyDie": {"tf": 1}, "icepool.EmptyDie.markdown": {"tf": 1}, "icepool.ScalarDie": {"tf": 1}, "icepool.ScalarDie.__init__": {"tf": 1}, "icepool.ScalarDie.d": {"tf": 2}, "icepool.ScalarDie.if_else": {"tf": 2.6457513110645907}, "icepool.ScalarDie.markdown": {"tf": 1}, "icepool.VectorDie": {"tf": 1}, "icepool.VectorDie.__init__": {"tf": 1.4142135623730951}, "icepool.VectorDie.marginal": {"tf": 1}, "icepool.VectorDie.dim": {"tf": 1}, "icepool.VectorDie.all": {"tf": 1}, "icepool.VectorDie.any": {"tf": 1}, "icepool.VectorDie.markdown": {"tf": 1}, "icepool.from_cweights": {"tf": 1}, "icepool.from_sweights": {"tf": 1}, "icepool.from_rv": {"tf": 1.7320508075688772}, "icepool.apply": {"tf": 2.23606797749979}, "icepool.dice_with_common_ndim": {"tf": 1}, "icepool.BasePool.outcomes": {"tf": 1}, "icepool.BasePool.sum": {"tf": 1}, "icepool.Pool": {"tf": 3.3166247903554}, "icepool.standard_pool": {"tf": 1.7320508075688772}, "icepool.DicePool": {"tf": 1.4142135623730951}, "icepool.DicePool.__init__": {"tf": 1.4142135623730951}, "icepool.DicePool.die": {"tf": 1}, "icepool.DicePool.outcomes": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 2.23606797749979}, "icepool.DicePool.truncate_min": {"tf": 1.4142135623730951}, "icepool.DicePool.truncate_max": {"tf": 1.4142135623730951}, "icepool.EvalPool": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 2}, "icepool.EvalPool.ndim": {"tf": 2}, "icepool.EvalPool.eval": {"tf": 1}, "icepool.EvalPool.bind_dice": {"tf": 1.4142135623730951}, "icepool.FindBestRun.next_state": {"tf": 1}}, "df": 67}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 3}, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.ks_stat": {"tf": 1}, "icepool.BaseDie.cvm_stat": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 3}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.VectorDie": {"tf": 1}, "icepool.VectorDie.dim": {"tf": 1}, "icepool.VectorDie.any": {"tf": 1}}, "df": 3, "s": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}, "icepool.BaseDie.ndim": {"tf": 1}, "icepool.EmptyDie.ndim": {"tf": 1}, "icepool.ScalarDie.ndim": {"tf": 1}, "icepool.VectorDie.__init__": {"tf": 1}, "icepool.VectorDie.ndim": {"tf": 1}, "icepool.VectorDie.marginal": {"tf": 1}, "icepool.VectorDie.all": {"tf": 1}, "icepool.align": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.EvalPool.ndim": {"tf": 1.4142135623730951}}, "df": 11}}}}}}}, "[": {"0": {"docs": {"icepool.VectorDie.dim": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.BaseDie.reduce": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.ScalarDie.median": {"tf": 1}, "icepool.ScalarDie.ppf": {"tf": 1}}, "df": 2}}}}}}, "d": {"docs": {"icepool.BaseDie.zero": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.ScalarDie": {"tf": 1}, "icepool.ScalarDie.__init__": {"tf": 1}, "icepool.VectorDie.__init__": {"tf": 1}, "icepool.BasePool.eval": {"tf": 1.4142135623730951}, "icepool.DicePool.__init__": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}}, "df": 6}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.EvalPool.next_state": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1.7320508075688772}, "icepool.WrapFuncEval.next_state": {"tf": 1}, "icepool.SumPool.direction": {"tf": 1}, "icepool.FindBestSet.direction": {"tf": 1}}, "df": 5}}}}}}}}, "o": {"docs": {"icepool.BaseDie": {"tf": 1.4142135623730951}, "icepool.BaseDie.sample": {"tf": 1}, "icepool.ScalarDie.median": {"tf": 1}, "icepool.ScalarDie.ppf": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 6, "n": {"docs": {"icepool.Die": {"tf": 1}, "icepool.standard": {"tf": 1}}, "df": 2, "e": {"docs": {"icepool.BaseDie.zero": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.BaseDie.equals": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1.4142135623730951}}, "df": 2, "n": {"docs": {"icepool.BaseDie.hash": {"tf": 1}, "icepool.SumPool.direction": {"tf": 1}, "icepool.FindBestSet.direction": {"tf": 1}}, "df": 3}}}, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Pool": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}}, "df": 3, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.DicePool.num_dice": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}, "icepool.EvalPool.direction": {"tf": 1}}, "df": 2, "d": {"docs": {"icepool.BaseDie.sub": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1}, "icepool.EvalPool.ndim": {"tf": 1.4142135623730951}}, "df": 3}, "s": {"docs": {"icepool.Pool": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.BaseDie.hash": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"icepool.BaseDie.keep": {"tf": 1}, "icepool.Pool": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}, "icepool.BaseDie.markdown": {"tf": 1}, "icepool.BaseDie.reduce": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.EmptyDie.markdown": {"tf": 1}, "icepool.ScalarDie.if_else": {"tf": 1}, "icepool.ScalarDie.markdown": {"tf": 1}, "icepool.from_rv": {"tf": 1.4142135623730951}}, "df": 8, "s": {"docs": {"icepool.Die": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie.explode": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1}}, "df": 4, "s": {"docs": {"icepool.Pool": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"icepool.EvalPool.final_outcome": {"tf": 1}}, "df": 1, "d": {"docs": {"icepool.BaseDie": {"tf": 1}, "icepool.ScalarDie.__init__": {"tf": 1}, "icepool.VectorDie.__init__": {"tf": 1}, "icepool.DicePool": {"tf": 1}}, "df": 4}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.reroll_until": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.BaseDie.explode": {"tf": 1}}, "df": 4}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"icepool.VectorDie": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.EvalPool.next_state": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1.4142135623730951}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 3}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"icepool.ScalarDie.__init__": {"tf": 1}, "icepool.VectorDie.__init__": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Pool": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"icepool.Die": {"tf": 1}, "icepool.standard": {"tf": 1}, "icepool.BaseDie": {"tf": 1.4142135623730951}, "icepool.BaseDie.mode": {"tf": 1}, "icepool.BaseDie.zero": {"tf": 1}, "icepool.BaseDie.zero_outcome": {"tf": 1}, "icepool.BaseDie.sign": {"tf": 1}, "icepool.from_rv": {"tf": 1.7320508075688772}, "icepool.dice_with_common_ndim": {"tf": 1}, "icepool.Pool": {"tf": 1.4142135623730951}, "icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.EvalPool": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1.4142135623730951}, "icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1}, "icepool.EvalPool.ndim": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1.4142135623730951}, "icepool.FindBestRun": {"tf": 1}}, "df": 19, "e": {"docs": {}, "df": 0, "e": {"docs": {"icepool": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1.7320508075688772}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 6}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep_highest": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep_lowest": {"tf": 1.4142135623730951}, "icepool.Pool": {"tf": 1.4142135623730951}, "icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.EvalPool": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}}, "df": 8, "s": {"docs": {"icepool.BasePool": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "t": {"docs": {"icepool.Die": {"tf": 1.7320508075688772}, "icepool.BaseDie": {"tf": 1}, "icepool.BaseDie.pmf": {"tf": 1}, "icepool.BaseDie.cdf": {"tf": 1}, "icepool.BaseDie.sf": {"tf": 1}, "icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.reroll_until": {"tf": 1}, "icepool.BaseDie.set_outcomes": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.from_rv": {"tf": 1}, "icepool.align": {"tf": 1}, "icepool.align_range": {"tf": 1}, "icepool.Pool": {"tf": 1.4142135623730951}, "icepool.DicePool": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}, "icepool.FindBestSet": {"tf": 1.7320508075688772}, "icepool.FindBestSet.next_state": {"tf": 1}}, "df": 18, "s": {"docs": {"icepool.BaseDie.set_outcomes": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.Pool": {"tf": 1}}, "df": 3}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}, "icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.DicePool.set_count_dice": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 1}, "icepool.VectorDie.marginal": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1.7320508075688772}}, "df": 4}}, "s": {"docs": {"icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.reroll_until": {"tf": 1}}, "df": 2}}}}, "f": {"docs": {"icepool.BaseDie.has_zero_weights": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 1}, "icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}, "icepool.BaseDie.cmp": {"tf": 1.4142135623730951}, "icepool.ScalarDie.if_else": {"tf": 1.7320508075688772}, "icepool.WrapFuncEval.__init__": {"tf": 1}}, "df": 7}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"icepool.BaseDie": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"icepool.BaseDie.cond": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"icepool.BaseDie.sample": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.BaseDie.keep": {"tf": 1}, "icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}}, "df": 3}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {"icepool.DicePool": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 2}}, "c": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie": {"tf": 1}, "icepool.DicePool.truncate_min": {"tf": 1}, "icepool.DicePool.truncate_max": {"tf": 1}}, "df": 4, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.standard": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {"icepool.EvalPool.ndim": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.VectorDie": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.BaseDie.sub": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.ScalarDie.cartesian_product": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {"icepool.Die": {"tf": 1}, "icepool.align": {"tf": 1}, "icepool.align_range": {"tf": 1}, "icepool.Pool": {"tf": 1}}, "df": 4, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.BaseDie": {"tf": 1}, "icepool.BaseDie.outcomes": {"tf": 1}, "icepool.BaseDie.mode": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 1}, "icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.DicePool": {"tf": 1.4142135623730951}, "icepool.DicePool.count_dice": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.DicePool.truncate_min": {"tf": 1}, "icepool.DicePool.truncate_max": {"tf": 1}}, "df": 12}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie.clip": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 6}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {"icepool.BaseDie.sub": {"tf": 1.7320508075688772}}, "df": 1, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BasePool": {"tf": 1}, "icepool.EvalPool": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1.4142135623730951}, "icepool.EvalPool.direction": {"tf": 1}, "icepool.EvalPool.ndim": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 8}}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"icepool.VectorDie.dim": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"icepool.BaseDie": {"tf": 1}, "icepool.BaseDie.nearest_le": {"tf": 1}, "icepool.BaseDie.nearest_ge": {"tf": 1}}, "df": 3}}, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.BaseDie.sweights": {"tf": 1}, "icepool.BaseDie.sf": {"tf": 1}, "icepool.from_sweights": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {"icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 2}}, "m": {"docs": {"icepool.BaseDie.cvm_stat": {"tf": 1}, "icepool.BaseDie.repeat_and_sum": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep_highest": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep_lowest": {"tf": 1.4142135623730951}, "icepool.ScalarDie.d": {"tf": 1}, "icepool.BasePool.sum": {"tf": 1.7320508075688772}, "icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1.4142135623730951}, "icepool.EvalPool.bind_dice": {"tf": 1.7320508075688772}}, "df": 10, "s": {"docs": {"icepool.EvalPool.bind_dice": {"tf": 1}, "icepool.SumPool": {"tf": 1}}, "df": 2}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.BaseDie.explode": {"tf": 1.7320508075688772}, "icepool.apply": {"tf": 1}}, "df": 4}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"icepool.ScalarDie.median": {"tf": 1}, "icepool.ScalarDie.ppf": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}, "icepool.BaseDie.weight_eq": {"tf": 1}, "icepool.BaseDie.weight_ne": {"tf": 1}, "icepool.BaseDie.weight_le": {"tf": 1}, "icepool.BaseDie.weight_lt": {"tf": 1}, "icepool.BaseDie.weight_ge": {"tf": 1}, "icepool.BaseDie.weight_gt": {"tf": 1}, "icepool.BaseDie.probability": {"tf": 1}, "icepool.BaseDie.modal_weight": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.BaseDie.keep_highest_single": {"tf": 1}, "icepool.BaseDie.keep_lowest_single": {"tf": 1}, "icepool.BaseDie.zero": {"tf": 1.4142135623730951}, "icepool.ScalarDie.cartesian_product": {"tf": 1}, "icepool.align": {"tf": 1}, "icepool.BasePool": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1.4142135623730951}, "icepool.DicePool.sample": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1.7320508075688772}, "icepool.WrapFuncEval": {"tf": 1}}, "df": 20}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.truncate": {"tf": 1}, "icepool.BaseDie.clip": {"tf": 1}, "icepool.ScalarDie.d": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {"icepool.standard": {"tf": 1}}, "df": 1}, "d": {"docs": {"icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.BaseDie.clip": {"tf": 1}, "icepool.BasePool.sum": {"tf": 1}, "icepool.WrapFuncEval": {"tf": 1}}, "df": 3}, "e": {"docs": {"icepool.SumPool": {"tf": 1}}, "df": 1}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"icepool.standard_pool": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1.4142135623730951}, "icepool.EvalPool.bind_dice": {"tf": 1}, "icepool.FindBestSet": {"tf": 1.4142135623730951}, "icepool.FindBestRun": {"tf": 1.4142135623730951}}, "df": 5, "s": {"docs": {"icepool.standard_pool": {"tf": 1.4142135623730951}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 2}, "icepool.BaseDie": {"tf": 1}, "icepool.BaseDie.clip": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep": {"tf": 1}, "icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1.4142135623730951}, "icepool.align": {"tf": 1}, "icepool.align_range": {"tf": 1}, "icepool.Pool": {"tf": 1.4142135623730951}, "icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}, "icepool.EvalPool.bind_dice": {"tf": 1}, "icepool.WrapFuncEval.__init__": {"tf": 1}}, "df": 15}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.DicePool.sample": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.FindBestRun.next_state": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"icepool.standard": {"tf": 1}, "icepool.d": {"tf": 1.4142135623730951}, "icepool.ScalarDie.d": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.standard_pool": {"tf": 1.7320508075688772}}, "df": 5}}}}}, "t": {"docs": {"icepool.BaseDie.ks_stat": {"tf": 1}, "icepool.BaseDie.cvm_stat": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"icepool.VectorDie": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.VectorDie": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {"icepool.from_rv": {"tf": 1.4142135623730951}}, "df": 1}, "e": {"docs": {"icepool.BasePool.eval": {"tf": 1.7320508075688772}, "icepool.EvalPool": {"tf": 4.69041575982343}, "icepool.EvalPool.next_state": {"tf": 3}, "icepool.EvalPool.final_outcome": {"tf": 2.23606797749979}, "icepool.EvalPool.direction": {"tf": 1.7320508075688772}, "icepool.WrapFuncEval": {"tf": 1}, "icepool.WrapFuncEval.__init__": {"tf": 2}, "icepool.WrapFuncEval.next_state": {"tf": 3}, "icepool.FindBestRun.next_state": {"tf": 1}}, "df": 9}}, "y": {"docs": {"icepool.BaseDie.sub": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.BaseDie.markdown": {"tf": 1}, "icepool.EmptyDie.markdown": {"tf": 1}, "icepool.ScalarDie.markdown": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"icepool.FindBestRun": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.BaseDie.sub": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Pool": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Die": {"tf": 1.7320508075688772}, "icepool.BaseDie.ndim": {"tf": 1}, "icepool.EmptyDie.ndim": {"tf": 1}, "icepool.ScalarDie.ndim": {"tf": 1}, "icepool.VectorDie.ndim": {"tf": 1}}, "df": 5, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.ndim": {"tf": 1}, "icepool.EmptyDie.ndim": {"tf": 1}, "icepool.ScalarDie.ndim": {"tf": 1}, "icepool.ScalarDie.cartesian_product": {"tf": 1}, "icepool.VectorDie.ndim": {"tf": 1}}, "df": 5}}}, "s": {"docs": {"icepool.ScalarDie": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"icepool.from_rv": {"tf": 1.4142135623730951}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"icepool.EvalPool.eval": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"icepool.DicePool.has_counted_dice": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.BaseDie": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.reroll_until": {"tf": 1}, "icepool.BaseDie.explode": {"tf": 1}, "icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}, "icepool.ScalarDie.__init__": {"tf": 1}, "icepool.VectorDie.__init__": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.DicePool.__init__": {"tf": 2}, "icepool.EvalPool": {"tf": 1.7320508075688772}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1.4142135623730951}, "icepool.EvalPool.ndim": {"tf": 1.4142135623730951}, "icepool.WrapFuncEval.__init__": {"tf": 1.4142135623730951}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 16}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 1}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.BaseDie.cvm_stat": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"icepool.Die": {"tf": 1}, "icepool.standard": {"tf": 1}, "icepool.BaseDie.hash": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.SumPool.direction": {"tf": 1}, "icepool.FindBestSet.direction": {"tf": 1}}, "df": 6, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"icepool": {"tf": 1}, "icepool.Die": {"tf": 3}, "icepool.standard": {"tf": 1}, "icepool.BaseDie": {"tf": 1}, "icepool.BaseDie.ndim": {"tf": 1}, "icepool.BaseDie.markdown": {"tf": 1}, "icepool.BaseDie.is_empty": {"tf": 1}, "icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.truncate": {"tf": 1.4142135623730951}, "icepool.BaseDie.clip": {"tf": 2.23606797749979}, "icepool.BaseDie.cond": {"tf": 1}, "icepool.BaseDie.set_outcomes": {"tf": 1.4142135623730951}, "icepool.BaseDie.sub": {"tf": 2.449489742783178}, "icepool.BaseDie.explode": {"tf": 1}, "icepool.BaseDie.repeat_and_sum": {"tf": 1}, "icepool.BaseDie.pool": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 2}, "icepool.BaseDie.keep_highest": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep_lowest": {"tf": 1.4142135623730951}, "icepool.BaseDie.zero": {"tf": 1.4142135623730951}, "icepool.BaseDie.zero_outcome": {"tf": 1}, "icepool.BaseDie.sample": {"tf": 1}, "icepool.BaseDie.key_tuple": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1}, "icepool.EmptyDie.ndim": {"tf": 1}, "icepool.EmptyDie.markdown": {"tf": 1}, "icepool.ScalarDie.ndim": {"tf": 1}, "icepool.ScalarDie.median": {"tf": 1.4142135623730951}, "icepool.ScalarDie.ppf": {"tf": 1.4142135623730951}, "icepool.ScalarDie.cartesian_product": {"tf": 1}, "icepool.ScalarDie.markdown": {"tf": 1}, "icepool.VectorDie.__init__": {"tf": 1}, "icepool.VectorDie.ndim": {"tf": 1}, "icepool.VectorDie.dim": {"tf": 1}, "icepool.from_rv": {"tf": 1}, "icepool.apply": {"tf": 1.4142135623730951}, "icepool.BasePool": {"tf": 1}, "icepool.BasePool.eval": {"tf": 2.23606797749979}, "icepool.BasePool.sum": {"tf": 1.4142135623730951}, "icepool.Pool": {"tf": 2.449489742783178}, "icepool.DicePool.__init__": {"tf": 2.6457513110645907}, "icepool.DicePool.num_dice": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 2.6457513110645907}, "icepool.DicePool.truncate_min": {"tf": 1.7320508075688772}, "icepool.DicePool.truncate_max": {"tf": 1.7320508075688772}, "icepool.DicePool.has_counted_dice": {"tf": 1}, "icepool.DicePool.sample": {"tf": 1.4142135623730951}, "icepool.EvalPool": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 2}, "icepool.EvalPool.final_outcome": {"tf": 1.7320508075688772}, "icepool.EvalPool.direction": {"tf": 1}, "icepool.EvalPool.ndim": {"tf": 1.4142135623730951}, "icepool.EvalPool.bind_dice": {"tf": 1.4142135623730951}, "icepool.WrapFuncEval.__init__": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 2}, "icepool.SumPool.direction": {"tf": 1}, "icepool.FindBestSet": {"tf": 1}, "icepool.FindBestSet.next_state": {"tf": 1}, "icepool.FindBestSet.direction": {"tf": 1}, "icepool.FindBestRun": {"tf": 1}, "icepool.FindBestRun.next_state": {"tf": 1}, "icepool.FindBestRun.direction": {"tf": 1}}, "df": 62}, "n": {"docs": {}, "df": 0, "k": {"docs": {"icepool.BaseDie.sub": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "d": {"docs": {"icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"icepool": {"tf": 1.7320508075688772}, "icepool.Die": {"tf": 7}, "icepool.standard": {"tf": 1.4142135623730951}, "icepool.d": {"tf": 1.4142135623730951}, "icepool.BaseDie": {"tf": 2}, "icepool.BaseDie.ndim": {"tf": 1}, "icepool.BaseDie.markdown": {"tf": 1.7320508075688772}, "icepool.BaseDie.outcomes": {"tf": 1.4142135623730951}, "icepool.BaseDie.num_outcomes": {"tf": 1}, "icepool.BaseDie.weights": {"tf": 1.4142135623730951}, "icepool.BaseDie.denominator": {"tf": 1}, "icepool.BaseDie.total_weight": {"tf": 1}, "icepool.BaseDie.pmf": {"tf": 1.7320508075688772}, "icepool.BaseDie.cweights": {"tf": 1}, "icepool.BaseDie.sweights": {"tf": 1}, "icepool.BaseDie.cdf": {"tf": 1.7320508075688772}, "icepool.BaseDie.sf": {"tf": 1.7320508075688772}, "icepool.BaseDie.weight_eq": {"tf": 1}, "icepool.BaseDie.weight_ne": {"tf": 1}, "icepool.BaseDie.weight_le": {"tf": 1}, "icepool.BaseDie.weight_lt": {"tf": 1}, "icepool.BaseDie.weight_ge": {"tf": 1}, "icepool.BaseDie.weight_gt": {"tf": 1}, "icepool.BaseDie.probability": {"tf": 1}, "icepool.BaseDie.mode": {"tf": 1.4142135623730951}, "icepool.BaseDie.modal_weight": {"tf": 1}, "icepool.BaseDie.ks_stat": {"tf": 1}, "icepool.BaseDie.cvm_stat": {"tf": 1}, "icepool.BaseDie.min_outcome": {"tf": 1.4142135623730951}, "icepool.BaseDie.max_outcome": {"tf": 1.4142135623730951}, "icepool.BaseDie.nearest_le": {"tf": 1.4142135623730951}, "icepool.BaseDie.nearest_ge": {"tf": 1.4142135623730951}, "icepool.BaseDie.reroll": {"tf": 2.6457513110645907}, "icepool.BaseDie.reroll_until": {"tf": 2.449489742783178}, "icepool.BaseDie.truncate": {"tf": 2.6457513110645907}, "icepool.BaseDie.clip": {"tf": 3}, "icepool.BaseDie.cond": {"tf": 1.7320508075688772}, "icepool.BaseDie.set_outcomes": {"tf": 1.7320508075688772}, "icepool.BaseDie.sub": {"tf": 3.4641016151377544}, "icepool.BaseDie.explode": {"tf": 2}, "icepool.BaseDie.lowest": {"tf": 2}, "icepool.BaseDie.highest": {"tf": 2}, "icepool.BaseDie.repeat_and_sum": {"tf": 1.7320508075688772}, "icepool.BaseDie.keep": {"tf": 2.449489742783178}, "icepool.BaseDie.keep_highest": {"tf": 2.8284271247461903}, "icepool.BaseDie.keep_highest_single": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 2.8284271247461903}, "icepool.BaseDie.keep_lowest_single": {"tf": 1}, "icepool.BaseDie.zero": {"tf": 1.7320508075688772}, "icepool.BaseDie.bool": {"tf": 1}, "icepool.BaseDie.cmp": {"tf": 1.7320508075688772}, "icepool.BaseDie.hash": {"tf": 1.4142135623730951}, "icepool.BaseDie.equals": {"tf": 2.449489742783178}, "icepool.EmptyDie.ndim": {"tf": 1}, "icepool.EmptyDie.markdown": {"tf": 1.7320508075688772}, "icepool.ScalarDie": {"tf": 1}, "icepool.ScalarDie.__init__": {"tf": 1.4142135623730951}, "icepool.ScalarDie.ndim": {"tf": 1}, "icepool.ScalarDie.d": {"tf": 2}, "icepool.ScalarDie.if_else": {"tf": 2}, "icepool.ScalarDie.median_left": {"tf": 2}, "icepool.ScalarDie.median_right": {"tf": 2}, "icepool.ScalarDie.median": {"tf": 2.23606797749979}, "icepool.ScalarDie.ppf_left": {"tf": 2.23606797749979}, "icepool.ScalarDie.ppf_right": {"tf": 2.23606797749979}, "icepool.ScalarDie.ppf": {"tf": 2.449489742783178}, "icepool.ScalarDie.cartesian_product": {"tf": 2}, "icepool.ScalarDie.markdown": {"tf": 1.7320508075688772}, "icepool.VectorDie": {"tf": 1}, "icepool.VectorDie.__init__": {"tf": 1.7320508075688772}, "icepool.VectorDie.ndim": {"tf": 1}, "icepool.VectorDie.marginal": {"tf": 1.4142135623730951}, "icepool.VectorDie.dim": {"tf": 1}, "icepool.VectorDie.markdown": {"tf": 1}, "icepool.from_rv": {"tf": 2.23606797749979}, "icepool.align": {"tf": 2.23606797749979}, "icepool.align_range": {"tf": 1.4142135623730951}, "icepool.lowest": {"tf": 2}, "icepool.highest": {"tf": 2}, "icepool.max_outcome": {"tf": 1.4142135623730951}, "icepool.min_outcome": {"tf": 1.4142135623730951}, "icepool.apply": {"tf": 2.449489742783178}, "icepool.dice_with_common_ndim": {"tf": 2.23606797749979}, "icepool.BasePool": {"tf": 1.4142135623730951}, "icepool.BasePool.outcomes": {"tf": 1.4142135623730951}, "icepool.BasePool.eval": {"tf": 1.7320508075688772}, "icepool.BasePool.sum": {"tf": 1.4142135623730951}, "icepool.Pool": {"tf": 4.898979485566356}, "icepool.standard_pool": {"tf": 2.449489742783178}, "icepool.DicePool": {"tf": 2.6457513110645907}, "icepool.DicePool.__init__": {"tf": 3}, "icepool.DicePool.die": {"tf": 1.4142135623730951}, "icepool.DicePool.outcomes": {"tf": 1.4142135623730951}, "icepool.DicePool.count_dice": {"tf": 1}, "icepool.DicePool.num_dice": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 5.744562646538029}, "icepool.DicePool.truncate_min": {"tf": 1}, "icepool.DicePool.truncate_max": {"tf": 1}, "icepool.DicePool.has_counted_dice": {"tf": 1.4142135623730951}, "icepool.EvalPool": {"tf": 2}, "icepool.EvalPool.next_state": {"tf": 4.242640687119285}, "icepool.EvalPool.final_outcome": {"tf": 2}, "icepool.EvalPool.direction": {"tf": 2.23606797749979}, "icepool.EvalPool.ndim": {"tf": 2.449489742783178}, "icepool.EvalPool.eval": {"tf": 3}, "icepool.EvalPool.bind_dice": {"tf": 1.4142135623730951}, "icepool.WrapFuncEval.__init__": {"tf": 1.7320508075688772}, "icepool.WrapFuncEval.next_state": {"tf": 4.242640687119285}, "icepool.SumPool": {"tf": 1}, "icepool.SumPool.next_state": {"tf": 1.4142135623730951}, "icepool.FindBestSet": {"tf": 1.7320508075688772}, "icepool.FindBestSet.next_state": {"tf": 1.7320508075688772}, "icepool.FindBestRun": {"tf": 1.7320508075688772}, "icepool.FindBestRun.next_state": {"tf": 1.7320508075688772}, "icepool.FindBestRun.final_outcome": {"tf": 1}}, "df": 115, "s": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie": {"tf": 1.4142135623730951}, "icepool.BaseDie.mode": {"tf": 1}, "icepool.from_rv": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1.4142135623730951}, "icepool.EvalPool": {"tf": 1}}, "df": 6}}, "y": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie": {"tf": 1}, "icepool.BaseDie.set_outcomes": {"tf": 1.4142135623730951}, "icepool.BaseDie.equals": {"tf": 1}, "icepool.Pool": {"tf": 1.4142135623730951}}, "df": 5}, "r": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}, "icepool.BaseDie.nearest_le": {"tf": 1}, "icepool.BaseDie.nearest_ge": {"tf": 1}, "icepool.BasePool": {"tf": 1}, "icepool.DicePool.truncate_min": {"tf": 1}, "icepool.DicePool.truncate_max": {"tf": 1}, "icepool.DicePool.has_counted_dice": {"tf": 1}, "icepool.EvalPool": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1.7320508075688772}, "icepool.WrapFuncEval.next_state": {"tf": 1.7320508075688772}}, "df": 10, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"icepool.EvalPool": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {"icepool.BaseDie": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}, "icepool.ScalarDie.d": {"tf": 1}, "icepool.EvalPool.bind_dice": {"tf": 1.4142135623730951}, "icepool.FindBestSet": {"tf": 1}, "icepool.FindBestRun": {"tf": 1}, "icepool.FindBestRun.next_state": {"tf": 1}}, "df": 6}, "i": {"docs": {}, "df": 0, "r": {"docs": {"icepool.BaseDie": {"tf": 1}, "icepool.BaseDie.markdown": {"tf": 1}, "icepool.BaseDie.reduce": {"tf": 1}, "icepool.EmptyDie.markdown": {"tf": 1}, "icepool.ScalarDie.markdown": {"tf": 1}}, "df": 5}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die": {"tf": 2.8284271247461903}, "icepool.standard": {"tf": 1}, "icepool.bernoulli": {"tf": 1}, "icepool.coin": {"tf": 1}, "icepool.BaseDie": {"tf": 1}, "icepool.BaseDie.nearest_le": {"tf": 1}, "icepool.BaseDie.nearest_ge": {"tf": 1}, "icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.reroll_until": {"tf": 1}, "icepool.BaseDie.truncate": {"tf": 1}, "icepool.BaseDie.clip": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.BaseDie.explode": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 2}, "icepool.BaseDie.keep_highest": {"tf": 2}, "icepool.BaseDie.keep_lowest": {"tf": 2}, "icepool.BaseDie.sign": {"tf": 1}, "icepool.BaseDie.key_tuple": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1}, "icepool.ScalarDie.d": {"tf": 1.4142135623730951}, "icepool.VectorDie": {"tf": 1}, "icepool.from_rv": {"tf": 1}, "icepool.align": {"tf": 1}, "icepool.align_range": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.BasePool.eval": {"tf": 1}, "icepool.Pool": {"tf": 2.8284271247461903}, "icepool.DicePool": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.EvalPool": {"tf": 1.7320508075688772}, "icepool.EvalPool.next_state": {"tf": 2.23606797749979}, "icepool.EvalPool.final_outcome": {"tf": 1.7320508075688772}, "icepool.EvalPool.direction": {"tf": 1}, "icepool.EvalPool.ndim": {"tf": 1}, "icepool.EvalPool.bind_dice": {"tf": 2}, "icepool.WrapFuncEval": {"tf": 1}, "icepool.WrapFuncEval.__init__": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 2.23606797749979}, "icepool.SumPool": {"tf": 1}, "icepool.FindBestSet": {"tf": 1}, "icepool.FindBestRun": {"tf": 1}}, "df": 41}, "n": {"docs": {"icepool.BaseDie": {"tf": 1.4142135623730951}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.BaseDie.sign": {"tf": 1.4142135623730951}, "icepool.VectorDie": {"tf": 1}, "icepool.BasePool.eval": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 2.23606797749979}}, "df": 7}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"icepool.BaseDie": {"tf": 1.4142135623730951}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.num_outcomes": {"tf": 1}, "icepool.BaseDie.truncate": {"tf": 1}, "icepool.BasePool.outcomes": {"tf": 1}, "icepool.DicePool.outcomes": {"tf": 1}}, "df": 4}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"icepool.BaseDie": {"tf": 1}, "icepool.ScalarDie.ppf_left": {"tf": 1}, "icepool.ScalarDie.ppf_right": {"tf": 1}, "icepool.ScalarDie.ppf": {"tf": 1}}, "df": 4}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"icepool.DicePool.truncate_min": {"tf": 1}, "icepool.DicePool.truncate_max": {"tf": 1}}, "df": 2}}}}}}}}}, "o": {"docs": {"icepool": {"tf": 1.4142135623730951}, "icepool.Die": {"tf": 3.7416573867739413}, "icepool.standard": {"tf": 1}, "icepool.d": {"tf": 1}, "icepool.BaseDie": {"tf": 2}, "icepool.BaseDie.mode": {"tf": 1}, "icepool.BaseDie.reroll": {"tf": 1.7320508075688772}, "icepool.BaseDie.reroll_until": {"tf": 1.7320508075688772}, "icepool.BaseDie.truncate": {"tf": 1.7320508075688772}, "icepool.BaseDie.clip": {"tf": 2}, "icepool.BaseDie.set_outcomes": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 2}, "icepool.BaseDie.explode": {"tf": 2.23606797749979}, "icepool.BaseDie.lowest": {"tf": 1}, "icepool.BaseDie.highest": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 1.7320508075688772}, "icepool.BaseDie.keep_highest": {"tf": 2}, "icepool.BaseDie.keep_lowest": {"tf": 2}, "icepool.BaseDie.zero": {"tf": 1}, "icepool.BaseDie.bool": {"tf": 1}, "icepool.BaseDie.cmp": {"tf": 1}, "icepool.BaseDie.hash": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1}, "icepool.ScalarDie.__init__": {"tf": 1}, "icepool.ScalarDie.d": {"tf": 1}, "icepool.ScalarDie.if_else": {"tf": 1.4142135623730951}, "icepool.VectorDie": {"tf": 1}, "icepool.VectorDie.__init__": {"tf": 1}, "icepool.VectorDie.dim": {"tf": 1}, "icepool.from_rv": {"tf": 1.4142135623730951}, "icepool.lowest": {"tf": 1}, "icepool.highest": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.dice_with_common_ndim": {"tf": 1.7320508075688772}, "icepool.BasePool": {"tf": 1.4142135623730951}, "icepool.BasePool.eval": {"tf": 2}, "icepool.BasePool.sum": {"tf": 1}, "icepool.Pool": {"tf": 2.8284271247461903}, "icepool.DicePool": {"tf": 1}, "icepool.DicePool.count_dice": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 2}, "icepool.DicePool.has_counted_dice": {"tf": 1.7320508075688772}, "icepool.DicePool.sample": {"tf": 1}, "icepool.EvalPool": {"tf": 2}, "icepool.EvalPool.next_state": {"tf": 1.4142135623730951}, "icepool.EvalPool.final_outcome": {"tf": 1.7320508075688772}, "icepool.EvalPool.direction": {"tf": 1}, "icepool.EvalPool.ndim": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1.4142135623730951}, "icepool.SumPool.next_state": {"tf": 1}, "icepool.FindBestSet.next_state": {"tf": 1}, "icepool.FindBestRun.next_state": {"tf": 1}}, "df": 53, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Die": {"tf": 1.7320508075688772}, "icepool.BaseDie.denominator": {"tf": 1}, "icepool.BaseDie.total_weight": {"tf": 1}, "icepool.BaseDie.pmf": {"tf": 1.4142135623730951}, "icepool.BaseDie.cdf": {"tf": 1.4142135623730951}, "icepool.BaseDie.sf": {"tf": 1.4142135623730951}, "icepool.BaseDie.explode": {"tf": 1}, "icepool.SumPool.next_state": {"tf": 1}}, "df": 8}}}, "p": {"docs": {"icepool.ScalarDie.__init__": {"tf": 1}, "icepool.VectorDie.__init__": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"icepool.ScalarDie.cartesian_product": {"tf": 1}, "icepool.EvalPool": {"tf": 1}}, "df": 2, "s": {"docs": {"icepool.Die": {"tf": 2}, "icepool.BaseDie.reroll": {"tf": 1.4142135623730951}, "icepool.BaseDie.reroll_until": {"tf": 1.4142135623730951}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.BaseDie.repeat_and_sum": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep": {"tf": 1}, "icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}, "icepool.ScalarDie.d": {"tf": 1}, "icepool.BasePool.eval": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.DicePool": {"tf": 1}, "icepool.DicePool.count_dice": {"tf": 1}, "icepool.DicePool.num_dice": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1.4142135623730951}, "icepool.DicePool.has_counted_dice": {"tf": 1}}, "df": 16}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"icepool.bernoulli": {"tf": 1}, "icepool.coin": {"tf": 1}, "icepool.BaseDie.markdown": {"tf": 1}, "icepool.BaseDie.is_empty": {"tf": 1}, "icepool.BaseDie.has_zero_weights": {"tf": 1}, "icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.reroll_until": {"tf": 1}, "icepool.BaseDie.explode": {"tf": 1}, "icepool.BaseDie.hash": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1.4142135623730951}, "icepool.EmptyDie.markdown": {"tf": 1}, "icepool.ScalarDie.if_else": {"tf": 2}, "icepool.ScalarDie.markdown": {"tf": 1}, "icepool.VectorDie.all": {"tf": 1}, "icepool.VectorDie.any": {"tf": 1}, "icepool.DicePool.truncate_min": {"tf": 1}, "icepool.DicePool.truncate_max": {"tf": 1}, "icepool.DicePool.has_counted_dice": {"tf": 1}}, "df": 18}, "n": {"docs": {}, "df": 0, "c": {"docs": {"icepool.BaseDie.truncate": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.clip": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 2}, "icepool.BaseDie.keep_highest": {"tf": 2}, "icepool.BaseDie.keep_lowest": {"tf": 2}, "icepool.Pool": {"tf": 3.3166247903554}, "icepool.DicePool.__init__": {"tf": 1.4142135623730951}, "icepool.DicePool.set_count_dice": {"tf": 2.449489742783178}, "icepool.DicePool.truncate_min": {"tf": 1}, "icepool.DicePool.truncate_max": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1.4142135623730951}, "icepool.EvalPool.eval": {"tf": 1.4142135623730951}}, "df": 11, "s": {"docs": {"icepool.BaseDie.truncate": {"tf": 1}}, "df": 1}, "d": {"docs": {"icepool.BaseDie.truncate": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep_highest": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep_lowest": {"tf": 1.4142135623730951}, "icepool.Pool": {"tf": 1.4142135623730951}, "icepool.DicePool.truncate_min": {"tf": 1}, "icepool.DicePool.truncate_max": {"tf": 1}}, "df": 7}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.BaseDie.truncate": {"tf": 1}, "icepool.Pool": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.BaseDie.keep": {"tf": 1}, "icepool.BaseDie.keep_highest": {"tf": 1}}, "df": 2}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"icepool.BaseDie.bool": {"tf": 1}}, "df": 1, "y": {"docs": {"icepool.BaseDie.cond": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 2}}}}}}}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.lowest": {"tf": 1}, "icepool.BaseDie.highest": {"tf": 1}, "icepool.VectorDie": {"tf": 1.4142135623730951}, "icepool.lowest": {"tf": 1}, "icepool.highest": {"tf": 1}, "icepool.WrapFuncEval.__init__": {"tf": 1}}, "df": 6, "n": {"docs": {"icepool.Die": {"tf": 1}, "icepool.EvalPool.bind_dice": {"tf": 1}}, "df": 2}, "s": {"docs": {"icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.reroll_until": {"tf": 1}, "icepool.BaseDie.explode": {"tf": 1}, "icepool.BaseDie.bool": {"tf": 1}, "icepool.ScalarDie.cartesian_product": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.EvalPool.bind_dice": {"tf": 1.4142135623730951}, "icepool.FindBestSet": {"tf": 1}, "icepool.FindBestRun": {"tf": 1}}, "df": 9}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.BasePool.eval": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.markdown": {"tf": 1.4142135623730951}, "icepool.EmptyDie.markdown": {"tf": 1.4142135623730951}, "icepool.ScalarDie.markdown": {"tf": 1.4142135623730951}, "icepool.VectorDie.markdown": {"tf": 1}}, "df": 4}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie.mode": {"tf": 1}, "icepool.BaseDie.key_tuple": {"tf": 1}, "icepool.VectorDie": {"tf": 1}, "icepool.align": {"tf": 1}, "icepool.dice_with_common_ndim": {"tf": 1}, "icepool.DicePool.__init__": {"tf": 1.7320508075688772}, "icepool.DicePool.count_dice": {"tf": 1}, "icepool.DicePool.truncate_min": {"tf": 1.7320508075688772}, "icepool.DicePool.truncate_max": {"tf": 1.7320508075688772}, "icepool.FindBestSet.next_state": {"tf": 1}}, "df": 11, "s": {"docs": {"icepool.VectorDie": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.zero": {"tf": 1}, "icepool.EvalPool": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.d": {"tf": 1}, "icepool.ScalarDie.cartesian_product": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {"icepool.EvalPool": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.BaseDie.clip": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.reroll_until": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"icepool.BaseDie.cond": {"tf": 1}, "icepool.ScalarDie.if_else": {"tf": 1}}, "df": 2}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"icepool.BasePool.eval": {"tf": 1}}, "df": 1}}}}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"icepool.BaseDie.hash": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1}, "icepool.ScalarDie.median_left": {"tf": 1.4142135623730951}, "icepool.ScalarDie.median_right": {"tf": 1.4142135623730951}, "icepool.ScalarDie.median": {"tf": 1.4142135623730951}, "icepool.ScalarDie.ppf_left": {"tf": 1.4142135623730951}, "icepool.ScalarDie.ppf_right": {"tf": 1.4142135623730951}, "icepool.ScalarDie.ppf": {"tf": 1.4142135623730951}, "icepool.BasePool": {"tf": 1}, "icepool.standard_pool": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 2.23606797749979}}, "df": 11}}}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"icepool": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.BaseDie.keep_highest_single": {"tf": 1}, "icepool.BaseDie.keep_lowest_single": {"tf": 1}, "icepool.SumPool": {"tf": 1}}, "df": 5}}}}, "e": {"docs": {"icepool.BaseDie.pmf": {"tf": 1}, "icepool.BaseDie.cdf": {"tf": 1}, "icepool.BaseDie.sf": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep_highest": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep_lowest": {"tf": 1.4142135623730951}, "icepool.BaseDie.zero_outcome": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}}, "df": 9, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1}, "icepool.VectorDie.dim": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.standard_pool": {"tf": 1.4142135623730951}, "icepool.DicePool.set_count_dice": {"tf": 2.23606797749979}, "icepool.EvalPool": {"tf": 1}, "icepool.EvalPool.bind_dice": {"tf": 1}}, "df": 7, "s": {"docs": {"icepool": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}, "icepool.Pool": {"tf": 1}}, "df": 3}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.BasePool.eval": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.explode": {"tf": 1.7320508075688772}}, "df": 1, "d": {"docs": {"icepool.BaseDie.explode": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.ScalarDie.cartesian_product": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"icepool.EvalPool.next_state": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1}, "icepool.EvalPool.ndim": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.EvalPool": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.BaseDie.sub": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"icepool.VectorDie.dim": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.BasePool": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"icepool.Die": {"tf": 1.7320508075688772}, "icepool.standard": {"tf": 1}, "icepool.BaseDie.pmf": {"tf": 1}, "icepool.BaseDie.cweights": {"tf": 1}, "icepool.BaseDie.sweights": {"tf": 1}, "icepool.BaseDie.cdf": {"tf": 1}, "icepool.BaseDie.sf": {"tf": 1}, "icepool.BaseDie.truncate": {"tf": 1}, "icepool.BaseDie.zero": {"tf": 1}, "icepool.BaseDie.hash": {"tf": 1}, "icepool.BasePool.eval": {"tf": 1}, "icepool.standard_pool": {"tf": 1}, "icepool.DicePool.count_dice": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 2}, "icepool.DicePool.truncate_min": {"tf": 1}, "icepool.DicePool.truncate_max": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1.4142135623730951}, "icepool.EvalPool.eval": {"tf": 1}, "icepool.EvalPool.bind_dice": {"tf": 1.4142135623730951}, "icepool.WrapFuncEval.next_state": {"tf": 1.4142135623730951}}, "df": 20}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die": {"tf": 1.7320508075688772}, "icepool.EvalPool.eval": {"tf": 1}}, "df": 2, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"icepool.VectorDie": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.FindBestSet.next_state": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"icepool.ScalarDie.if_else": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"icepool.DicePool.set_count_dice": {"tf": 3}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie": {"tf": 1}, "icepool.DicePool.truncate_min": {"tf": 1}, "icepool.DicePool.truncate_max": {"tf": 1}, "icepool.EvalPool": {"tf": 1}}, "df": 5}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.BasePool": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}, "icepool.SumPool.direction": {"tf": 1}, "icepool.FindBestSet.direction": {"tf": 1}}, "df": 4, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"icepool.BaseDie": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.BasePool": {"tf": 1}, "icepool.BasePool.eval": {"tf": 2.23606797749979}, "icepool.Pool": {"tf": 1.4142135623730951}, "icepool.EvalPool": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}, "icepool.EvalPool.bind_dice": {"tf": 1.4142135623730951}, "icepool.WrapFuncEval": {"tf": 1}, "icepool.SumPool": {"tf": 1}, "icepool.FindBestSet": {"tf": 1}, "icepool.FindBestRun": {"tf": 1}}, "df": 12}}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BasePool.eval": {"tf": 1}}, "df": 1, "s": {"docs": {"icepool.BasePool.eval": {"tf": 1.4142135623730951}, "icepool.EvalPool.eval": {"tf": 1}}, "df": 2}, "d": {"docs": {"icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1}, "icepool.EvalPool.ndim": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.BasePool.eval": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"icepool.EvalPool.eval": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.EvalPool": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}}, "df": 1, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.BaseDie.truncate": {"tf": 1}, "icepool.BaseDie.clip": {"tf": 1}}, "df": 2, "s": {"docs": {"icepool.BaseDie.truncate": {"tf": 1}, "icepool.BaseDie.clip": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.d": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 3}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"icepool.BaseDie": {"tf": 1}, "icepool.BaseDie.ndim": {"tf": 1}, "icepool.EmptyDie.ndim": {"tf": 1}, "icepool.ScalarDie.ndim": {"tf": 1}, "icepool.VectorDie.ndim": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}}, "df": 7, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.ndim": {"tf": 1}, "icepool.EmptyDie.ndim": {"tf": 1}, "icepool.ScalarDie.ndim": {"tf": 1}, "icepool.VectorDie.ndim": {"tf": 1}}, "df": 4}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.BaseDie.reroll_until": {"tf": 1}}, "df": 1}}}}}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Pool": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1.4142135623730951}, "icepool.EvalPool.eval": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.BaseDie.truncate": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 3}}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.apply": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Pool": {"tf": 1}}, "df": 1}}}}}}}}}}, "q": {"docs": {"icepool.BaseDie.hash": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.BaseDie.lowest": {"tf": 1}, "icepool.BaseDie.highest": {"tf": 1}, "icepool.BaseDie.cmp": {"tf": 1}, "icepool.BaseDie.hash": {"tf": 1}, "icepool.lowest": {"tf": 1}, "icepool.highest": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}}, "df": 8, "s": {"docs": {"icepool.BaseDie.key_tuple": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1}}, "df": 2}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"icepool": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.sub": {"tf": 1}, "icepool.BaseDie.explode": {"tf": 1}, "icepool.BaseDie.bool": {"tf": 1}, "icepool.ScalarDie.if_else": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}, "icepool.BaseDie.zero": {"tf": 1}, "icepool.align": {"tf": 1}, "icepool.dice_with_common_ndim": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 6}}}}}, "s": {"docs": {"icepool.BaseDie": {"tf": 1}, "icepool.BaseDie.clip": {"tf": 1}, "icepool.Pool": {"tf": 1.7320508075688772}, "icepool.EvalPool": {"tf": 1.4142135623730951}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"icepool.EvalPool.next_state": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1}, "icepool.EvalPool.ndim": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 5}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.ndim": {"tf": 1}, "icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.BaseDie.explode": {"tf": 1}, "icepool.EmptyDie.ndim": {"tf": 1}, "icepool.ScalarDie.ndim": {"tf": 1}, "icepool.ScalarDie.cartesian_product": {"tf": 1.4142135623730951}, "icepool.VectorDie.ndim": {"tf": 1}}, "df": 8}}}}}}}, "r": {"docs": {}, "df": 0, "y": {"docs": {"icepool.apply": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.BaseDie.cvm_stat": {"tf": 1}}, "df": 1}}}, "g": {"docs": {"icepool.BaseDie.zero_outcome": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Pool": {"tf": 1.4142135623730951}, "icepool.EvalPool.final_outcome": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie.reroll_until": {"tf": 1}, "icepool.Pool": {"tf": 1}}, "df": 3}}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Pool": {"tf": 1}}, "df": 2, "n": {"docs": {"icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.reroll_until": {"tf": 1}, "icepool.BaseDie.truncate": {"tf": 1.4142135623730951}, "icepool.BaseDie.clip": {"tf": 1}, "icepool.BasePool.eval": {"tf": 1}, "icepool.standard_pool": {"tf": 1}, "icepool.EvalPool": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.__init__": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 10}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie.reduce": {"tf": 1}}, "df": 2}}, "r": {"docs": {"icepool.BaseDie.sign": {"tf": 1}, "icepool.Pool": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {"icepool.BaseDie.sweights": {"tf": 1}, "icepool.BaseDie.sf": {"tf": 1}, "icepool.BaseDie.weight_ge": {"tf": 1}, "icepool.BaseDie.weight_gt": {"tf": 1}, "icepool.BaseDie.nearest_ge": {"tf": 1}, "icepool.BaseDie.cmp": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1.4142135623730951}}, "df": 8}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"icepool": {"tf": 1}, "icepool.Die": {"tf": 1}, "icepool.BaseDie": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.reroll_until": {"tf": 1}}, "df": 2}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"icepool.BaseDie.reroll_until": {"tf": 1.7320508075688772}, "icepool.BaseDie.sub": {"tf": 1}}, "df": 2}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.BaseDie.sub": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.BaseDie.key_tuple": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"icepool.ScalarDie": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.BaseDie.equals": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.DicePool.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 2.23606797749979}, "icepool.BaseDie": {"tf": 1.4142135623730951}, "icepool.BaseDie.truncate": {"tf": 1}, "icepool.BaseDie.clip": {"tf": 1}, "icepool.BaseDie.sample": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1}, "icepool.ScalarDie.__init__": {"tf": 1}, "icepool.ScalarDie.median": {"tf": 1}, "icepool.ScalarDie.ppf": {"tf": 1}, "icepool.VectorDie": {"tf": 1}, "icepool.VectorDie.__init__": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.BasePool.eval": {"tf": 1}, "icepool.Pool": {"tf": 1.7320508075688772}, "icepool.standard_pool": {"tf": 1}, "icepool.DicePool.__init__": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.FindBestSet.next_state": {"tf": 1}}, "df": 18, "d": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}, "icepool.BaseDie.explode": {"tf": 1}, "icepool.BaseDie.hash": {"tf": 1}, "icepool.BasePool.eval": {"tf": 1}, "icepool.Pool": {"tf": 1.4142135623730951}, "icepool.DicePool.__init__": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1.7320508075688772}, "icepool.DicePool.has_counted_dice": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 11}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"icepool.BaseDie": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"icepool.BasePool.sum": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.EvalPool.final_outcome": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.ScalarDie.cartesian_product": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.BasePool.eval": {"tf": 1}, "icepool.EvalPool.bind_dice": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie.clip": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1.4142135623730951}}, "df": 3}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.BaseDie": {"tf": 1.4142135623730951}, "icepool.BaseDie.sub": {"tf": 1.4142135623730951}, "icepool.BaseDie.cmp": {"tf": 1.4142135623730951}, "icepool.BaseDie.hash": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1}, "icepool.VectorDie": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.EvalPool": {"tf": 1}}, "df": 9, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"icepool": {"tf": 1}, "icepool.Die": {"tf": 1}, "icepool.bernoulli": {"tf": 1}, "icepool.coin": {"tf": 1}, "icepool.BaseDie.ndim": {"tf": 1}, "icepool.BaseDie.pmf": {"tf": 1}, "icepool.BaseDie.cdf": {"tf": 1}, "icepool.BaseDie.sf": {"tf": 1}, "icepool.BaseDie.sign": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1}, "icepool.EmptyDie.ndim": {"tf": 1}, "icepool.ScalarDie.ndim": {"tf": 1}, "icepool.ScalarDie.d": {"tf": 1}, "icepool.VectorDie.ndim": {"tf": 1}, "icepool.EvalPool": {"tf": 1}}, "df": 15}}}}}}}}, "r": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}, "icepool.d": {"tf": 1}, "icepool.BaseDie": {"tf": 1}, "icepool.BaseDie.weight_eq": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep": {"tf": 1}, "icepool.ScalarDie.median": {"tf": 1}, "icepool.ScalarDie.ppf": {"tf": 1}, "icepool.ScalarDie.cartesian_product": {"tf": 1}, "icepool.from_rv": {"tf": 1}, "icepool.align": {"tf": 1}, "icepool.BasePool.eval": {"tf": 1.4142135623730951}, "icepool.Pool": {"tf": 1.4142135623730951}, "icepool.DicePool": {"tf": 1.4142135623730951}, "icepool.DicePool.__init__": {"tf": 1.4142135623730951}, "icepool.DicePool.num_dice": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 2.23606797749979}, "icepool.EvalPool": {"tf": 1.4142135623730951}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1.4142135623730951}, "icepool.EvalPool.direction": {"tf": 1}, "icepool.EvalPool.ndim": {"tf": 1.4142135623730951}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 23, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool": {"tf": 1}, "icepool.BaseDie.weights": {"tf": 1}, "icepool.BaseDie.pmf": {"tf": 1}, "icepool.BaseDie.cweights": {"tf": 1}, "icepool.BaseDie.sweights": {"tf": 1}, "icepool.BaseDie.cdf": {"tf": 1}, "icepool.BaseDie.sf": {"tf": 1}, "icepool.VectorDie": {"tf": 1.4142135623730951}, "icepool.DicePool": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1.4142135623730951}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 2}, "icepool.WrapFuncEval.next_state": {"tf": 1}, "icepool.FindBestRun.direction": {"tf": 1}}, "df": 14}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"icepool.BaseDie": {"tf": 1}, "icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1.7320508075688772}}, "df": 4, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 3}, "icepool.BaseDie": {"tf": 1.4142135623730951}, "icepool.BaseDie.weights": {"tf": 1}, "icepool.BaseDie.has_zero_weights": {"tf": 1}, "icepool.BaseDie.items": {"tf": 1}, "icepool.BaseDie.pmf": {"tf": 1}, "icepool.BaseDie.cweights": {"tf": 1}, "icepool.BaseDie.sweights": {"tf": 1}, "icepool.BaseDie.cdf": {"tf": 1}, "icepool.BaseDie.sf": {"tf": 1}, "icepool.BaseDie.weight_eq": {"tf": 1}, "icepool.BaseDie.weight_ne": {"tf": 1}, "icepool.BaseDie.weight_le": {"tf": 1}, "icepool.BaseDie.weight_lt": {"tf": 1}, "icepool.BaseDie.weight_ge": {"tf": 1}, "icepool.BaseDie.weight_gt": {"tf": 1}, "icepool.BaseDie.probability": {"tf": 1}, "icepool.BaseDie.mode": {"tf": 1}, "icepool.BaseDie.modal_weight": {"tf": 1}, "icepool.BaseDie.min_outcome": {"tf": 1}, "icepool.BaseDie.max_outcome": {"tf": 1}, "icepool.BaseDie.nearest_le": {"tf": 1.4142135623730951}, "icepool.BaseDie.nearest_ge": {"tf": 1.4142135623730951}, "icepool.BaseDie.reroll": {"tf": 1.4142135623730951}, "icepool.BaseDie.reroll_until": {"tf": 1}, "icepool.BaseDie.truncate": {"tf": 1}, "icepool.BaseDie.clip": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.BaseDie.explode": {"tf": 1.4142135623730951}, "icepool.BaseDie.lowest": {"tf": 1.4142135623730951}, "icepool.BaseDie.highest": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep": {"tf": 2}, "icepool.BaseDie.keep_highest": {"tf": 2}, "icepool.BaseDie.keep_lowest": {"tf": 2}, "icepool.BaseDie.zero": {"tf": 1.7320508075688772}, "icepool.BaseDie.zero_outcome": {"tf": 1}, "icepool.BaseDie.cmp": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1.7320508075688772}, "icepool.VectorDie": {"tf": 1}, "icepool.lowest": {"tf": 1.4142135623730951}, "icepool.highest": {"tf": 1.4142135623730951}, "icepool.max_outcome": {"tf": 1}, "icepool.min_outcome": {"tf": 1}, "icepool.apply": {"tf": 1.4142135623730951}, "icepool.BasePool.eval": {"tf": 1}, "icepool.Pool": {"tf": 2.449489742783178}, "icepool.EvalPool": {"tf": 2}, "icepool.EvalPool.next_state": {"tf": 3}, "icepool.EvalPool.final_outcome": {"tf": 2}, "icepool.EvalPool.eval": {"tf": 1}, "icepool.WrapFuncEval.__init__": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 3}, "icepool.FindBestSet": {"tf": 1.4142135623730951}, "icepool.FindBestRun": {"tf": 1.4142135623730951}, "icepool.FindBestRun.next_state": {"tf": 1}}, "df": 55, "s": {"docs": {"icepool": {"tf": 1}, "icepool.Die": {"tf": 1.7320508075688772}, "icepool.standard": {"tf": 1}, "icepool.BaseDie": {"tf": 2.6457513110645907}, "icepool.BaseDie.markdown": {"tf": 1}, "icepool.BaseDie.outcomes": {"tf": 1}, "icepool.BaseDie.num_outcomes": {"tf": 1}, "icepool.BaseDie.is_empty": {"tf": 1}, "icepool.BaseDie.denominator": {"tf": 1}, "icepool.BaseDie.total_weight": {"tf": 1}, "icepool.BaseDie.reroll": {"tf": 2.23606797749979}, "icepool.BaseDie.reroll_until": {"tf": 2.23606797749979}, "icepool.BaseDie.truncate": {"tf": 1.7320508075688772}, "icepool.BaseDie.clip": {"tf": 1.7320508075688772}, "icepool.BaseDie.cond": {"tf": 1.4142135623730951}, "icepool.BaseDie.set_outcomes": {"tf": 1.7320508075688772}, "icepool.BaseDie.trim": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 3.3166247903554}, "icepool.BaseDie.explode": {"tf": 2}, "icepool.BaseDie.keep": {"tf": 2}, "icepool.BaseDie.keep_highest": {"tf": 2}, "icepool.BaseDie.keep_lowest": {"tf": 2}, "icepool.BaseDie.zero": {"tf": 1}, "icepool.BaseDie.zero_outcome": {"tf": 1}, "icepool.BaseDie.bool": {"tf": 1}, "icepool.BaseDie.sign": {"tf": 1}, "icepool.BaseDie.cmp": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1}, "icepool.EmptyDie": {"tf": 1}, "icepool.EmptyDie.markdown": {"tf": 1}, "icepool.ScalarDie": {"tf": 1.4142135623730951}, "icepool.ScalarDie.__init__": {"tf": 1}, "icepool.ScalarDie.d": {"tf": 1}, "icepool.ScalarDie.median_left": {"tf": 1}, "icepool.ScalarDie.median_right": {"tf": 1}, "icepool.ScalarDie.median": {"tf": 1.4142135623730951}, "icepool.ScalarDie.ppf_left": {"tf": 1}, "icepool.ScalarDie.ppf_right": {"tf": 1}, "icepool.ScalarDie.ppf": {"tf": 1.4142135623730951}, "icepool.ScalarDie.markdown": {"tf": 1}, "icepool.VectorDie": {"tf": 1}, "icepool.VectorDie.__init__": {"tf": 1}, "icepool.from_rv": {"tf": 1.7320508075688772}, "icepool.align": {"tf": 1}, "icepool.align_range": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.BasePool.outcomes": {"tf": 1}, "icepool.Pool": {"tf": 2}, "icepool.DicePool": {"tf": 1}, "icepool.DicePool.outcomes": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.DicePool.truncate_min": {"tf": 1}, "icepool.DicePool.truncate_max": {"tf": 1}, "icepool.DicePool.sample": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 2.449489742783178}, "icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1.7320508075688772}, "icepool.EvalPool.eval": {"tf": 2}, "icepool.WrapFuncEval.next_state": {"tf": 2.449489742783178}, "icepool.FindBestSet": {"tf": 1}, "icepool.FindBestRun": {"tf": 1.4142135623730951}, "icepool.FindBestRun.direction": {"tf": 1}}, "df": 62}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.truncate": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"icepool.EvalPool.ndim": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"icepool.apply": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {"icepool.Die": {"tf": 4.898979485566356}, "icepool.BaseDie": {"tf": 1.4142135623730951}, "icepool.BaseDie.ndim": {"tf": 1}, "icepool.BaseDie.markdown": {"tf": 1}, "icepool.BaseDie.outcomes": {"tf": 1}, "icepool.BaseDie.num_outcomes": {"tf": 1}, "icepool.BaseDie.weights": {"tf": 1}, "icepool.BaseDie.denominator": {"tf": 1}, "icepool.BaseDie.total_weight": {"tf": 1}, "icepool.BaseDie.pmf": {"tf": 1.4142135623730951}, "icepool.BaseDie.cdf": {"tf": 1.4142135623730951}, "icepool.BaseDie.sf": {"tf": 1.4142135623730951}, "icepool.BaseDie.weight_eq": {"tf": 1}, "icepool.BaseDie.probability": {"tf": 1}, "icepool.BaseDie.mode": {"tf": 1}, "icepool.BaseDie.modal_weight": {"tf": 1}, "icepool.BaseDie.cvm_stat": {"tf": 1}, "icepool.BaseDie.reroll": {"tf": 1.7320508075688772}, "icepool.BaseDie.reroll_until": {"tf": 2.23606797749979}, "icepool.BaseDie.truncate": {"tf": 1.4142135623730951}, "icepool.BaseDie.clip": {"tf": 1.4142135623730951}, "icepool.BaseDie.set_outcomes": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 2.449489742783178}, "icepool.BaseDie.explode": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 2.23606797749979}, "icepool.BaseDie.keep_highest": {"tf": 2.449489742783178}, "icepool.BaseDie.keep_lowest": {"tf": 2.449489742783178}, "icepool.BaseDie.zero": {"tf": 1}, "icepool.BaseDie.bool": {"tf": 1}, "icepool.BaseDie.cmp": {"tf": 1}, "icepool.BaseDie.sample": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1}, "icepool.EmptyDie.ndim": {"tf": 1}, "icepool.EmptyDie.markdown": {"tf": 1}, "icepool.ScalarDie.__init__": {"tf": 1}, "icepool.ScalarDie.ndim": {"tf": 1}, "icepool.ScalarDie.if_else": {"tf": 1}, "icepool.ScalarDie.median_left": {"tf": 1}, "icepool.ScalarDie.median_right": {"tf": 1}, "icepool.ScalarDie.median": {"tf": 1}, "icepool.ScalarDie.ppf_left": {"tf": 1.4142135623730951}, "icepool.ScalarDie.ppf_right": {"tf": 1.4142135623730951}, "icepool.ScalarDie.ppf": {"tf": 1.4142135623730951}, "icepool.ScalarDie.cartesian_product": {"tf": 2}, "icepool.ScalarDie.markdown": {"tf": 1}, "icepool.VectorDie.__init__": {"tf": 1.7320508075688772}, "icepool.VectorDie.ndim": {"tf": 1}, "icepool.VectorDie.marginal": {"tf": 1}, "icepool.from_rv": {"tf": 1.7320508075688772}, "icepool.align": {"tf": 2.449489742783178}, "icepool.align_range": {"tf": 1}, "icepool.apply": {"tf": 2.6457513110645907}, "icepool.dice_with_common_ndim": {"tf": 1}, "icepool.BasePool": {"tf": 1.4142135623730951}, "icepool.BasePool.outcomes": {"tf": 1}, "icepool.Pool": {"tf": 3.7416573867739413}, "icepool.standard_pool": {"tf": 2.23606797749979}, "icepool.DicePool": {"tf": 2}, "icepool.DicePool.__init__": {"tf": 2}, "icepool.DicePool.die": {"tf": 1}, "icepool.DicePool.outcomes": {"tf": 1}, "icepool.DicePool.count_dice": {"tf": 1}, "icepool.DicePool.num_dice": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 3.1622776601683795}, "icepool.DicePool.truncate_min": {"tf": 1}, "icepool.DicePool.truncate_max": {"tf": 1}, "icepool.DicePool.has_counted_dice": {"tf": 1.4142135623730951}, "icepool.DicePool.sample": {"tf": 1}, "icepool.EvalPool": {"tf": 2.6457513110645907}, "icepool.EvalPool.next_state": {"tf": 2.6457513110645907}, "icepool.EvalPool.final_outcome": {"tf": 2}, "icepool.EvalPool.direction": {"tf": 1.4142135623730951}, "icepool.EvalPool.ndim": {"tf": 2.449489742783178}, "icepool.EvalPool.eval": {"tf": 2.8284271247461903}, "icepool.EvalPool.bind_dice": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 2.6457513110645907}, "icepool.FindBestSet.next_state": {"tf": 1}}, "df": 77, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"icepool.EvalPool": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {"icepool.BaseDie.truncate": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1.4142135623730951}, "icepool.ScalarDie": {"tf": 1}, "icepool.VectorDie": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 2.8284271247461903}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 7, "e": {"docs": {"icepool.Die": {"tf": 1.7320508075688772}, "icepool.BaseDie.has_zero_weights": {"tf": 1}, "icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.reroll_until": {"tf": 1}, "icepool.BaseDie.truncate": {"tf": 1}, "icepool.BaseDie.clip": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1.4142135623730951}, "icepool.BaseDie.explode": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep_highest": {"tf": 1.7320508075688772}, "icepool.BaseDie.keep_lowest": {"tf": 1.7320508075688772}, "icepool.BaseDie.equals": {"tf": 1}, "icepool.ScalarDie.__init__": {"tf": 1}, "icepool.VectorDie.__init__": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.dice_with_common_ndim": {"tf": 1}, "icepool.Pool": {"tf": 1.4142135623730951}, "icepool.DicePool.set_count_dice": {"tf": 2.23606797749979}, "icepool.DicePool.truncate_min": {"tf": 1}, "icepool.DicePool.truncate_max": {"tf": 1}, "icepool.EvalPool": {"tf": 1.7320508075688772}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1}, "icepool.EvalPool.ndim": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}, "icepool.EvalPool.bind_dice": {"tf": 2}, "icepool.WrapFuncEval.next_state": {"tf": 1}, "icepool.FindBestSet.next_state": {"tf": 1}, "icepool.FindBestRun.next_state": {"tf": 1}}, "df": 30}, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 1}, "icepool.BasePool": {"tf": 1}, "icepool.DicePool": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1.7320508075688772}, "icepool.EvalPool": {"tf": 1.4142135623730951}, "icepool.FindBestRun.direction": {"tf": 1}}, "df": 7}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.DicePool.set_count_dice": {"tf": 1.7320508075688772}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1, "s": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.reroll_until": {"tf": 1}, "icepool.BaseDie.explode": {"tf": 1}}, "df": 4}, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1}, "icepool.EvalPool.ndim": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.EvalPool": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Pool": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.BaseDie.cond": {"tf": 1.4142135623730951}, "icepool.BaseDie.hash": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1}, "icepool.ScalarDie.if_else": {"tf": 1}, "icepool.Pool": {"tf": 1.4142135623730951}, "icepool.standard_pool": {"tf": 1}}, "df": 6, "s": {"docs": {"icepool.BaseDie": {"tf": 1}, "icepool.VectorDie": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"icepool.ScalarDie": {"tf": 1}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.reroll_until": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"icepool.BaseDie.sub": {"tf": 2}}, "df": 1}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.VectorDie": {"tf": 1}, "icepool.VectorDie.marginal": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"icepool.EvalPool": {"tf": 1}}, "df": 1}}}}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"icepool.from_rv": {"tf": 1.4142135623730951}, "icepool.EvalPool.next_state": {"tf": 1.4142135623730951}, "icepool.EvalPool.eval": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "w": {"docs": {}, "df": 0, "n": {"docs": {"icepool.BasePool.eval": {"tf": 1}}, "df": 1}}}, "a": {"docs": {"icepool": {"tf": 1}, "icepool.Die": {"tf": 4.47213595499958}, "icepool.standard": {"tf": 1.7320508075688772}, "icepool.d": {"tf": 2.449489742783178}, "icepool.bernoulli": {"tf": 1}, "icepool.coin": {"tf": 1}, "icepool.BaseDie": {"tf": 3}, "icepool.BaseDie.ndim": {"tf": 1.4142135623730951}, "icepool.BaseDie.markdown": {"tf": 1.7320508075688772}, "icepool.BaseDie.weight_eq": {"tf": 1}, "icepool.BaseDie.weight_ne": {"tf": 1}, "icepool.BaseDie.weight_le": {"tf": 1}, "icepool.BaseDie.weight_lt": {"tf": 1}, "icepool.BaseDie.weight_ge": {"tf": 1}, "icepool.BaseDie.weight_gt": {"tf": 1}, "icepool.BaseDie.probability": {"tf": 1}, "icepool.BaseDie.mode": {"tf": 1}, "icepool.BaseDie.scale_weights": {"tf": 1}, "icepool.BaseDie.reroll": {"tf": 2}, "icepool.BaseDie.reroll_until": {"tf": 1.7320508075688772}, "icepool.BaseDie.sub": {"tf": 2.23606797749979}, "icepool.BaseDie.explode": {"tf": 1.7320508075688772}, "icepool.BaseDie.pool": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 1.7320508075688772}, "icepool.BaseDie.keep_highest": {"tf": 1.7320508075688772}, "icepool.BaseDie.keep_lowest": {"tf": 1.7320508075688772}, "icepool.BaseDie.zero": {"tf": 1.4142135623730951}, "icepool.BaseDie.zero_outcome": {"tf": 1.4142135623730951}, "icepool.BaseDie.bool": {"tf": 1.4142135623730951}, "icepool.BaseDie.cmp": {"tf": 1}, "icepool.BaseDie.sample": {"tf": 1}, "icepool.BaseDie.key_tuple": {"tf": 1}, "icepool.BaseDie.hash": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1.7320508075688772}, "icepool.EmptyDie.ndim": {"tf": 1.4142135623730951}, "icepool.EmptyDie.markdown": {"tf": 1.7320508075688772}, "icepool.ScalarDie.__init__": {"tf": 1}, "icepool.ScalarDie.ndim": {"tf": 1.4142135623730951}, "icepool.ScalarDie.d": {"tf": 1.4142135623730951}, "icepool.ScalarDie.if_else": {"tf": 1}, "icepool.ScalarDie.ppf_left": {"tf": 1}, "icepool.ScalarDie.ppf_right": {"tf": 1}, "icepool.ScalarDie.ppf": {"tf": 1}, "icepool.ScalarDie.cartesian_product": {"tf": 1.4142135623730951}, "icepool.ScalarDie.markdown": {"tf": 1.7320508075688772}, "icepool.VectorDie": {"tf": 1}, "icepool.VectorDie.__init__": {"tf": 1}, "icepool.VectorDie.ndim": {"tf": 1.4142135623730951}, "icepool.VectorDie.dim": {"tf": 1}, "icepool.VectorDie.all": {"tf": 1}, "icepool.VectorDie.any": {"tf": 1}, "icepool.VectorDie.markdown": {"tf": 1}, "icepool.from_cweights": {"tf": 1}, "icepool.from_sweights": {"tf": 1}, "icepool.from_rv": {"tf": 1.7320508075688772}, "icepool.align": {"tf": 1.4142135623730951}, "icepool.apply": {"tf": 1.4142135623730951}, "icepool.dice_with_common_ndim": {"tf": 1.4142135623730951}, "icepool.BasePool": {"tf": 1.7320508075688772}, "icepool.BasePool.eval": {"tf": 1.7320508075688772}, "icepool.BasePool.sum": {"tf": 1}, "icepool.Pool": {"tf": 3}, "icepool.standard_pool": {"tf": 1.4142135623730951}, "icepool.DicePool": {"tf": 2}, "icepool.DicePool.__init__": {"tf": 1.7320508075688772}, "icepool.DicePool.count_dice": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 3.4641016151377544}, "icepool.DicePool.truncate_min": {"tf": 1.4142135623730951}, "icepool.DicePool.truncate_max": {"tf": 1.4142135623730951}, "icepool.DicePool.has_counted_dice": {"tf": 1}, "icepool.DicePool.sample": {"tf": 1.7320508075688772}, "icepool.EvalPool": {"tf": 2}, "icepool.EvalPool.next_state": {"tf": 2.449489742783178}, "icepool.EvalPool.final_outcome": {"tf": 3}, "icepool.EvalPool.direction": {"tf": 1.7320508075688772}, "icepool.EvalPool.ndim": {"tf": 1.4142135623730951}, "icepool.EvalPool.eval": {"tf": 3.3166247903554}, "icepool.EvalPool.bind_dice": {"tf": 1.4142135623730951}, "icepool.WrapFuncEval": {"tf": 1.4142135623730951}, "icepool.WrapFuncEval.__init__": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 2.449489742783178}, "icepool.SumPool": {"tf": 1.4142135623730951}, "icepool.FindBestSet": {"tf": 1.4142135623730951}, "icepool.FindBestRun": {"tf": 1.4142135623730951}}, "df": 84, "l": {"docs": {}, "df": 0, "l": {"docs": {"icepool": {"tf": 1}, "icepool.Die": {"tf": 1.4142135623730951}, "icepool.BaseDie": {"tf": 1}, "icepool.BaseDie.items": {"tf": 1}, "icepool.BaseDie.denominator": {"tf": 1}, "icepool.BaseDie.total_weight": {"tf": 1}, "icepool.BaseDie.reduce": {"tf": 1}, "icepool.BaseDie.scale_weights": {"tf": 1}, "icepool.BaseDie.trim": {"tf": 1}, "icepool.BaseDie.lowest": {"tf": 1.4142135623730951}, "icepool.BaseDie.highest": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep": {"tf": 2}, "icepool.BaseDie.keep_highest": {"tf": 1.7320508075688772}, "icepool.BaseDie.keep_lowest": {"tf": 1.7320508075688772}, "icepool.BaseDie.zero": {"tf": 1}, "icepool.BaseDie.bool": {"tf": 1}, "icepool.BaseDie.sign": {"tf": 1}, "icepool.VectorDie.all": {"tf": 1}, "icepool.align": {"tf": 1.4142135623730951}, "icepool.align_range": {"tf": 1.4142135623730951}, "icepool.lowest": {"tf": 1.4142135623730951}, "icepool.highest": {"tf": 1.4142135623730951}, "icepool.apply": {"tf": 1}, "icepool.Pool": {"tf": 2}, "icepool.DicePool.set_count_dice": {"tf": 1.4142135623730951}, "icepool.EvalPool": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1.4142135623730951}, "icepool.EvalPool.final_outcome": {"tf": 1.4142135623730951}, "icepool.EvalPool.eval": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1.4142135623730951}}, "df": 30, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 2}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Die": {"tf": 1}, "icepool.standard": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.DicePool.truncate_min": {"tf": 1}, "icepool.DicePool.truncate_max": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1.4142135623730951}}, "df": 6}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Die": {"tf": 1}, "icepool.d": {"tf": 1}, "icepool.ScalarDie.cartesian_product": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"icepool.BaseDie": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.align": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Pool": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {"icepool.BaseDie": {"tf": 1}, "icepool.BaseDie.cond": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1}, "icepool.ScalarDie.if_else": {"tf": 1}, "icepool.standard_pool": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1.4142135623730951}}, "df": 6}}, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {"icepool.BaseDie.keep_highest_single": {"tf": 1}, "icepool.BaseDie.keep_lowest_single": {"tf": 1}, "icepool.BasePool": {"tf": 1}}, "df": 3}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.EvalPool": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"icepool.Die": {"tf": 2.23606797749979}, "icepool.BaseDie": {"tf": 1}, "icepool.BaseDie.markdown": {"tf": 1}, "icepool.BaseDie.clip": {"tf": 1}, "icepool.BaseDie.cond": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1.7320508075688772}, "icepool.BaseDie.pool": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 1}, "icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}, "icepool.BaseDie.bool": {"tf": 1}, "icepool.BaseDie.key_tuple": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1}, "icepool.EmptyDie.markdown": {"tf": 1}, "icepool.ScalarDie.if_else": {"tf": 1.4142135623730951}, "icepool.ScalarDie.cartesian_product": {"tf": 1}, "icepool.ScalarDie.markdown": {"tf": 1}, "icepool.VectorDie.markdown": {"tf": 1}, "icepool.from_rv": {"tf": 1.4142135623730951}, "icepool.BasePool": {"tf": 1}, "icepool.Pool": {"tf": 1.7320508075688772}, "icepool.standard_pool": {"tf": 1.4142135623730951}, "icepool.DicePool.set_count_dice": {"tf": 2.8284271247461903}, "icepool.EvalPool": {"tf": 1.4142135623730951}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1.4142135623730951}, "icepool.EvalPool.ndim": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}, "icepool.EvalPool.bind_dice": {"tf": 1}, "icepool.WrapFuncEval.__init__": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 31, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1.7320508075688772}, "icepool.WrapFuncEval.next_state": {"tf": 1}, "icepool.FindBestRun.direction": {"tf": 1}}, "df": 6}}}}}}}}, "n": {"docs": {"icepool.Die": {"tf": 2.23606797749979}, "icepool.d": {"tf": 1.4142135623730951}, "icepool.BaseDie.ndim": {"tf": 1}, "icepool.BaseDie.outcomes": {"tf": 1}, "icepool.BaseDie.weights": {"tf": 1}, "icepool.BaseDie.reroll": {"tf": 1.4142135623730951}, "icepool.BaseDie.reroll_until": {"tf": 1.4142135623730951}, "icepool.BaseDie.explode": {"tf": 1.4142135623730951}, "icepool.EmptyDie.ndim": {"tf": 1}, "icepool.ScalarDie.ndim": {"tf": 1}, "icepool.ScalarDie.d": {"tf": 1}, "icepool.VectorDie": {"tf": 1}, "icepool.VectorDie.ndim": {"tf": 1}, "icepool.from_rv": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.BasePool.eval": {"tf": 1.7320508075688772}, "icepool.Pool": {"tf": 2}, "icepool.DicePool.set_count_dice": {"tf": 1.7320508075688772}, "icepool.EvalPool": {"tf": 1.4142135623730951}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 23, "d": {"docs": {"icepool": {"tf": 1.7320508075688772}, "icepool.Die": {"tf": 2.6457513110645907}, "icepool.bernoulli": {"tf": 1}, "icepool.coin": {"tf": 1}, "icepool.BaseDie": {"tf": 1.7320508075688772}, "icepool.BaseDie.ndim": {"tf": 1}, "icepool.BaseDie.markdown": {"tf": 1.4142135623730951}, "icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.reroll_until": {"tf": 1}, "icepool.BaseDie.cond": {"tf": 1}, "icepool.BaseDie.explode": {"tf": 1.4142135623730951}, "icepool.BaseDie.lowest": {"tf": 1}, "icepool.BaseDie.highest": {"tf": 1}, "icepool.BaseDie.repeat_and_sum": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep": {"tf": 1}, "icepool.BaseDie.keep_highest": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep_lowest": {"tf": 1.4142135623730951}, "icepool.BaseDie.sign": {"tf": 1.4142135623730951}, "icepool.BaseDie.cmp": {"tf": 1.4142135623730951}, "icepool.BaseDie.equals": {"tf": 1.4142135623730951}, "icepool.EmptyDie.ndim": {"tf": 1}, "icepool.EmptyDie.markdown": {"tf": 1.4142135623730951}, "icepool.ScalarDie": {"tf": 1}, "icepool.ScalarDie.ndim": {"tf": 1}, "icepool.ScalarDie.d": {"tf": 1}, "icepool.ScalarDie.cartesian_product": {"tf": 1}, "icepool.ScalarDie.markdown": {"tf": 1.4142135623730951}, "icepool.VectorDie": {"tf": 1}, "icepool.VectorDie.ndim": {"tf": 1}, "icepool.lowest": {"tf": 1}, "icepool.highest": {"tf": 1}, "icepool.apply": {"tf": 1.7320508075688772}, "icepool.dice_with_common_ndim": {"tf": 1}, "icepool.BasePool": {"tf": 1}, "icepool.BasePool.eval": {"tf": 1.4142135623730951}, "icepool.Pool": {"tf": 2.449489742783178}, "icepool.standard_pool": {"tf": 1.4142135623730951}, "icepool.DicePool": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 2.23606797749979}, "icepool.EvalPool": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1.4142135623730951}, "icepool.EvalPool.final_outcome": {"tf": 1.4142135623730951}, "icepool.EvalPool.direction": {"tf": 1.4142135623730951}, "icepool.EvalPool.ndim": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}, "icepool.EvalPool.bind_dice": {"tf": 1}, "icepool.WrapFuncEval.__init__": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1.4142135623730951}}, "df": 48, "/": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.BaseDie.set_outcomes": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {"icepool.BaseDie": {"tf": 1.4142135623730951}, "icepool.BaseDie.modal_weight": {"tf": 1}, "icepool.ScalarDie.cartesian_product": {"tf": 1.4142135623730951}, "icepool.VectorDie.any": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.DicePool.has_counted_dice": {"tf": 1}, "icepool.EvalPool": {"tf": 1}}, "df": 7}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"icepool.DicePool.set_count_dice": {"tf": 1.7320508075688772}}, "df": 1, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Pool": {"tf": 1.4142135623730951}}, "df": 2, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.ScalarDie.cartesian_product": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"icepool.DicePool.set_count_dice": {"tf": 1.4142135623730951}}, "df": 1}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.BaseDie.reroll_until": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}, "icepool.standard": {"tf": 1}, "icepool.BaseDie": {"tf": 1.4142135623730951}, "icepool.BaseDie.mode": {"tf": 1}, "icepool.BaseDie.truncate": {"tf": 1}, "icepool.BaseDie.clip": {"tf": 1}, "icepool.BaseDie.set_outcomes": {"tf": 1.4142135623730951}, "icepool.BaseDie.zero_outcome": {"tf": 1}, "icepool.BaseDie.cmp": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1}, "icepool.ScalarDie": {"tf": 1.4142135623730951}, "icepool.ScalarDie.__init__": {"tf": 1}, "icepool.ScalarDie.cartesian_product": {"tf": 1}, "icepool.VectorDie": {"tf": 1.4142135623730951}, "icepool.VectorDie.__init__": {"tf": 1}, "icepool.VectorDie.all": {"tf": 1}, "icepool.align": {"tf": 1}, "icepool.BasePool": {"tf": 1}, "icepool.Pool": {"tf": 2}, "icepool.standard_pool": {"tf": 1}, "icepool.DicePool": {"tf": 1.4142135623730951}, "icepool.DicePool.set_count_dice": {"tf": 2}, "icepool.DicePool.truncate_min": {"tf": 1.4142135623730951}, "icepool.DicePool.truncate_max": {"tf": 1.4142135623730951}, "icepool.DicePool.has_counted_dice": {"tf": 1.4142135623730951}, "icepool.EvalPool": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1.4142135623730951}, "icepool.EvalPool.eval": {"tf": 1.7320508075688772}, "icepool.WrapFuncEval.next_state": {"tf": 1.4142135623730951}, "icepool.FindBestSet": {"tf": 1}, "icepool.FindBestRun": {"tf": 1}}, "df": 31}, "g": {"docs": {"icepool.d": {"tf": 1}, "icepool.dice_with_common_ndim": {"tf": 1}}, "df": 2, "s": {"docs": {"icepool.Die": {"tf": 2.23606797749979}, "icepool.d": {"tf": 1}, "icepool.BaseDie.markdown": {"tf": 1}, "icepool.BaseDie.pmf": {"tf": 1}, "icepool.BaseDie.cdf": {"tf": 1}, "icepool.BaseDie.sf": {"tf": 1}, "icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.reroll_until": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.BaseDie.explode": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 1}, "icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1}, "icepool.EmptyDie.markdown": {"tf": 1}, "icepool.ScalarDie.__init__": {"tf": 1}, "icepool.ScalarDie.if_else": {"tf": 1}, "icepool.ScalarDie.cartesian_product": {"tf": 1}, "icepool.ScalarDie.markdown": {"tf": 1}, "icepool.VectorDie.__init__": {"tf": 1}, "icepool.from_rv": {"tf": 1}, "icepool.align": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.dice_with_common_ndim": {"tf": 1.7320508075688772}, "icepool.BasePool.eval": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.standard_pool": {"tf": 1}, "icepool.DicePool.__init__": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.DicePool.truncate_min": {"tf": 1}, "icepool.DicePool.truncate_max": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1}, "icepool.EvalPool.ndim": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}, "icepool.EvalPool.bind_dice": {"tf": 1}, "icepool.WrapFuncEval.__init__": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 39}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die": {"tf": 2.6457513110645907}, "icepool.d": {"tf": 1.4142135623730951}, "icepool.BaseDie.nearest_le": {"tf": 1}, "icepool.BaseDie.nearest_ge": {"tf": 1}, "icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.cond": {"tf": 1.4142135623730951}, "icepool.BaseDie.set_outcomes": {"tf": 1.4142135623730951}, "icepool.BaseDie.sub": {"tf": 1.4142135623730951}, "icepool.BaseDie.explode": {"tf": 1}, "icepool.VectorDie": {"tf": 1}, "icepool.apply": {"tf": 1.4142135623730951}, "icepool.Pool": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.EvalPool.bind_dice": {"tf": 1}}, "df": 14, "s": {"docs": {"icepool.Die": {"tf": 2.449489742783178}, "icepool.BaseDie": {"tf": 1}, "icepool.BaseDie.truncate": {"tf": 1}, "icepool.BaseDie.clip": {"tf": 1}, "icepool.BaseDie.zero": {"tf": 1}, "icepool.dice_with_common_ndim": {"tf": 1.4142135623730951}, "icepool.Pool": {"tf": 2}, "icepool.WrapFuncEval.__init__": {"tf": 1}}, "df": 8}}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"icepool.EvalPool": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 4, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.EvalPool.eval": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.truncate": {"tf": 1}, "icepool.BaseDie.clip": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.apply": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}, "icepool.BaseDie": {"tf": 1}, "icepool.BaseDie.has_zero_weights": {"tf": 1}, "icepool.BaseDie.clip": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.DicePool.__init__": {"tf": 1.7320508075688772}, "icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.EvalPool": {"tf": 1}, "icepool.FindBestRun.next_state": {"tf": 1}}, "df": 9}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1}, "icepool.EvalPool.ndim": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1}, "icepool.DicePool.truncate_max": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"icepool.SumPool.direction": {"tf": 1}, "icepool.FindBestSet.direction": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"icepool.BaseDie.repeat_and_sum": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"icepool.BaseDie": {"tf": 1}, "icepool.BasePool": {"tf": 1}, "icepool.EvalPool": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.ks_stat": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.EvalPool": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.BaseDie.min_outcome": {"tf": 1}, "icepool.BaseDie.max_outcome": {"tf": 1}, "icepool.BaseDie.lowest": {"tf": 1}, "icepool.BaseDie.highest": {"tf": 1}, "icepool.lowest": {"tf": 1}, "icepool.highest": {"tf": 1}, "icepool.max_outcome": {"tf": 1}, "icepool.min_outcome": {"tf": 1}}, "df": 8}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.BaseDie.clip": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {"icepool.BaseDie.set_outcomes": {"tf": 1}, "icepool.SumPool.next_state": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.BaseDie.explode": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.BaseDie.explode": {"tf": 1}, "icepool.ScalarDie.cartesian_product": {"tf": 1}}, "df": 2}}}}}}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"icepool.BaseDie.explode": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Pool": {"tf": 1}, "icepool.standard_pool": {"tf": 1}, "icepool.DicePool": {"tf": 1}, "icepool.EvalPool": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}}, "df": 5}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"icepool.EvalPool": {"tf": 1}}, "df": 1}}}}}}, "k": {"docs": {}, "df": 0, "a": {"docs": {"icepool.FindBestRun": {"tf": 1}}, "df": 1}}}, "i": {"docs": {"icepool.BaseDie.pmf": {"tf": 1}, "icepool.BaseDie.cdf": {"tf": 1}, "icepool.BaseDie.sf": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep_highest": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep_lowest": {"tf": 1.4142135623730951}, "icepool.VectorDie": {"tf": 1}}, "df": 7, "s": {"docs": {"icepool": {"tf": 1}, "icepool.Die": {"tf": 3.872983346207417}, "icepool.d": {"tf": 1.7320508075688772}, "icepool.BaseDie": {"tf": 1.7320508075688772}, "icepool.BaseDie.ndim": {"tf": 1}, "icepool.BaseDie.nearest_le": {"tf": 1.4142135623730951}, "icepool.BaseDie.nearest_ge": {"tf": 1.4142135623730951}, "icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.truncate": {"tf": 1}, "icepool.BaseDie.clip": {"tf": 1.7320508075688772}, "icepool.BaseDie.sub": {"tf": 1.4142135623730951}, "icepool.BaseDie.explode": {"tf": 1}, "icepool.BaseDie.lowest": {"tf": 1}, "icepool.BaseDie.highest": {"tf": 1}, "icepool.BaseDie.repeat_and_sum": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 1.4142135623730951}, "icepool.BaseDie.zero": {"tf": 1}, "icepool.BaseDie.bool": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1}, "icepool.EmptyDie.ndim": {"tf": 1}, "icepool.ScalarDie.ndim": {"tf": 1}, "icepool.ScalarDie.d": {"tf": 1.4142135623730951}, "icepool.ScalarDie.cartesian_product": {"tf": 1}, "icepool.VectorDie.ndim": {"tf": 1}, "icepool.VectorDie.any": {"tf": 1}, "icepool.from_rv": {"tf": 1}, "icepool.lowest": {"tf": 1}, "icepool.highest": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.BasePool": {"tf": 1}, "icepool.BasePool.eval": {"tf": 1}, "icepool.Pool": {"tf": 2.23606797749979}, "icepool.DicePool": {"tf": 1.4142135623730951}, "icepool.DicePool.set_count_dice": {"tf": 3}, "icepool.DicePool.has_counted_dice": {"tf": 1}, "icepool.EvalPool": {"tf": 2}, "icepool.EvalPool.next_state": {"tf": 1.7320508075688772}, "icepool.EvalPool.final_outcome": {"tf": 1.4142135623730951}, "icepool.EvalPool.direction": {"tf": 1.7320508075688772}, "icepool.EvalPool.eval": {"tf": 1.4142135623730951}, "icepool.WrapFuncEval.next_state": {"tf": 1.7320508075688772}, "icepool.FindBestSet.next_state": {"tf": 1}}, "df": 42}, "n": {"docs": {"icepool": {"tf": 1.4142135623730951}, "icepool.Die": {"tf": 2.449489742783178}, "icepool.BaseDie": {"tf": 1.7320508075688772}, "icepool.BaseDie.weights": {"tf": 1}, "icepool.BaseDie.pmf": {"tf": 1.4142135623730951}, "icepool.BaseDie.cweights": {"tf": 1}, "icepool.BaseDie.sweights": {"tf": 1}, "icepool.BaseDie.cdf": {"tf": 1.4142135623730951}, "icepool.BaseDie.sf": {"tf": 1.4142135623730951}, "icepool.BaseDie.truncate": {"tf": 1}, "icepool.BaseDie.clip": {"tf": 1}, "icepool.BaseDie.set_outcomes": {"tf": 1.4142135623730951}, "icepool.ScalarDie.__init__": {"tf": 1}, "icepool.ScalarDie.median": {"tf": 1}, "icepool.ScalarDie.ppf": {"tf": 1}, "icepool.ScalarDie.cartesian_product": {"tf": 1}, "icepool.VectorDie": {"tf": 1}, "icepool.VectorDie.__init__": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.BasePool": {"tf": 1}, "icepool.BasePool.eval": {"tf": 1.7320508075688772}, "icepool.BasePool.sum": {"tf": 1}, "icepool.Pool": {"tf": 2.23606797749979}, "icepool.standard_pool": {"tf": 1}, "icepool.DicePool": {"tf": 1.7320508075688772}, "icepool.DicePool.num_dice": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 2.23606797749979}, "icepool.DicePool.truncate_min": {"tf": 1.4142135623730951}, "icepool.DicePool.truncate_max": {"tf": 1.4142135623730951}, "icepool.EvalPool": {"tf": 1.4142135623730951}, "icepool.EvalPool.next_state": {"tf": 2.23606797749979}, "icepool.EvalPool.direction": {"tf": 1.7320508075688772}, "icepool.EvalPool.bind_dice": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 2.23606797749979}, "icepool.SumPool": {"tf": 1}, "icepool.FindBestSet": {"tf": 1}, "icepool.FindBestRun": {"tf": 1}, "icepool.FindBestRun.direction": {"tf": 1}}, "df": 38, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BasePool.eval": {"tf": 1.4142135623730951}, "icepool.Pool": {"tf": 1.4142135623730951}, "icepool.WrapFuncEval.__init__": {"tf": 1}}, "df": 4, "s": {"docs": {"icepool.Pool": {"tf": 1}, "icepool.EvalPool": {"tf": 1.7320508075688772}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"icepool.BaseDie.truncate": {"tf": 1}, "icepool.ScalarDie.__init__": {"tf": 1}, "icepool.ScalarDie.median": {"tf": 1}, "icepool.ScalarDie.ppf": {"tf": 1}, "icepool.VectorDie.__init__": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.DicePool.__init__": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}}, "df": 10}}}}}, "t": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}, "icepool.standard": {"tf": 1}, "icepool.d": {"tf": 1.4142135623730951}, "icepool.BaseDie": {"tf": 1}, "icepool.BaseDie.zero_outcome": {"tf": 1}, "icepool.ScalarDie.d": {"tf": 1}, "icepool.from_rv": {"tf": 1.4142135623730951}, "icepool.align_range": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1.4142135623730951}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}, "icepool.FindBestRun": {"tf": 1}}, "df": 13, "o": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie.outcomes": {"tf": 1}, "icepool.BaseDie.weights": {"tf": 1}, "icepool.ScalarDie.__init__": {"tf": 1}, "icepool.VectorDie.__init__": {"tf": 1}}, "df": 5}, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.standard": {"tf": 1}, "icepool.BaseDie.truncate": {"tf": 1}}, "df": 2, "s": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.BasePool": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"icepool.EvalPool": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 2}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Die": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.DicePool.count_dice": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1.7320508075688772}, "icepool.WrapFuncEval.next_state": {"tf": 1.7320508075688772}}, "df": 3}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {"icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.EvalPool": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"icepool.standard": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.markdown": {"tf": 1}, "icepool.EmptyDie.markdown": {"tf": 1}, "icepool.ScalarDie.markdown": {"tf": 1}, "icepool.dice_with_common_ndim": {"tf": 1}}, "df": 4, "d": {"docs": {"icepool.BaseDie.truncate": {"tf": 1}, "icepool.BaseDie.clip": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.BaseDie.num_outcomes": {"tf": 1}, "icepool.BasePool.outcomes": {"tf": 1}, "icepool.DicePool.outcomes": {"tf": 1}}, "df": 3}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.EvalPool": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"icepool.FindBestRun.next_state": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"icepool.EvalPool": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"icepool.BaseDie.lowest": {"tf": 1}, "icepool.BaseDie.highest": {"tf": 1}, "icepool.ScalarDie.cartesian_product": {"tf": 1.4142135623730951}, "icepool.lowest": {"tf": 1}, "icepool.highest": {"tf": 1}, "icepool.apply": {"tf": 1}}, "df": 6}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"icepool.ScalarDie.cartesian_product": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Pool": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 2}}}}}}}}}, "t": {"docs": {"icepool.Die": {"tf": 2.23606797749979}, "icepool.d": {"tf": 1}, "icepool.BaseDie": {"tf": 1.7320508075688772}, "icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.reroll_until": {"tf": 1}, "icepool.BaseDie.explode": {"tf": 1}, "icepool.ScalarDie.d": {"tf": 1.4142135623730951}, "icepool.ScalarDie.cartesian_product": {"tf": 1}, "icepool.BasePool.eval": {"tf": 1.4142135623730951}, "icepool.Pool": {"tf": 1}, "icepool.EvalPool": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 13, "s": {"docs": {"icepool.BasePool.eval": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"icepool.Die": {"tf": 2.23606797749979}, "icepool.d": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie": {"tf": 1}}, "df": 1}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.outcomes": {"tf": 1}, "icepool.BaseDie.weights": {"tf": 1}, "icepool.BaseDie.explode": {"tf": 1}, "icepool.ScalarDie.cartesian_product": {"tf": 1}, "icepool.from_rv": {"tf": 1}, "icepool.align": {"tf": 1}}, "df": 6}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Die": {"tf": 2.8284271247461903}, "icepool.standard": {"tf": 1.7320508075688772}, "icepool.BaseDie": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1.4142135623730951}, "icepool.BaseDie.pool": {"tf": 1}, "icepool.ScalarDie.__init__": {"tf": 1.4142135623730951}, "icepool.ScalarDie.if_else": {"tf": 1}, "icepool.VectorDie.__init__": {"tf": 1.4142135623730951}, "icepool.apply": {"tf": 1.4142135623730951}, "icepool.BasePool.sum": {"tf": 1}, "icepool.Pool": {"tf": 1.4142135623730951}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.EvalPool.bind_dice": {"tf": 1.4142135623730951}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 15}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die": {"tf": 1.7320508075688772}, "icepool.Pool": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.ScalarDie.__init__": {"tf": 1}, "icepool.VectorDie.__init__": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.BasePool": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.EvalPool": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie": {"tf": 1}, "icepool.EvalPool": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 2}}}}}}}}}}, "f": {"docs": {"icepool.Die": {"tf": 3.3166247903554}, "icepool.d": {"tf": 1.4142135623730951}, "icepool.BaseDie": {"tf": 1.4142135623730951}, "icepool.BaseDie.ndim": {"tf": 1}, "icepool.BaseDie.is_empty": {"tf": 1}, "icepool.BaseDie.pmf": {"tf": 1}, "icepool.BaseDie.cdf": {"tf": 1}, "icepool.BaseDie.sf": {"tf": 1}, "icepool.BaseDie.weight_eq": {"tf": 1}, "icepool.BaseDie.nearest_le": {"tf": 1}, "icepool.BaseDie.nearest_ge": {"tf": 1}, "icepool.BaseDie.reroll": {"tf": 2.23606797749979}, "icepool.BaseDie.reroll_until": {"tf": 1.7320508075688772}, "icepool.BaseDie.truncate": {"tf": 1.7320508075688772}, "icepool.BaseDie.clip": {"tf": 1.7320508075688772}, "icepool.BaseDie.set_outcomes": {"tf": 1.4142135623730951}, "icepool.BaseDie.sub": {"tf": 1.7320508075688772}, "icepool.BaseDie.explode": {"tf": 2}, "icepool.BaseDie.repeat_and_sum": {"tf": 1}, "icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}, "icepool.BaseDie.zero": {"tf": 1}, "icepool.BaseDie.sign": {"tf": 1.4142135623730951}, "icepool.BaseDie.equals": {"tf": 1.4142135623730951}, "icepool.EmptyDie.ndim": {"tf": 1}, "icepool.ScalarDie.ndim": {"tf": 1}, "icepool.ScalarDie.d": {"tf": 1}, "icepool.ScalarDie.if_else": {"tf": 1.7320508075688772}, "icepool.ScalarDie.median_left": {"tf": 1}, "icepool.ScalarDie.median_right": {"tf": 1}, "icepool.ScalarDie.median": {"tf": 1.4142135623730951}, "icepool.ScalarDie.ppf_left": {"tf": 1}, "icepool.ScalarDie.ppf_right": {"tf": 1}, "icepool.ScalarDie.ppf": {"tf": 1.4142135623730951}, "icepool.ScalarDie.cartesian_product": {"tf": 1}, "icepool.VectorDie.ndim": {"tf": 1}, "icepool.from_rv": {"tf": 1}, "icepool.align": {"tf": 1}, "icepool.apply": {"tf": 1.4142135623730951}, "icepool.dice_with_common_ndim": {"tf": 1}, "icepool.BasePool.eval": {"tf": 1}, "icepool.Pool": {"tf": 2.449489742783178}, "icepool.standard_pool": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 3.1622776601683795}, "icepool.DicePool.truncate_min": {"tf": 1.7320508075688772}, "icepool.DicePool.truncate_max": {"tf": 1.7320508075688772}, "icepool.EvalPool.next_state": {"tf": 1.7320508075688772}, "icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1.7320508075688772}, "icepool.EvalPool.ndim": {"tf": 1.4142135623730951}, "icepool.EvalPool.eval": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1.7320508075688772}, "icepool.FindBestSet.next_state": {"tf": 1}, "icepool.FindBestRun.next_state": {"tf": 1}}, "df": 54, "f": {"docs": {"icepool.BaseDie.markdown": {"tf": 1}, "icepool.BaseDie.has_zero_weights": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1}, "icepool.EmptyDie.markdown": {"tf": 1}, "icepool.ScalarDie.markdown": {"tf": 1}, "icepool.DicePool.has_counted_dice": {"tf": 1}}, "df": 6}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.BaseDie.key_tuple": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.DicePool": {"tf": 1}}, "df": 1}}}}}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"icepool": {"tf": 1.4142135623730951}}, "df": 1}}, "k": {"docs": {"icepool.BaseDie.hash": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.reroll_until": {"tf": 1}, "icepool.Pool": {"tf": 1.4142135623730951}, "icepool.standard_pool": {"tf": 1.4142135623730951}, "icepool.DicePool.set_count_dice": {"tf": 2.449489742783178}, "icepool.EvalPool.bind_dice": {"tf": 1.4142135623730951}}, "df": 6}}}, "n": {"docs": {"icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Die": {"tf": 1}, "icepool.ScalarDie.ppf_left": {"tf": 1}, "icepool.ScalarDie.ppf_right": {"tf": 1}, "icepool.ScalarDie.ppf": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.EvalPool": {"tf": 1}}, "df": 6, "s": {"docs": {"icepool.Die": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}, "icepool.BaseDie.truncate": {"tf": 1}, "icepool.BaseDie.clip": {"tf": 1}, "icepool.BasePool.eval": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}}, "df": 5}}, "s": {"docs": {"icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 2}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1}, "icepool.ScalarDie.cartesian_product": {"tf": 1}, "icepool.Pool": {"tf": 1}}, "df": 3}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"icepool.Die": {"tf": 1.7320508075688772}, "icepool.d": {"tf": 1.4142135623730951}, "icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.reroll_until": {"tf": 1}, "icepool.BaseDie.truncate": {"tf": 1}, "icepool.BaseDie.explode": {"tf": 1}, "icepool.ScalarDie.__init__": {"tf": 1}, "icepool.VectorDie": {"tf": 1}, "icepool.VectorDie.__init__": {"tf": 1}, "icepool.BasePool": {"tf": 1.4142135623730951}, "icepool.BasePool.eval": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.standard_pool": {"tf": 1}, "icepool.DicePool": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1.7320508075688772}, "icepool.DicePool.truncate_min": {"tf": 1}, "icepool.DicePool.truncate_max": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1}, "icepool.FindBestSet.next_state": {"tf": 1}}, "df": 19}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.zero_outcome": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.bool": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.VectorDie.all": {"tf": 1}, "icepool.VectorDie.any": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {"icepool.DicePool.has_counted_dice": {"tf": 1}, "icepool.EvalPool": {"tf": 1}}, "df": 2}, "r": {"docs": {}, "df": 0, "e": {"docs": {"icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"icepool.EvalPool.final_outcome": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Die": {"tf": 3.7416573867739413}, "icepool.BaseDie": {"tf": 1.4142135623730951}, "icepool.BaseDie.markdown": {"tf": 1.4142135623730951}, "icepool.BaseDie.pmf": {"tf": 1.4142135623730951}, "icepool.BaseDie.cdf": {"tf": 1.4142135623730951}, "icepool.BaseDie.sf": {"tf": 1.4142135623730951}, "icepool.BaseDie.reroll": {"tf": 1.4142135623730951}, "icepool.BaseDie.truncate": {"tf": 1}, "icepool.BaseDie.clip": {"tf": 1.4142135623730951}, "icepool.BaseDie.sub": {"tf": 2.23606797749979}, "icepool.BaseDie.explode": {"tf": 1.7320508075688772}, "icepool.BaseDie.keep": {"tf": 2}, "icepool.BaseDie.keep_highest": {"tf": 2}, "icepool.BaseDie.keep_lowest": {"tf": 2}, "icepool.BaseDie.zero": {"tf": 1}, "icepool.BaseDie.hash": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1}, "icepool.EmptyDie.markdown": {"tf": 1.4142135623730951}, "icepool.ScalarDie.median": {"tf": 1}, "icepool.ScalarDie.ppf": {"tf": 1}, "icepool.ScalarDie.markdown": {"tf": 1.4142135623730951}, "icepool.VectorDie.dim": {"tf": 1}, "icepool.from_rv": {"tf": 1.7320508075688772}, "icepool.apply": {"tf": 1}, "icepool.BasePool": {"tf": 1}, "icepool.Pool": {"tf": 2.449489742783178}, "icepool.standard_pool": {"tf": 1.4142135623730951}, "icepool.DicePool.set_count_dice": {"tf": 2.8284271247461903}, "icepool.DicePool.truncate_min": {"tf": 1.4142135623730951}, "icepool.DicePool.truncate_max": {"tf": 1.4142135623730951}, "icepool.EvalPool.next_state": {"tf": 2.23606797749979}, "icepool.EvalPool.final_outcome": {"tf": 1.7320508075688772}, "icepool.EvalPool.direction": {"tf": 1.4142135623730951}, "icepool.EvalPool.ndim": {"tf": 1.4142135623730951}, "icepool.EvalPool.eval": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 2.23606797749979}}, "df": 36}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"icepool.Die": {"tf": 2.449489742783178}, "icepool.standard": {"tf": 1.4142135623730951}, "icepool.bernoulli": {"tf": 1}, "icepool.coin": {"tf": 1}, "icepool.BaseDie": {"tf": 1.7320508075688772}, "icepool.BaseDie.num_outcomes": {"tf": 1}, "icepool.BaseDie.has_zero_weights": {"tf": 1}, "icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.truncate": {"tf": 1.4142135623730951}, "icepool.BaseDie.cond": {"tf": 1.4142135623730951}, "icepool.BaseDie.sub": {"tf": 1.4142135623730951}, "icepool.BaseDie.explode": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 2}, "icepool.BaseDie.keep_highest": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep_lowest": {"tf": 1.4142135623730951}, "icepool.BaseDie.zero": {"tf": 1.4142135623730951}, "icepool.BaseDie.cmp": {"tf": 1}, "icepool.EmptyDie": {"tf": 1}, "icepool.ScalarDie.d": {"tf": 1}, "icepool.align": {"tf": 1}, "icepool.align_range": {"tf": 1}, "icepool.dice_with_common_ndim": {"tf": 1}, "icepool.BasePool": {"tf": 1}, "icepool.BasePool.outcomes": {"tf": 1}, "icepool.Pool": {"tf": 2}, "icepool.standard_pool": {"tf": 1}, "icepool.DicePool.outcomes": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1.7320508075688772}, "icepool.EvalPool": {"tf": 1.4142135623730951}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 2.23606797749979}, "icepool.EvalPool.ndim": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1.4142135623730951}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 35, "i": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie.clip": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {"icepool.BaseDie.hash": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die": {"tf": 2.449489742783178}, "icepool.standard": {"tf": 1}, "icepool.BaseDie": {"tf": 2}, "icepool.BaseDie.num_outcomes": {"tf": 1}, "icepool.BaseDie.has_zero_weights": {"tf": 1}, "icepool.BaseDie.items": {"tf": 1}, "icepool.BaseDie.denominator": {"tf": 1}, "icepool.BaseDie.total_weight": {"tf": 1}, "icepool.BaseDie.cweights": {"tf": 1}, "icepool.BaseDie.sweights": {"tf": 1}, "icepool.BaseDie.weight_eq": {"tf": 1}, "icepool.BaseDie.weight_ne": {"tf": 1}, "icepool.BaseDie.weight_le": {"tf": 1}, "icepool.BaseDie.weight_lt": {"tf": 1}, "icepool.BaseDie.weight_ge": {"tf": 1}, "icepool.BaseDie.weight_gt": {"tf": 1}, "icepool.BaseDie.modal_weight": {"tf": 1}, "icepool.BaseDie.clip": {"tf": 1}, "icepool.BaseDie.set_outcomes": {"tf": 1}, "icepool.BaseDie.trim": {"tf": 1}, "icepool.BaseDie.zero": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1}, "icepool.BasePool.outcomes": {"tf": 1}, "icepool.Pool": {"tf": 1.4142135623730951}, "icepool.DicePool.outcomes": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 27, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}}, "df": 1}}, "s": {"docs": {"icepool.Die": {"tf": 3.1622776601683795}, "icepool.BaseDie": {"tf": 1}, "icepool.BaseDie.markdown": {"tf": 1.4142135623730951}, "icepool.BaseDie.weights": {"tf": 1}, "icepool.BaseDie.cweights": {"tf": 1}, "icepool.BaseDie.sweights": {"tf": 1}, "icepool.BaseDie.reduce": {"tf": 1}, "icepool.BaseDie.scale_weights": {"tf": 1}, "icepool.BaseDie.cmp": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1}, "icepool.EmptyDie.markdown": {"tf": 1.4142135623730951}, "icepool.ScalarDie.__init__": {"tf": 1}, "icepool.ScalarDie.markdown": {"tf": 1.4142135623730951}, "icepool.VectorDie.__init__": {"tf": 1}, "icepool.from_cweights": {"tf": 1}, "icepool.from_sweights": {"tf": 1}, "icepool.align": {"tf": 1}, "icepool.align_range": {"tf": 1}, "icepool.apply": {"tf": 1}}, "df": 19}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"icepool.BaseDie": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.BasePool.eval": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"icepool": {"tf": 1}, "icepool.Die": {"tf": 1.4142135623730951}, "icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep_highest": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep_lowest": {"tf": 1.4142135623730951}, "icepool.Pool": {"tf": 2.449489742783178}, "icepool.DicePool": {"tf": 1}, "icepool.DicePool.__init__": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1.7320508075688772}, "icepool.DicePool.truncate_min": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}}, "df": 13, "d": {"docs": {"icepool.BaseDie": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"icepool.BaseDie.min_outcome": {"tf": 1}, "icepool.BaseDie.highest": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep": {"tf": 1}, "icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}, "icepool.highest": {"tf": 1.4142135623730951}, "icepool.min_outcome": {"tf": 1}, "icepool.Pool": {"tf": 1}}, "df": 8}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {"icepool.WrapFuncEval.__init__": {"tf": 1}}, "df": 1}}}, "x": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.align": {"tf": 1}, "icepool.Pool": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.BaseDie.cvm_stat": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"icepool": {"tf": 1}, "icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.reroll_until": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.BaseDie.explode": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep_highest": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep_lowest": {"tf": 1.4142135623730951}, "icepool.Pool": {"tf": 2.6457513110645907}, "icepool.DicePool": {"tf": 1}, "icepool.DicePool.__init__": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1.7320508075688772}, "icepool.DicePool.truncate_max": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}}, "df": 15, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"icepool.BaseDie.ks_stat": {"tf": 1}, "icepool.BaseDie.max_outcome": {"tf": 1}, "icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.reroll_until": {"tf": 1}, "icepool.BaseDie.explode": {"tf": 1}, "icepool.BaseDie.lowest": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep_highest": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep_lowest": {"tf": 1.4142135623730951}, "icepool.lowest": {"tf": 1.4142135623730951}, "icepool.max_outcome": {"tf": 1}, "icepool.Pool": {"tf": 1}}, "df": 12}}}}}, "p": {"docs": {"icepool.BaseDie.sub": {"tf": 1}}, "df": 1, "s": {"docs": {"icepool.Die": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}}, "df": 2}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.BaseDie": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.ScalarDie.__init__": {"tf": 1}, "icepool.VectorDie.__init__": {"tf": 1}, "icepool.DicePool.sample": {"tf": 1}}, "df": 5}}}}}, "n": {"docs": {}, "df": 0, "y": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}, "icepool.ScalarDie.d": {"tf": 1.4142135623730951}, "icepool.apply": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.DicePool.count_dice": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.EvalPool": {"tf": 2.6457513110645907}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.EvalPool.bind_dice": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 13}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.BaseDie": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 3}}, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"icepool.BaseDie.markdown": {"tf": 1}, "icepool.EmptyDie.markdown": {"tf": 1}, "icepool.ScalarDie.markdown": {"tf": 1}, "icepool.VectorDie.markdown": {"tf": 1}}, "df": 4}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"icepool.VectorDie.marginal": {"tf": 1}, "icepool.VectorDie.dim": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"icepool.BaseDie.pmf": {"tf": 1}}, "df": 1}}, "y": {"docs": {"icepool.BaseDie.set_outcomes": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.BasePool.eval": {"tf": 1}, "icepool.Pool": {"tf": 1.4142135623730951}, "icepool.DicePool.set_count_dice": {"tf": 1.4142135623730951}, "icepool.EvalPool": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}}, "df": 8}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"icepool.Pool": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.FindBestSet": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die": {"tf": 2}, "icepool.from_rv": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}, "icepool.FindBestRun": {"tf": 1}}, "df": 4}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1}, "icepool.ScalarDie.cartesian_product": {"tf": 1}, "icepool.align": {"tf": 1}, "icepool.BasePool.eval": {"tf": 1}, "icepool.DicePool": {"tf": 1}, "icepool.DicePool.num_dice": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1.4142135623730951}, "icepool.EvalPool.next_state": {"tf": 1.4142135623730951}, "icepool.WrapFuncEval.next_state": {"tf": 1.4142135623730951}}, "df": 9}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.BaseDie.scale_weights": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"icepool.VectorDie": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.EvalPool.eval": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.ScalarDie.if_else": {"tf": 1}, "icepool.BasePool.eval": {"tf": 1}, "icepool.BasePool.sum": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.EvalPool": {"tf": 1}}, "df": 8, "s": {"docs": {"icepool.BaseDie": {"tf": 1.4142135623730951}, "icepool.ScalarDie.__init__": {"tf": 1}, "icepool.VectorDie": {"tf": 1.7320508075688772}, "icepool.VectorDie.__init__": {"tf": 1}, "icepool.BasePool": {"tf": 1}, "icepool.EvalPool": {"tf": 1.4142135623730951}}, "df": 6}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"icepool.ScalarDie.median_left": {"tf": 1.4142135623730951}, "icepool.ScalarDie.median_right": {"tf": 1.4142135623730951}, "icepool.ScalarDie.median": {"tf": 2}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"icepool.ScalarDie.median": {"tf": 1}, "icepool.ScalarDie.ppf": {"tf": 1}}, "df": 2}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Pool": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"icepool.BaseDie": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.EvalPool": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.ScalarDie.__init__": {"tf": 1}, "icepool.VectorDie.__init__": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"icepool.VectorDie": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"icepool.BaseDie": {"tf": 1}, "icepool.BaseDie.mode": {"tf": 1}, "icepool.VectorDie": {"tf": 1}, "icepool.EvalPool": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1}, "icepool.EvalPool.ndim": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 10, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.BaseDie": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.DicePool.has_counted_dice": {"tf": 1}, "icepool.EvalPool": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1}, "icepool.EvalPool.ndim": {"tf": 1}}, "df": 6}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 2}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool": {"tf": 1.4142135623730951}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die": {"tf": 2.8284271247461903}, "icepool.BaseDie": {"tf": 1}, "icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.reroll_until": {"tf": 1}, "icepool.BaseDie.truncate": {"tf": 1}, "icepool.BaseDie.clip": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1.4142135623730951}, "icepool.BaseDie.repeat_and_sum": {"tf": 1}, "icepool.BaseDie.zero": {"tf": 1}, "icepool.ScalarDie.if_else": {"tf": 1}, "icepool.ScalarDie.ppf_left": {"tf": 1}, "icepool.ScalarDie.ppf_right": {"tf": 1}, "icepool.ScalarDie.ppf": {"tf": 1}, "icepool.align": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.Pool": {"tf": 1.7320508075688772}, "icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.EvalPool": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.EvalPool.ndim": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}}, "df": 21, "s": {"docs": {"icepool.BaseDie.pmf": {"tf": 1}, "icepool.BaseDie.cdf": {"tf": 1}, "icepool.BaseDie.sf": {"tf": 1}, "icepool.BaseDie.repeat_and_sum": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 1}, "icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}, "icepool.dice_with_common_ndim": {"tf": 1}, "icepool.BasePool": {"tf": 1}}, "df": 9}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.from_rv": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.zero": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"icepool.BaseDie.cmp": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"icepool.DicePool.set_count_dice": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die": {"tf": 1}, "icepool.ScalarDie.cartesian_product": {"tf": 1}}, "df": 2}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Die": {"tf": 1.7320508075688772}, "icepool.BaseDie.reroll": {"tf": 2.23606797749979}, "icepool.BaseDie.reroll_until": {"tf": 2.449489742783178}, "icepool.BaseDie.clip": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1.4142135623730951}, "icepool.EvalPool.next_state": {"tf": 1.4142135623730951}, "icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1.4142135623730951}}, "df": 8, "s": {"docs": {"icepool.BaseDie.reroll": {"tf": 1.4142135623730951}, "icepool.BaseDie.reroll_until": {"tf": 1.4142135623730951}, "icepool.BaseDie.truncate": {"tf": 1}}, "df": 3}, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.BaseDie.reroll": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep_highest": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep_lowest": {"tf": 1.4142135623730951}}, "df": 4}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.BaseDie.clip": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1}, "icepool.DicePool": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 3}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.BaseDie.sub": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}, "icepool.BaseDie.equals": {"tf": 1}}, "df": 2, "d": {"docs": {"icepool.BaseDie.equals": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"icepool.BaseDie": {"tf": 1}, "icepool.DicePool.truncate_min": {"tf": 1.4142135623730951}, "icepool.DicePool.truncate_max": {"tf": 1.4142135623730951}, "icepool.EvalPool": {"tf": 1}, "icepool.WrapFuncEval.__init__": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.d": {"tf": 1}}, "df": 1}}, "s": {"docs": {"icepool.d": {"tf": 1}, "icepool.BaseDie.ndim": {"tf": 1.4142135623730951}, "icepool.BaseDie.outcomes": {"tf": 1}, "icepool.BaseDie.num_outcomes": {"tf": 1}, "icepool.BaseDie.is_empty": {"tf": 1}, "icepool.BaseDie.weights": {"tf": 1}, "icepool.BaseDie.has_zero_weights": {"tf": 1}, "icepool.BaseDie.items": {"tf": 1}, "icepool.BaseDie.weight_eq": {"tf": 1}, "icepool.BaseDie.weight_ne": {"tf": 1}, "icepool.BaseDie.weight_le": {"tf": 1}, "icepool.BaseDie.weight_lt": {"tf": 1}, "icepool.BaseDie.weight_ge": {"tf": 1}, "icepool.BaseDie.weight_gt": {"tf": 1}, "icepool.BaseDie.probability": {"tf": 1}, "icepool.BaseDie.mode": {"tf": 1}, "icepool.BaseDie.min_outcome": {"tf": 1}, "icepool.BaseDie.max_outcome": {"tf": 1}, "icepool.BaseDie.nearest_le": {"tf": 1.4142135623730951}, "icepool.BaseDie.nearest_ge": {"tf": 1.4142135623730951}, "icepool.BaseDie.reroll": {"tf": 1.4142135623730951}, "icepool.BaseDie.reroll_until": {"tf": 1.4142135623730951}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.BaseDie.explode": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 1}, "icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}, "icepool.BaseDie.zero_outcome": {"tf": 1}, "icepool.BaseDie.cmp": {"tf": 1}, "icepool.BaseDie.sample": {"tf": 1}, "icepool.BaseDie.key_tuple": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1}, "icepool.EmptyDie.ndim": {"tf": 1.4142135623730951}, "icepool.ScalarDie.ndim": {"tf": 1.4142135623730951}, "icepool.ScalarDie.median_left": {"tf": 1.4142135623730951}, "icepool.ScalarDie.median_right": {"tf": 1.4142135623730951}, "icepool.ScalarDie.median": {"tf": 1.4142135623730951}, "icepool.ScalarDie.ppf_left": {"tf": 1.4142135623730951}, "icepool.ScalarDie.ppf_right": {"tf": 1.4142135623730951}, "icepool.ScalarDie.ppf": {"tf": 1.4142135623730951}, "icepool.VectorDie.ndim": {"tf": 1.4142135623730951}, "icepool.VectorDie.marginal": {"tf": 1}, "icepool.VectorDie.all": {"tf": 1}, "icepool.VectorDie.any": {"tf": 1}, "icepool.align": {"tf": 1}, "icepool.max_outcome": {"tf": 1}, "icepool.min_outcome": {"tf": 1}, "icepool.apply": {"tf": 1.4142135623730951}, "icepool.dice_with_common_ndim": {"tf": 1}, "icepool.BasePool.sum": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.DicePool.has_counted_dice": {"tf": 1}, "icepool.DicePool.sample": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1}, "icepool.EvalPool.ndim": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}, "icepool.EvalPool.bind_dice": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}, "icepool.FindBestRun.final_outcome": {"tf": 1}}, "df": 61}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.BasePool.eval": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.BaseDie": {"tf": 1}, "icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.reroll_until": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 1}, "icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}, "icepool.VectorDie.all": {"tf": 1}, "icepool.VectorDie.any": {"tf": 1}, "icepool.BasePool.sum": {"tf": 1}, "icepool.DicePool.sample": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 2}}, "df": 11}}}, "s": {"docs": {"icepool.BasePool": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "l": {"docs": {"icepool.BaseDie.sub": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.truncate": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1}, "icepool.EvalPool.ndim": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}, "icepool.FindBestSet.next_state": {"tf": 1}}, "df": 7, "s": {"docs": {"icepool.BaseDie.cond": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"icepool.BaseDie.sub": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.BaseDie.sub": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.set_outcomes": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 3, "s": {"docs": {"icepool.BaseDie.trim": {"tf": 1}}, "df": 1}, "d": {"docs": {"icepool.BaseDie.keep": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep_highest": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep_lowest": {"tf": 1.4142135623730951}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.BaseDie.cmp": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.DicePool.has_counted_dice": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.BaseDie.sub": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Pool": {"tf": 1}}, "df": 1}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.dice_with_common_ndim": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"icepool.EvalPool": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.BaseDie.explode": {"tf": 1}, "icepool.BaseDie.lowest": {"tf": 1}, "icepool.BaseDie.highest": {"tf": 1}, "icepool.BaseDie.repeat_and_sum": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep_highest": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep_lowest": {"tf": 1.4142135623730951}, "icepool.BaseDie.sample": {"tf": 1}, "icepool.BaseDie.hash": {"tf": 1}, "icepool.ScalarDie.d": {"tf": 1.4142135623730951}, "icepool.ScalarDie.if_else": {"tf": 2}, "icepool.lowest": {"tf": 1}, "icepool.highest": {"tf": 1}, "icepool.BasePool": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.DicePool.sample": {"tf": 1.4142135623730951}, "icepool.EvalPool": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1.4142135623730951}}, "df": 20, "s": {"docs": {"icepool.Die": {"tf": 1}, "icepool.standard": {"tf": 1}, "icepool.bernoulli": {"tf": 1}, "icepool.coin": {"tf": 1}, "icepool.ScalarDie.if_else": {"tf": 1.4142135623730951}, "icepool.EvalPool.eval": {"tf": 1}}, "df": 6}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Die": {"tf": 1.7320508075688772}, "icepool.BaseDie.pmf": {"tf": 1}, "icepool.BaseDie.cdf": {"tf": 1}, "icepool.BaseDie.sf": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1.4142135623730951}, "icepool.WrapFuncEval.next_state": {"tf": 1.4142135623730951}}, "df": 7}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie.explode": {"tf": 1}, "icepool.DicePool": {"tf": 1}, "icepool.EvalPool": {"tf": 2.6457513110645907}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}, "icepool.FindBestRun.next_state": {"tf": 1}}, "df": 7}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.sub": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.Die": {"tf": 1}, "icepool.d": {"tf": 1}, "icepool.BaseDie.zero": {"tf": 1}, "icepool.ScalarDie.cartesian_product": {"tf": 1}, "icepool.align": {"tf": 1}, "icepool.dice_with_common_ndim": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 8}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.BaseDie": {"tf": 1.4142135623730951}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.BasePool.eval": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 5}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.truncate": {"tf": 1.4142135623730951}, "icepool.BaseDie.clip": {"tf": 1.7320508075688772}}, "df": 2}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"icepool.BaseDie.sample": {"tf": 1}, "icepool.BasePool": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"icepool.ScalarDie.d": {"tf": 1.4142135623730951}, "icepool.ScalarDie.median": {"tf": 1}, "icepool.ScalarDie.ppf": {"tf": 1}}, "df": 3}}}}, "v": {"docs": {"icepool.from_rv": {"tf": 2}}, "df": 1}, "u": {"docs": {}, "df": 0, "n": {"docs": {"icepool.BasePool": {"tf": 1}, "icepool.FindBestRun": {"tf": 1.7320508075688772}, "icepool.FindBestRun.next_state": {"tf": 1.4142135623730951}, "icepool.FindBestRun.final_outcome": {"tf": 1}}, "df": 4, "s": {"docs": {"icepool.EvalPool.bind_dice": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.SumPool.next_state": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"icepool": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"icepool.BaseDie.mode": {"tf": 1}, "icepool.BaseDie.lowest": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep_lowest_single": {"tf": 1}, "icepool.lowest": {"tf": 1}, "icepool.DicePool.count_dice": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 7}}, "r": {"docs": {"icepool.BaseDie.keep": {"tf": 1}, "icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}, "icepool.ScalarDie.median_left": {"tf": 1}, "icepool.ScalarDie.ppf_left": {"tf": 1}}, "df": 5}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.DicePool.set_count_dice": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Pool": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"icepool.BaseDie": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie.has_zero_weights": {"tf": 1}, "icepool.FindBestRun.next_state": {"tf": 1}}, "df": 3}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"icepool.Die": {"tf": 1}, "icepool.DicePool.__init__": {"tf": 1.7320508075688772}, "icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"icepool.BaseDie.sign": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Pool": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"icepool.ScalarDie.__init__": {"tf": 1}, "icepool.VectorDie.__init__": {"tf": 1}}, "df": 2}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {"icepool.ScalarDie.d": {"tf": 1}, "icepool.ScalarDie.median": {"tf": 1}, "icepool.ScalarDie.ppf": {"tf": 1}, "icepool.FindBestSet.next_state": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 2.6457513110645907}, "icepool.BaseDie": {"tf": 1.4142135623730951}, "icepool.BasePool.eval": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}}, "df": 5}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"icepool.ScalarDie.median_left": {"tf": 1}, "icepool.ScalarDie.median_right": {"tf": 1}, "icepool.ScalarDie.median": {"tf": 1}, "icepool.ScalarDie.ppf_left": {"tf": 1}, "icepool.ScalarDie.ppf_right": {"tf": 1}, "icepool.ScalarDie.ppf": {"tf": 1}}, "df": 6}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.DicePool": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "m": {"docs": {"icepool.Die": {"tf": 2}}, "df": 1}}, "t": {"docs": {"icepool.BaseDie.cweights": {"tf": 1}, "icepool.BaseDie.cdf": {"tf": 1}, "icepool.BaseDie.weight_le": {"tf": 1}, "icepool.BaseDie.weight_lt": {"tf": 1}, "icepool.BaseDie.nearest_le": {"tf": 1}, "icepool.BaseDie.cmp": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1.4142135623730951}}, "df": 8}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"icepool.apply": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"icepool.FindBestSet.next_state": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"icepool": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 1}, "icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}, "icepool.ScalarDie.median_right": {"tf": 1}, "icepool.ScalarDie.ppf_right": {"tf": 1}}, "df": 6}, "s": {"docs": {}, "df": 0, "t": {"docs": {"icepool.BaseDie.mode": {"tf": 1}, "icepool.BaseDie.modal_weight": {"tf": 1}, "icepool.BaseDie.lowest": {"tf": 1}, "icepool.BaseDie.highest": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep_highest": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep_highest_single": {"tf": 1}, "icepool.lowest": {"tf": 1}, "icepool.highest": {"tf": 1.4142135623730951}, "icepool.standard_pool": {"tf": 1}, "icepool.DicePool.count_dice": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1.7320508075688772}}, "df": 11}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}}, "df": 3}}, "l": {"docs": {}, "df": 0, "p": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1.7320508075688772}, "icepool.BaseDie": {"tf": 2.449489742783178}, "icepool.BaseDie.markdown": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep": {"tf": 1}, "icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}, "icepool.BaseDie.zero": {"tf": 1}, "icepool.BaseDie.bool": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1}, "icepool.EmptyDie.markdown": {"tf": 1.4142135623730951}, "icepool.ScalarDie.markdown": {"tf": 1.4142135623730951}, "icepool.align": {"tf": 1}, "icepool.align_range": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.Pool": {"tf": 1.7320508075688772}, "icepool.DicePool.set_count_dice": {"tf": 1.7320508075688772}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.EvalPool.ndim": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 20}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.Pool": {"tf": 1.4142135623730951}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 4}}}}, "s": {"docs": {"icepool.BaseDie.is_empty": {"tf": 1}, "icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.reroll_until": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1}, "icepool.ScalarDie.if_else": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1.4142135623730951}}, "df": 6, "h": {"docs": {"icepool.BaseDie.hash": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}, "icepool.EvalPool.next_state": {"tf": 1.4142135623730951}, "icepool.WrapFuncEval.next_state": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.EvalPool": {"tf": 1.4142135623730951}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 4}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"icepool.EvalPool.final_outcome": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.DicePool.count_dice": {"tf": 1}, "icepool.EvalPool": {"tf": 2.6457513110645907}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.BaseDie": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 4.242640687119285}, "icepool.BaseDie": {"tf": 1}, "icepool.BaseDie.pmf": {"tf": 1.4142135623730951}, "icepool.BaseDie.cdf": {"tf": 1.4142135623730951}, "icepool.BaseDie.sf": {"tf": 1.4142135623730951}, "icepool.BaseDie.reroll": {"tf": 1.7320508075688772}, "icepool.BaseDie.reroll_until": {"tf": 1}, "icepool.BaseDie.truncate": {"tf": 1.4142135623730951}, "icepool.BaseDie.clip": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 2}, "icepool.BaseDie.explode": {"tf": 2}, "icepool.BaseDie.keep": {"tf": 1.7320508075688772}, "icepool.BaseDie.keep_highest": {"tf": 2}, "icepool.BaseDie.keep_lowest": {"tf": 2}, "icepool.BaseDie.equals": {"tf": 1}, "icepool.ScalarDie.__init__": {"tf": 1}, "icepool.VectorDie.__init__": {"tf": 1}, "icepool.from_rv": {"tf": 2}, "icepool.dice_with_common_ndim": {"tf": 1}, "icepool.BasePool": {"tf": 1}, "icepool.BasePool.eval": {"tf": 1.4142135623730951}, "icepool.Pool": {"tf": 3.1622776601683795}, "icepool.standard_pool": {"tf": 1.4142135623730951}, "icepool.DicePool.__init__": {"tf": 2}, "icepool.DicePool.set_count_dice": {"tf": 2.6457513110645907}, "icepool.EvalPool": {"tf": 2}, "icepool.EvalPool.next_state": {"tf": 1.7320508075688772}, "icepool.EvalPool.final_outcome": {"tf": 1.7320508075688772}, "icepool.EvalPool.direction": {"tf": 1}, "icepool.EvalPool.ndim": {"tf": 1.4142135623730951}, "icepool.EvalPool.eval": {"tf": 1.4142135623730951}, "icepool.EvalPool.bind_dice": {"tf": 1}, "icepool.WrapFuncEval.__init__": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1.7320508075688772}, "icepool.FindBestRun": {"tf": 1}}, "df": 35, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie.hash": {"tf": 1}, "icepool.Pool": {"tf": 1}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.sign": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"icepool.ScalarDie.d": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie.ks_stat": {"tf": 1}, "icepool.BaseDie.cvm_stat": {"tf": 1}, "icepool.ScalarDie.median_left": {"tf": 1}, "icepool.ScalarDie.median_right": {"tf": 1}, "icepool.ScalarDie.median": {"tf": 1}, "icepool.ScalarDie.ppf_left": {"tf": 1}, "icepool.ScalarDie.ppf_right": {"tf": 1}, "icepool.ScalarDie.ppf": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 11}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.FindBestSet.next_state": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"icepool.BaseDie": {"tf": 1}, "icepool.FindBestSet": {"tf": 1}, "icepool.FindBestSet.next_state": {"tf": 1}, "icepool.FindBestRun": {"tf": 1}, "icepool.FindBestRun.final_outcome": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.BaseDie": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep_highest": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep_lowest": {"tf": 1.4142135623730951}, "icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1}, "icepool.EvalPool.ndim": {"tf": 1}}, "df": 8}}}, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"icepool.BaseDie.clip": {"tf": 1.4142135623730951}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1}, "icepool.DicePool.num_dice": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 6}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"icepool.DicePool.truncate_min": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"icepool.EvalPool": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"icepool.EvalPool.final_outcome": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie": {"tf": 1}, "icepool.BasePool": {"tf": 1}, "icepool.DicePool.has_counted_dice": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 5, "d": {"docs": {"icepool.BaseDie.sub": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}, "icepool.apply": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.DicePool": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1.4142135623730951}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 7}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"icepool.BaseDie.clip": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {"icepool.BaseDie.reduce": {"tf": 1}, "icepool.BaseDie.scale_weights": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 1}, "icepool.BaseDie.zero": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.DicePool": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.EvalPool.ndim": {"tf": 1}, "icepool.EvalPool.bind_dice": {"tf": 1}}, "df": 10}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"icepool.BaseDie.bool": {"tf": 1}, "icepool.ScalarDie.if_else": {"tf": 1.4142135623730951}}, "df": 2}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"icepool.BaseDie.equals": {"tf": 1}, "icepool.Pool": {"tf": 1.7320508075688772}, "icepool.DicePool": {"tf": 1}}, "df": 3}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"icepool.EvalPool.bind_dice": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"icepool.EvalPool.bind_dice": {"tf": 1}}, "df": 1, "s": {"docs": {"icepool.EvalPool.bind_dice": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"icepool.bernoulli": {"tf": 1}, "icepool.coin": {"tf": 1}, "icepool.ScalarDie.ppf_left": {"tf": 1}, "icepool.ScalarDie.ppf_right": {"tf": 1}, "icepool.ScalarDie.ppf": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "w": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1.7320508075688772}, "icepool.Pool": {"tf": 1}, "icepool.WrapFuncEval.__init__": {"tf": 1}}, "df": 4}, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.Die": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"icepool.BasePool": {"tf": 1.4142135623730951}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"icepool.BaseDie": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"icepool.BaseDie.nearest_le": {"tf": 1}, "icepool.BaseDie.nearest_ge": {"tf": 1}, "icepool.BaseDie.truncate": {"tf": 1}}, "df": 3}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.reroll_until": {"tf": 1}}, "df": 2}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"icepool.BaseDie.repeat_and_sum": {"tf": 1}, "icepool.DicePool": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1.7320508075688772}}, "df": 3}}}, "e": {"docs": {"icepool.BaseDie.repeat_and_sum": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"icepool.BasePool.eval": {"tf": 1.4142135623730951}, "icepool.EvalPool": {"tf": 2.8284271247461903}, "icepool.EvalPool.next_state": {"tf": 1.4142135623730951}, "icepool.EvalPool.direction": {"tf": 1.7320508075688772}, "icepool.WrapFuncEval": {"tf": 1}, "icepool.WrapFuncEval.__init__": {"tf": 1.7320508075688772}, "icepool.WrapFuncEval.next_state": {"tf": 1.4142135623730951}}, "df": 7}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1}, "icepool.Pool": {"tf": 1.4142135623730951}}, "df": 2, "d": {"docs": {"icepool.EvalPool.next_state": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1}, "icepool.EvalPool.ndim": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 5}}}, "n": {"docs": {"icepool.BaseDie.sign": {"tf": 1}}, "df": 1}}, "o": {"docs": {"icepool.BaseDie": {"tf": 1}, "icepool.BaseDie.is_empty": {"tf": 1}, "icepool.BaseDie.nearest_le": {"tf": 1}, "icepool.BaseDie.nearest_ge": {"tf": 1}, "icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.reroll_until": {"tf": 1}, "icepool.BaseDie.zero": {"tf": 1}, "icepool.EmptyDie": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.standard_pool": {"tf": 1}, "icepool.DicePool": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.DicePool.truncate_min": {"tf": 1}, "icepool.DicePool.truncate_max": {"tf": 1}, "icepool.DicePool.has_counted_dice": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 17, "t": {"docs": {"icepool.Die": {"tf": 2.449489742783178}, "icepool.d": {"tf": 1.4142135623730951}, "icepool.BaseDie": {"tf": 2.23606797749979}, "icepool.BaseDie.weight_eq": {"tf": 1}, "icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.truncate": {"tf": 1.7320508075688772}, "icepool.BaseDie.clip": {"tf": 1.7320508075688772}, "icepool.BaseDie.set_outcomes": {"tf": 1.4142135623730951}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.BaseDie.explode": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep": {"tf": 1.4142135623730951}, "icepool.BaseDie.zero": {"tf": 1}, "icepool.BaseDie.bool": {"tf": 1}, "icepool.BaseDie.sample": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1.4142135623730951}, "icepool.ScalarDie.__init__": {"tf": 1}, "icepool.ScalarDie.median": {"tf": 1}, "icepool.ScalarDie.ppf": {"tf": 1}, "icepool.ScalarDie.cartesian_product": {"tf": 1.4142135623730951}, "icepool.VectorDie.__init__": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.Pool": {"tf": 1.7320508075688772}, "icepool.DicePool": {"tf": 1}, "icepool.DicePool.__init__": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 2}, "icepool.EvalPool": {"tf": 1.4142135623730951}, "icepool.EvalPool.next_state": {"tf": 1.4142135623730951}, "icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1.4142135623730951}, "icepool.EvalPool.ndim": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1.4142135623730951}}, "df": 32, "e": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie.bool": {"tf": 1}, "icepool.BaseDie.sign": {"tf": 1}, "icepool.BasePool.eval": {"tf": 1}, "icepool.EvalPool.final_outcome": {"tf": 1}, "icepool.EvalPool.direction": {"tf": 1}, "icepool.FindBestSet.next_state": {"tf": 1}}, "df": 7}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie": {"tf": 1}, "icepool.BaseDie.nearest_le": {"tf": 1}, "icepool.BaseDie.nearest_ge": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.Pool": {"tf": 1}, "icepool.DicePool.__init__": {"tf": 1.4142135623730951}, "icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.DicePool.truncate_min": {"tf": 1}, "icepool.DicePool.truncate_max": {"tf": 1}, "icepool.EvalPool": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1.4142135623730951}, "icepool.EvalPool.final_outcome": {"tf": 1.4142135623730951}, "icepool.EvalPool.ndim": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1.4142135623730951}}, "df": 15}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"icepool.Pool": {"tf": 1}, "icepool.DicePool.has_counted_dice": {"tf": 1}}, "df": 2}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"icepool.Die": {"tf": 2}, "icepool.BaseDie.reroll": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 2}, "icepool.BaseDie.explode": {"tf": 1}, "icepool.BaseDie.equals": {"tf": 1}, "icepool.VectorDie.__init__": {"tf": 1}, "icepool.align": {"tf": 1}, "icepool.apply": {"tf": 1}, "icepool.dice_with_common_ndim": {"tf": 2.449489742783178}, "icepool.EvalPool.ndim": {"tf": 1}}, "df": 10, "s": {"docs": {"icepool.align": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"icepool.standard": {"tf": 1}, "icepool.BaseDie.repeat_and_sum": {"tf": 1.7320508075688772}, "icepool.BaseDie.keep": {"tf": 1}, "icepool.BaseDie.keep_highest": {"tf": 2}, "icepool.BaseDie.keep_lowest": {"tf": 2}, "icepool.Pool": {"tf": 1.4142135623730951}, "icepool.DicePool.set_count_dice": {"tf": 2.23606797749979}, "icepool.EvalPool.bind_dice": {"tf": 1}}, "df": 8, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"icepool.Die": {"tf": 1}, "icepool.BaseDie.ndim": {"tf": 1}, "icepool.BaseDie.num_outcomes": {"tf": 1}, "icepool.BaseDie.reroll": {"tf": 1.4142135623730951}, "icepool.BaseDie.reroll_until": {"tf": 1.4142135623730951}, "icepool.BaseDie.explode": {"tf": 1}, "icepool.BaseDie.keep": {"tf": 1}, "icepool.BaseDie.keep_highest": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep_lowest": {"tf": 1.4142135623730951}, "icepool.EmptyDie.ndim": {"tf": 1}, "icepool.ScalarDie.ndim": {"tf": 1}, "icepool.ScalarDie.cartesian_product": {"tf": 1}, "icepool.VectorDie.__init__": {"tf": 1}, "icepool.VectorDie.ndim": {"tf": 1}, "icepool.align": {"tf": 1}, "icepool.Pool": {"tf": 1.7320508075688772}, "icepool.DicePool": {"tf": 1}, "icepool.DicePool.num_dice": {"tf": 1}, "icepool.DicePool.has_counted_dice": {"tf": 1}, "icepool.EvalPool": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1.7320508075688772}, "icepool.EvalPool.final_outcome": {"tf": 1.4142135623730951}, "icepool.EvalPool.direction": {"tf": 1.4142135623730951}, "icepool.EvalPool.ndim": {"tf": 2}, "icepool.EvalPool.eval": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1.7320508075688772}}, "df": 26, "s": {"docs": {"icepool.apply": {"tf": 1}, "icepool.EvalPool": {"tf": 1}}, "df": 2}}}}}}}, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {"icepool.Die": {"tf": 2.23606797749979}, "icepool.BaseDie": {"tf": 1}, "icepool.BaseDie.truncate": {"tf": 1}, "icepool.BaseDie.clip": {"tf": 1}, "icepool.BaseDie.sub": {"tf": 1}, "icepool.BasePool.eval": {"tf": 1.4142135623730951}, "icepool.Pool": {"tf": 1.4142135623730951}, "icepool.standard_pool": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.EvalPool": {"tf": 1}, "icepool.EvalPool.eval": {"tf": 1}}, "df": 11}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"icepool.Die": {"tf": 1.4142135623730951}, "icepool.BaseDie": {"tf": 2}, "icepool.BaseDie.num_outcomes": {"tf": 1}, "icepool.BaseDie.has_zero_weights": {"tf": 1}, "icepool.BaseDie.set_outcomes": {"tf": 1}, "icepool.BaseDie.trim": {"tf": 1}, "icepool.BaseDie.zero_outcome": {"tf": 1}, "icepool.BaseDie.sign": {"tf": 1.4142135623730951}, "icepool.BaseDie.equals": {"tf": 1}, "icepool.align": {"tf": 1}, "icepool.align_range": {"tf": 1}, "icepool.BasePool.outcomes": {"tf": 1}, "icepool.Pool": {"tf": 1.4142135623730951}, "icepool.standard_pool": {"tf": 1}, "icepool.DicePool.outcomes": {"tf": 1}, "icepool.DicePool.set_count_dice": {"tf": 1}, "icepool.EvalPool.next_state": {"tf": 1}, "icepool.WrapFuncEval.next_state": {"tf": 1}}, "df": 18, "s": {"docs": {"icepool.BaseDie.zero": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "k": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "\u2013": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {"icepool.BaseDie.ks_stat": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"icepool.BaseDie.cond": {"tf": 1}, "icepool.ScalarDie.if_else": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"icepool.BaseDie.keep_highest": {"tf": 1.4142135623730951}, "icepool.BaseDie.keep_lowest": {"tf": 1.4142135623730951}, "icepool.standard_pool": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"icepool.BaseDie.keep_highest": {"tf": 1}, "icepool.BaseDie.keep_highest_single": {"tf": 1}, "icepool.BaseDie.keep_lowest": {"tf": 1}, "icepool.BaseDie.keep_lowest_single": {"tf": 1}}, "df": 4}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"icepool.from_rv": {"tf": 1}}, "df": 1}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"icepool.ScalarDie.ppf_left": {"tf": 1}, "icepool.ScalarDie.ppf_right": {"tf": 1}, "icepool.ScalarDie.ppf": {"tf": 1}}, "df": 3}}}}}}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();