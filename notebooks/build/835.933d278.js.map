{"version":3,"file":"835.933d278.js","mappings":"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","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/comlink/dist/esm/comlink.mjs","webpack://_JUPYTERLAB.CORE_OUTPUT/../packages/contents/lib/drivefs.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../packages/pyolite-kernel/lib/worker.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../packages/pyolite-kernel/lib/comlink.worker.js","webpack://_JUPYTERLAB.CORE_OUTPUT/webpack/bootstrap","webpack://_JUPYTERLAB.CORE_OUTPUT/webpack/runtime/hasOwnProperty shorthand","webpack://_JUPYTERLAB.CORE_OUTPUT/webpack/runtime/sharing","webpack://_JUPYTERLAB.CORE_OUTPUT/webpack/startup"],"sourcesContent":["/**\r\n * Copyright 2019 Google Inc. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst proxyMarker = Symbol(\"Comlink.proxy\");\r\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\r\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\r\nconst throwMarker = Symbol(\"Comlink.thrown\");\r\nconst isObject = (val) => (typeof val === \"object\" && val !== null) || typeof val === \"function\";\r\n/**\r\n * Internal transfer handle to handle objects marked to proxy.\r\n */\r\nconst proxyTransferHandler = {\r\n    canHandle: (val) => isObject(val) && val[proxyMarker],\r\n    serialize(obj) {\r\n        const { port1, port2 } = new MessageChannel();\r\n        expose(obj, port1);\r\n        return [port2, [port2]];\r\n    },\r\n    deserialize(port) {\r\n        port.start();\r\n        return wrap(port);\r\n    },\r\n};\r\n/**\r\n * Internal transfer handler to handle thrown exceptions.\r\n */\r\nconst throwTransferHandler = {\r\n    canHandle: (value) => isObject(value) && throwMarker in value,\r\n    serialize({ value }) {\r\n        let serialized;\r\n        if (value instanceof Error) {\r\n            serialized = {\r\n                isError: true,\r\n                value: {\r\n                    message: value.message,\r\n                    name: value.name,\r\n                    stack: value.stack,\r\n                },\r\n            };\r\n        }\r\n        else {\r\n            serialized = { isError: false, value };\r\n        }\r\n        return [serialized, []];\r\n    },\r\n    deserialize(serialized) {\r\n        if (serialized.isError) {\r\n            throw Object.assign(new Error(serialized.value.message), serialized.value);\r\n        }\r\n        throw serialized.value;\r\n    },\r\n};\r\n/**\r\n * Allows customizing the serialization of certain values.\r\n */\r\nconst transferHandlers = new Map([\r\n    [\"proxy\", proxyTransferHandler],\r\n    [\"throw\", throwTransferHandler],\r\n]);\r\nfunction expose(obj, ep = self) {\r\n    ep.addEventListener(\"message\", function callback(ev) {\r\n        if (!ev || !ev.data) {\r\n            return;\r\n        }\r\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\r\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\r\n        let returnValue;\r\n        try {\r\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\r\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\r\n            switch (type) {\r\n                case \"GET\" /* GET */:\r\n                    {\r\n                        returnValue = rawValue;\r\n                    }\r\n                    break;\r\n                case \"SET\" /* SET */:\r\n                    {\r\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\r\n                        returnValue = true;\r\n                    }\r\n                    break;\r\n                case \"APPLY\" /* APPLY */:\r\n                    {\r\n                        returnValue = rawValue.apply(parent, argumentList);\r\n                    }\r\n                    break;\r\n                case \"CONSTRUCT\" /* CONSTRUCT */:\r\n                    {\r\n                        const value = new rawValue(...argumentList);\r\n                        returnValue = proxy(value);\r\n                    }\r\n                    break;\r\n                case \"ENDPOINT\" /* ENDPOINT */:\r\n                    {\r\n                        const { port1, port2 } = new MessageChannel();\r\n                        expose(obj, port2);\r\n                        returnValue = transfer(port1, [port1]);\r\n                    }\r\n                    break;\r\n                case \"RELEASE\" /* RELEASE */:\r\n                    {\r\n                        returnValue = undefined;\r\n                    }\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n        }\r\n        catch (value) {\r\n            returnValue = { value, [throwMarker]: 0 };\r\n        }\r\n        Promise.resolve(returnValue)\r\n            .catch((value) => {\r\n            return { value, [throwMarker]: 0 };\r\n        })\r\n            .then((returnValue) => {\r\n            const [wireValue, transferables] = toWireValue(returnValue);\r\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\r\n            if (type === \"RELEASE\" /* RELEASE */) {\r\n                // detach and deactive after sending release response above.\r\n                ep.removeEventListener(\"message\", callback);\r\n                closeEndPoint(ep);\r\n            }\r\n        });\r\n    });\r\n    if (ep.start) {\r\n        ep.start();\r\n    }\r\n}\r\nfunction isMessagePort(endpoint) {\r\n    return endpoint.constructor.name === \"MessagePort\";\r\n}\r\nfunction closeEndPoint(endpoint) {\r\n    if (isMessagePort(endpoint))\r\n        endpoint.close();\r\n}\r\nfunction wrap(ep, target) {\r\n    return createProxy(ep, [], target);\r\n}\r\nfunction throwIfProxyReleased(isReleased) {\r\n    if (isReleased) {\r\n        throw new Error(\"Proxy has been released and is not useable\");\r\n    }\r\n}\r\nfunction createProxy(ep, path = [], target = function () { }) {\r\n    let isProxyReleased = false;\r\n    const proxy = new Proxy(target, {\r\n        get(_target, prop) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            if (prop === releaseProxy) {\r\n                return () => {\r\n                    return requestResponseMessage(ep, {\r\n                        type: \"RELEASE\" /* RELEASE */,\r\n                        path: path.map((p) => p.toString()),\r\n                    }).then(() => {\r\n                        closeEndPoint(ep);\r\n                        isProxyReleased = true;\r\n                    });\r\n                };\r\n            }\r\n            if (prop === \"then\") {\r\n                if (path.length === 0) {\r\n                    return { then: () => proxy };\r\n                }\r\n                const r = requestResponseMessage(ep, {\r\n                    type: \"GET\" /* GET */,\r\n                    path: path.map((p) => p.toString()),\r\n                }).then(fromWireValue);\r\n                return r.then.bind(r);\r\n            }\r\n            return createProxy(ep, [...path, prop]);\r\n        },\r\n        set(_target, prop, rawValue) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\r\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\r\n            const [value, transferables] = toWireValue(rawValue);\r\n            return requestResponseMessage(ep, {\r\n                type: \"SET\" /* SET */,\r\n                path: [...path, prop].map((p) => p.toString()),\r\n                value,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        apply(_target, _thisArg, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const last = path[path.length - 1];\r\n            if (last === createEndpoint) {\r\n                return requestResponseMessage(ep, {\r\n                    type: \"ENDPOINT\" /* ENDPOINT */,\r\n                }).then(fromWireValue);\r\n            }\r\n            // We just pretend that `bind()` didn’t happen.\r\n            if (last === \"bind\") {\r\n                return createProxy(ep, path.slice(0, -1));\r\n            }\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: \"APPLY\" /* APPLY */,\r\n                path: path.map((p) => p.toString()),\r\n                argumentList,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        construct(_target, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: \"CONSTRUCT\" /* CONSTRUCT */,\r\n                path: path.map((p) => p.toString()),\r\n                argumentList,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n    });\r\n    return proxy;\r\n}\r\nfunction myFlat(arr) {\r\n    return Array.prototype.concat.apply([], arr);\r\n}\r\nfunction processArguments(argumentList) {\r\n    const processed = argumentList.map(toWireValue);\r\n    return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\r\n}\r\nconst transferCache = new WeakMap();\r\nfunction transfer(obj, transfers) {\r\n    transferCache.set(obj, transfers);\r\n    return obj;\r\n}\r\nfunction proxy(obj) {\r\n    return Object.assign(obj, { [proxyMarker]: true });\r\n}\r\nfunction windowEndpoint(w, context = self, targetOrigin = \"*\") {\r\n    return {\r\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\r\n        addEventListener: context.addEventListener.bind(context),\r\n        removeEventListener: context.removeEventListener.bind(context),\r\n    };\r\n}\r\nfunction toWireValue(value) {\r\n    for (const [name, handler] of transferHandlers) {\r\n        if (handler.canHandle(value)) {\r\n            const [serializedValue, transferables] = handler.serialize(value);\r\n            return [\r\n                {\r\n                    type: \"HANDLER\" /* HANDLER */,\r\n                    name,\r\n                    value: serializedValue,\r\n                },\r\n                transferables,\r\n            ];\r\n        }\r\n    }\r\n    return [\r\n        {\r\n            type: \"RAW\" /* RAW */,\r\n            value,\r\n        },\r\n        transferCache.get(value) || [],\r\n    ];\r\n}\r\nfunction fromWireValue(value) {\r\n    switch (value.type) {\r\n        case \"HANDLER\" /* HANDLER */:\r\n            return transferHandlers.get(value.name).deserialize(value.value);\r\n        case \"RAW\" /* RAW */:\r\n            return value.value;\r\n    }\r\n}\r\nfunction requestResponseMessage(ep, msg, transfers) {\r\n    return new Promise((resolve) => {\r\n        const id = generateUUID();\r\n        ep.addEventListener(\"message\", function l(ev) {\r\n            if (!ev.data || !ev.data.id || ev.data.id !== id) {\r\n                return;\r\n            }\r\n            ep.removeEventListener(\"message\", l);\r\n            resolve(ev.data);\r\n        });\r\n        if (ep.start) {\r\n            ep.start();\r\n        }\r\n        ep.postMessage(Object.assign({ id }, msg), transfers);\r\n    });\r\n}\r\nfunction generateUUID() {\r\n    return new Array(4)\r\n        .fill(0)\r\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\r\n        .join(\"-\");\r\n}\n\nexport { createEndpoint, expose, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n//# sourceMappingURL=comlink.mjs.map\n","// Types and implementation inspired from https://github.com/jvilk/BrowserFS\n// LICENSE: https://github.com/jvilk/BrowserFS/blob/8977a704ea469d05daf857e4818bef1f4f498326/LICENSE\n// And from https://github.com/gzuidhof/starboard-notebook\n// LICENSE: https://github.com/gzuidhof/starboard-notebook/blob/cd8d3fc30af4bd29cdd8f6b8c207df8138f5d5dd/LICENSE\nexport const DIR_MODE = 16895; // 040777\nexport const FILE_MODE = 33206; // 100666\nexport const SEEK_CUR = 1;\nexport const SEEK_END = 2;\nexport const DRIVE_SEPARATOR = ':';\nconst encoder = new TextEncoder();\nconst decoder = new TextDecoder('utf-8');\n// Mapping flag -> do we need to overwrite the file upon closing it\nconst flagNeedsWrite = {\n    0 /*O_RDONLY*/: false,\n    1 /*O_WRONLY*/: true,\n    2 /*O_RDWR*/: true,\n    64 /*O_CREAT*/: true,\n    65 /*O_WRONLY|O_CREAT*/: true,\n    66 /*O_RDWR|O_CREAT*/: true,\n    129 /*O_WRONLY|O_EXCL*/: true,\n    193 /*O_WRONLY|O_CREAT|O_EXCL*/: true,\n    514 /*O_RDWR|O_TRUNC*/: true,\n    577 /*O_WRONLY|O_CREAT|O_TRUNC*/: true,\n    578 /*O_CREAT|O_RDWR|O_TRUNC*/: true,\n    705 /*O_WRONLY|O_CREAT|O_EXCL|O_TRUNC*/: true,\n    706 /*O_RDWR|O_CREAT|O_EXCL|O_TRUNC*/: true,\n    1024 /*O_APPEND*/: true,\n    1025 /*O_WRONLY|O_APPEND*/: true,\n    1026 /*O_RDWR|O_APPEND*/: true,\n    1089 /*O_WRONLY|O_CREAT|O_APPEND*/: true,\n    1090 /*O_RDWR|O_CREAT|O_APPEND*/: true,\n    1153 /*O_WRONLY|O_EXCL|O_APPEND*/: true,\n    1154 /*O_RDWR|O_EXCL|O_APPEND*/: true,\n    1217 /*O_WRONLY|O_CREAT|O_EXCL|O_APPEND*/: true,\n    1218 /*O_RDWR|O_CREAT|O_EXCL|O_APPEND*/: true,\n    4096 /*O_RDONLY|O_DSYNC*/: true,\n    4098 /*O_RDWR|O_DSYNC*/: true,\n};\nexport class DriveFSEmscriptenStreamOps {\n    constructor(fs) {\n        this.fs = fs;\n    }\n    open(stream) {\n        const path = this.fs.realPath(stream.node);\n        if (this.fs.FS.isFile(stream.node.mode)) {\n            stream.file = this.fs.API.get(path);\n        }\n    }\n    close(stream) {\n        if (!this.fs.FS.isFile(stream.node.mode) || !stream.file) {\n            return;\n        }\n        const path = this.fs.realPath(stream.node);\n        const flags = stream.flags;\n        let parsedFlags = typeof flags === 'string' ? parseInt(flags, 10) : flags;\n        parsedFlags &= 0x1fff;\n        let needsWrite = true;\n        if (parsedFlags in flagNeedsWrite) {\n            needsWrite = flagNeedsWrite[parsedFlags];\n        }\n        if (needsWrite) {\n            this.fs.API.put(path, stream.file);\n            stream.file = undefined;\n        }\n    }\n    read(stream, buffer, offset, length, position) {\n        var _a;\n        if (length <= 0 || stream.file === undefined) {\n            return 0;\n        }\n        const size = Math.min(((_a = stream.file.data.length) !== null && _a !== void 0 ? _a : 0) - position, length);\n        try {\n            buffer.set(stream.file.data.subarray(position, position + size), offset);\n        }\n        catch (e) {\n            throw new this.fs.FS.ErrnoError(this.fs.ERRNO_CODES['EPERM']);\n        }\n        return size;\n    }\n    write(stream, buffer, offset, length, position) {\n        var _a, _b;\n        if (length <= 0 || stream.file === undefined) {\n            return 0;\n        }\n        stream.node.timestamp = Date.now();\n        try {\n            if (position + length > ((_b = (_a = stream.file) === null || _a === void 0 ? void 0 : _a.data.length) !== null && _b !== void 0 ? _b : 0)) {\n                const oldData = stream.file.data ? stream.file.data : new Uint8Array();\n                stream.file.data = new Uint8Array(position + length);\n                stream.file.data.set(oldData);\n            }\n            stream.file.data.set(buffer.subarray(offset, offset + length), position);\n            return length;\n        }\n        catch (e) {\n            throw new this.fs.FS.ErrnoError(this.fs.ERRNO_CODES['EPERM']);\n        }\n    }\n    llseek(stream, offset, whence) {\n        let position = offset;\n        if (whence === SEEK_CUR) {\n            position += stream.position;\n        }\n        else if (whence === SEEK_END) {\n            if (this.fs.FS.isFile(stream.node.mode)) {\n                if (stream.file !== undefined) {\n                    position += stream.file.data.length;\n                }\n                else {\n                    throw new this.fs.FS.ErrnoError(this.fs.ERRNO_CODES['EPERM']);\n                }\n            }\n        }\n        if (position < 0) {\n            throw new this.fs.FS.ErrnoError(this.fs.ERRNO_CODES['EINVAL']);\n        }\n        return position;\n    }\n}\nexport class DriveFSEmscriptenNodeOps {\n    constructor(fs) {\n        this.fs = fs;\n    }\n    getattr(node) {\n        return this.fs.API.getattr(this.fs.realPath(node));\n    }\n    setattr(node, attr) {\n        // TODO\n    }\n    lookup(parent, name) {\n        const path = this.fs.PATH.join2(this.fs.realPath(parent), name);\n        const result = this.fs.API.lookup(path);\n        if (!result.ok) {\n            throw this.fs.FS.genericErrors[this.fs.ERRNO_CODES['ENOENT']];\n        }\n        return this.fs.createNode(parent, name, result.mode);\n    }\n    mknod(parent, name, mode, dev) {\n        const path = this.fs.PATH.join2(this.fs.realPath(parent), name);\n        this.fs.API.mknod(path, mode);\n        return this.fs.createNode(parent, name, mode, dev);\n    }\n    rename(oldNode, newDir, newName) {\n        this.fs.API.rename(oldNode.parent\n            ? this.fs.PATH.join2(this.fs.realPath(oldNode.parent), oldNode.name)\n            : oldNode.name, this.fs.PATH.join2(this.fs.realPath(newDir), newName));\n        // Updating the in-memory node\n        oldNode.name = newName;\n        oldNode.parent = newDir;\n    }\n    unlink(parent, name) {\n        this.fs.API.rmdir(this.fs.PATH.join2(this.fs.realPath(parent), name));\n    }\n    rmdir(parent, name) {\n        this.fs.API.rmdir(this.fs.PATH.join2(this.fs.realPath(parent), name));\n    }\n    readdir(node) {\n        return this.fs.API.readdir(this.fs.realPath(node));\n    }\n    symlink(parent, newName, oldPath) {\n        throw new this.fs.FS.ErrnoError(this.fs.ERRNO_CODES['EPERM']);\n    }\n    readlink(node) {\n        throw new this.fs.FS.ErrnoError(this.fs.ERRNO_CODES['EPERM']);\n    }\n}\n/**\n * Wrap ServiceWorker requests for an Emscripten-compatible synchronous API.\n */\nexport class ContentsAPI {\n    constructor(baseUrl, driveName, mountpoint, FS, ERRNO_CODES) {\n        this._baseUrl = baseUrl;\n        this._driveName = driveName;\n        this._mountpoint = mountpoint;\n        this.FS = FS;\n        this.ERRNO_CODES = ERRNO_CODES;\n    }\n    request(method, path, data = null) {\n        const xhr = new XMLHttpRequest();\n        xhr.open(method, encodeURI(`${this.endpoint}${path}`), false);\n        try {\n            if (data === null) {\n                xhr.send();\n            }\n            else {\n                xhr.send(data);\n            }\n        }\n        catch (e) {\n            console.error(e);\n        }\n        if (xhr.status >= 400) {\n            throw new this.FS.ErrnoError(this.ERRNO_CODES['EINVAL']);\n        }\n        return JSON.parse(xhr.responseText);\n    }\n    lookup(path) {\n        return this.request('GET', `${this.normalizePath(path)}?m=lookup`);\n    }\n    getmode(path) {\n        return Number.parseInt(this.request('GET', `${this.normalizePath(path)}?m=getmode`));\n    }\n    mknod(path, mode) {\n        return this.request('GET', `${this.normalizePath(path)}?m=mknod&args=${mode}`);\n    }\n    rename(oldPath, newPath) {\n        return this.request('GET', `${this.normalizePath(oldPath)}?m=rename&args=${this.normalizePath(newPath)}`);\n    }\n    readdir(path) {\n        const dirlist = this.request('GET', `${this.normalizePath(path)}?m=readdir`);\n        dirlist.push('.');\n        dirlist.push('..');\n        return dirlist;\n    }\n    rmdir(path) {\n        return this.request('GET', `${this.normalizePath(path)}?m=rmdir`);\n    }\n    get(path) {\n        const response = this.request('GET', `${this.normalizePath(path)}?m=get`);\n        const serializedContent = response.content;\n        const format = response.format;\n        switch (format) {\n            case 'json':\n            case 'text':\n                return {\n                    data: encoder.encode(serializedContent),\n                    format,\n                };\n            case 'base64': {\n                const binString = atob(serializedContent);\n                const len = binString.length;\n                const data = new Uint8Array(len);\n                for (let i = 0; i < len; i++) {\n                    data[i] = binString.charCodeAt(i);\n                }\n                return {\n                    data,\n                    format,\n                };\n            }\n            default:\n                throw new this.FS.ErrnoError(this.ERRNO_CODES['ENOENT']);\n        }\n    }\n    put(path, value) {\n        switch (value.format) {\n            case 'json':\n            case 'text':\n                return this.request('PUT', `${this.normalizePath(path)}?m=put&args=${value.format}`, decoder.decode(value.data));\n            case 'base64': {\n                let binary = '';\n                for (let i = 0; i < value.data.byteLength; i++) {\n                    binary += String.fromCharCode(value.data[i]);\n                }\n                return this.request('PUT', `${this.normalizePath(path)}?m=put&args=${value.format}`, btoa(binary));\n            }\n        }\n    }\n    getattr(path) {\n        const stats = this.request('GET', `${this.normalizePath(path)}?m=getattr`);\n        // Turn datetimes into proper objects\n        stats.atime = new Date(stats.atime);\n        stats.mtime = new Date(stats.mtime);\n        stats.ctime = new Date(stats.ctime);\n        return stats;\n    }\n    /**\n     * Normalize a Path by making it compliant for the content manager\n     *\n     * @param path: the path relatively to the Emscripten drive\n     */\n    normalizePath(path) {\n        // Remove mountpoint prefix\n        if (path.startsWith(this._mountpoint)) {\n            path = path.slice(this._mountpoint.length);\n        }\n        // Add JupyterLab drive name\n        if (this._driveName) {\n            path = `${this._driveName}${DRIVE_SEPARATOR}${path}`;\n        }\n        return path;\n    }\n    /**\n     * Get the api/drive endpoint\n     */\n    get endpoint() {\n        return `${this._baseUrl}api/drive/`;\n    }\n}\nexport class DriveFS {\n    constructor(options) {\n        this.FS = options.FS;\n        this.PATH = options.PATH;\n        this.ERRNO_CODES = options.ERRNO_CODES;\n        this.API = new ContentsAPI(options.baseUrl, options.driveName, options.mountpoint, this.FS, this.ERRNO_CODES);\n        this.driveName = options.driveName;\n        this.node_ops = new DriveFSEmscriptenNodeOps(this);\n        this.stream_ops = new DriveFSEmscriptenStreamOps(this);\n    }\n    mount(mount) {\n        return this.createNode(null, mount.mountpoint, DIR_MODE | 511, 0);\n    }\n    createNode(parent, name, mode, dev) {\n        const FS = this.FS;\n        if (!FS.isDir(mode) && !FS.isFile(mode)) {\n            throw new FS.ErrnoError(this.ERRNO_CODES['EINVAL']);\n        }\n        const node = FS.createNode(parent, name, mode, dev);\n        node.node_ops = this.node_ops;\n        node.stream_ops = this.stream_ops;\n        return node;\n    }\n    getMode(path) {\n        return this.API.getmode(path);\n    }\n    realPath(node) {\n        const parts = [];\n        let currentNode = node;\n        parts.push(currentNode.name);\n        while (currentNode.parent !== currentNode) {\n            currentNode = currentNode.parent;\n            parts.push(currentNode.name);\n        }\n        parts.reverse();\n        return this.PATH.join.apply(null, parts);\n    }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { DriveFS } from '@jupyterlite/contents';\n// TODO Once this https://github.com/pyodide/pyodide/pull/2582/files is released\n// Remove this shameless copy\nconst ERRNO_CODES = {\n    E2BIG: 1,\n    EACCES: 2,\n    EADDRINUSE: 3,\n    EADDRNOTAVAIL: 4,\n    EADV: 122,\n    EAFNOSUPPORT: 5,\n    EAGAIN: 6,\n    EALREADY: 7,\n    EBADE: 113,\n    EBADF: 8,\n    EBADFD: 127,\n    EBADMSG: 9,\n    EBADR: 114,\n    EBADRQC: 103,\n    EBADSLT: 102,\n    EBFONT: 101,\n    EBUSY: 10,\n    ECANCELED: 11,\n    ECHILD: 12,\n    ECHRNG: 106,\n    ECOMM: 124,\n    ECONNABORTED: 13,\n    ECONNREFUSED: 14,\n    ECONNRESET: 15,\n    EDEADLK: 16,\n    EDEADLOCK: 16,\n    EDESTADDRREQ: 17,\n    EDOM: 18,\n    EDOTDOT: 125,\n    EDQUOT: 19,\n    EEXIST: 20,\n    EFAULT: 21,\n    EFBIG: 22,\n    EHOSTDOWN: 142,\n    EHOSTUNREACH: 23,\n    EIDRM: 24,\n    EILSEQ: 25,\n    EINPROGRESS: 26,\n    EINTR: 27,\n    EINVAL: 28,\n    EIO: 29,\n    EISCONN: 30,\n    EISDIR: 31,\n    EL2HLT: 112,\n    EL2NSYNC: 156,\n    EL3HLT: 107,\n    EL3RST: 108,\n    ELIBACC: 129,\n    ELIBBAD: 130,\n    ELIBEXEC: 133,\n    ELIBMAX: 132,\n    ELIBSCN: 131,\n    ELNRNG: 109,\n    ELOOP: 32,\n    EMFILE: 33,\n    EMLINK: 34,\n    EMSGSIZE: 35,\n    EMULTIHOP: 36,\n    ENAMETOOLONG: 37,\n    ENETDOWN: 38,\n    ENETRESET: 39,\n    ENETUNREACH: 40,\n    ENFILE: 41,\n    ENOANO: 104,\n    ENOBUFS: 42,\n    ENOCSI: 111,\n    ENODATA: 116,\n    ENODEV: 43,\n    ENOENT: 44,\n    ENOEXEC: 45,\n    ENOLCK: 46,\n    ENOLINK: 47,\n    ENOMEDIUM: 148,\n    ENOMEM: 48,\n    ENOMSG: 49,\n    ENONET: 119,\n    ENOPKG: 120,\n    ENOPROTOOPT: 50,\n    ENOSPC: 51,\n    ENOSR: 118,\n    ENOSTR: 100,\n    ENOSYS: 52,\n    ENOTBLK: 105,\n    ENOTCONN: 53,\n    ENOTDIR: 54,\n    ENOTEMPTY: 55,\n    ENOTRECOVERABLE: 56,\n    ENOTSOCK: 57,\n    ENOTSUP: 138,\n    ENOTTY: 59,\n    ENOTUNIQ: 126,\n    ENXIO: 60,\n    EOPNOTSUPP: 138,\n    EOVERFLOW: 61,\n    EOWNERDEAD: 62,\n    EPERM: 63,\n    EPFNOSUPPORT: 139,\n    EPIPE: 64,\n    EPROTO: 65,\n    EPROTONOSUPPORT: 66,\n    EPROTOTYPE: 67,\n    ERANGE: 68,\n    EREMCHG: 128,\n    EREMOTE: 121,\n    EROFS: 69,\n    ESHUTDOWN: 140,\n    ESOCKTNOSUPPORT: 137,\n    ESPIPE: 70,\n    ESRCH: 71,\n    ESRMNT: 123,\n    ESTALE: 72,\n    ESTRPIPE: 135,\n    ETIME: 117,\n    ETIMEDOUT: 73,\n    ETOOMANYREFS: 141,\n    ETXTBSY: 74,\n    EUNATCH: 110,\n    EUSERS: 136,\n    EWOULDBLOCK: 6,\n    EXDEV: 75,\n    EXFULL: 115,\n};\nexport class PyoliteRemoteKernel {\n    constructor() {\n        /**\n         * Initialization options.\n         */\n        this._options = null;\n        this._initializer = null;\n        /** TODO: real typing */\n        this._localPath = '';\n        this._driveName = '';\n        this._driveFS = null;\n        this._initialized = new Promise((resolve, reject) => {\n            this._initializer = { resolve, reject };\n        });\n    }\n    /**\n     * Accept the URLs from the host\n     **/\n    async initialize(options) {\n        var _a;\n        this._options = options;\n        if (options.location.includes(':')) {\n            const parts = options.location.split(':');\n            this._driveName = parts[0];\n            this._localPath = parts[1];\n        }\n        else {\n            this._driveName = '';\n            this._localPath = options.location;\n        }\n        await this.initRuntime(options);\n        await this.initFilesystem(options);\n        await this.initPackageManager(options);\n        await this.initKernel(options);\n        await this.initGlobals(options);\n        (_a = this._initializer) === null || _a === void 0 ? void 0 : _a.resolve();\n    }\n    async initRuntime(options) {\n        const { pyodideUrl, indexUrl } = options;\n        importScripts(pyodideUrl);\n        this._pyodide = await self.loadPyodide({ indexURL: indexUrl });\n    }\n    async initPackageManager(options) {\n        if (!this._options) {\n            throw new Error('Uninitialized');\n        }\n        const { pipliteWheelUrl, disablePyPIFallback, pipliteUrls } = this._options;\n        // this is the only use of `loadPackage`, allow `piplite` to handle the rest\n        await this._pyodide.loadPackage(['micropip']);\n        // get piplite early enough to impact pyolite dependencies\n        await this._pyodide.runPythonAsync(`\n      import micropip\n      await micropip.install('${pipliteWheelUrl}', keep_going=True)\n      import piplite.piplite\n      piplite.piplite._PIPLITE_DISABLE_PYPI = ${disablePyPIFallback ? 'True' : 'False'}\n      piplite.piplite._PIPLITE_URLS = ${JSON.stringify(pipliteUrls)}\n    `);\n    }\n    async initKernel(options) {\n        // from this point forward, only use piplite\n        await this._pyodide.runPythonAsync(`\n      await piplite.install(['matplotlib', 'ipykernel'], keep_going=True);\n      await piplite.install(['pyolite'], keep_going=True);\n      await piplite.install(['ipython'], keep_going=True);\n      import pyolite\n    `);\n        // cd to the kernel location\n        if (options.mountDrive && this._localPath) {\n            await this._pyodide.runPythonAsync(`\n        import os;\n        os.chdir(\"${this._localPath}\");\n      `);\n        }\n    }\n    async initGlobals(options) {\n        const { globals } = this._pyodide;\n        this._kernel = globals.get('pyolite').kernel_instance.copy();\n        this._stdout_stream = globals.get('pyolite').stdout_stream.copy();\n        this._stderr_stream = globals.get('pyolite').stderr_stream.copy();\n        this._interpreter = this._kernel.interpreter.copy();\n        this._interpreter.send_comm = this.sendComm.bind(this);\n    }\n    /**\n     * Setup custom Emscripten FileSystem\n     */\n    async initFilesystem(options) {\n        if (options.mountDrive) {\n            const mountpoint = '/drive';\n            const { FS } = this._pyodide;\n            const { baseUrl } = options;\n            // TODO Once this https://github.com/pyodide/pyodide/pull/2582/files is released\n            // We'll be able to acces PATH and ERRNO_CODES from this._pyodide directly (not through _module)\n            const driveFS = new DriveFS({\n                FS,\n                PATH: this._pyodide._module.PATH,\n                ERRNO_CODES: ERRNO_CODES,\n                baseUrl,\n                driveName: this._driveName,\n                mountpoint,\n            });\n            FS.mkdir(mountpoint);\n            FS.mount(driveFS, {}, mountpoint);\n            FS.chdir(mountpoint);\n            this._driveFS = driveFS;\n        }\n    }\n    /**\n     * Recursively convert a Map to a JavaScript object\n     * @param obj A Map, Array, or other  object to convert\n     */\n    mapToObject(obj) {\n        const out = obj instanceof Array ? [] : {};\n        obj.forEach((value, key) => {\n            out[key] =\n                value instanceof Map || value instanceof Array\n                    ? this.mapToObject(value)\n                    : value;\n        });\n        return out;\n    }\n    /**\n     * Format the response from the Pyodide evaluation.\n     *\n     * @param res The result object from the Pyodide evaluation\n     */\n    formatResult(res) {\n        if (!this._pyodide.isPyProxy(res)) {\n            return res;\n        }\n        // TODO: this is a bit brittle\n        const m = res.toJs();\n        const results = this.mapToObject(m);\n        return results;\n    }\n    /**\n     * Makes sure pyodide is ready before continuing, and cache the parent message.\n     */\n    async setup(parent) {\n        await this._initialized;\n        this._kernel._parent_header = this._pyodide.toPy(parent);\n    }\n    /**\n     * Execute code with the interpreter.\n     *\n     * @param content The incoming message with the code to execute.\n     */\n    async execute(content, parent) {\n        await this.setup(parent);\n        const publishExecutionResult = (prompt_count, data, metadata) => {\n            const bundle = {\n                execution_count: prompt_count,\n                data: this.formatResult(data),\n                metadata: this.formatResult(metadata),\n            };\n            postMessage({\n                parentHeader: this.formatResult(this._kernel._parent_header)['header'],\n                bundle,\n                type: 'execute_result',\n            });\n        };\n        const publishExecutionError = (ename, evalue, traceback) => {\n            const bundle = {\n                ename: ename,\n                evalue: evalue,\n                traceback: traceback,\n            };\n            postMessage({\n                parentHeader: this.formatResult(this._kernel._parent_header)['header'],\n                bundle,\n                type: 'execute_error',\n            });\n        };\n        const clearOutputCallback = (wait) => {\n            const bundle = {\n                wait: this.formatResult(wait),\n            };\n            postMessage({\n                parentHeader: this.formatResult(this._kernel._parent_header)['header'],\n                bundle,\n                type: 'clear_output',\n            });\n        };\n        const displayDataCallback = (data, metadata, transient) => {\n            const bundle = {\n                data: this.formatResult(data),\n                metadata: this.formatResult(metadata),\n                transient: this.formatResult(transient),\n            };\n            postMessage({\n                parentHeader: this.formatResult(this._kernel._parent_header)['header'],\n                bundle,\n                type: 'display_data',\n            });\n        };\n        const updateDisplayDataCallback = (data, metadata, transient) => {\n            const bundle = {\n                data: this.formatResult(data),\n                metadata: this.formatResult(metadata),\n                transient: this.formatResult(transient),\n            };\n            postMessage({\n                parentHeader: this.formatResult(this._kernel._parent_header)['header'],\n                bundle,\n                type: 'update_display_data',\n            });\n        };\n        const publishStreamCallback = (name, text) => {\n            const bundle = {\n                name: this.formatResult(name),\n                text: this.formatResult(text),\n            };\n            postMessage({\n                parentHeader: this.formatResult(this._kernel._parent_header)['header'],\n                bundle,\n                type: 'stream',\n            });\n        };\n        this._stdout_stream.publish_stream_callback = publishStreamCallback;\n        this._stderr_stream.publish_stream_callback = publishStreamCallback;\n        this._interpreter.display_pub.clear_output_callback = clearOutputCallback;\n        this._interpreter.display_pub.display_data_callback = displayDataCallback;\n        this._interpreter.display_pub.update_display_data_callback =\n            updateDisplayDataCallback;\n        this._interpreter.displayhook.publish_execution_result = publishExecutionResult;\n        this._interpreter.input = this.input;\n        this._interpreter.getpass = this.getpass;\n        const res = await this._kernel.run(content.code);\n        const results = this.formatResult(res);\n        if (results['status'] === 'error') {\n            publishExecutionError(results['ename'], results['evalue'], results['traceback']);\n        }\n        return results;\n    }\n    /**\n     * Complete the code submitted by a user.\n     *\n     * @param content The incoming message with the code to complete.\n     */\n    async complete(content, parent) {\n        await this.setup(parent);\n        const res = this._kernel.complete(content.code, content.cursor_pos);\n        const results = this.formatResult(res);\n        return results;\n    }\n    /**\n     * Inspect the code submitted by a user.\n     *\n     * @param content The incoming message with the code to inspect.\n     */\n    async inspect(content, parent) {\n        await this.setup(parent);\n        const res = this._kernel.inspect(content.code, content.cursor_pos, content.detail_level);\n        const results = this.formatResult(res);\n        return results;\n    }\n    /**\n     * Check code for completeness submitted by a user.\n     *\n     * @param content The incoming message with the code to check.\n     */\n    async isComplete(content, parent) {\n        await this.setup(parent);\n        const res = this._kernel.is_complete(content.code);\n        const results = this.formatResult(res);\n        return results;\n    }\n    /**\n     * Respond to the commInfoRequest.\n     *\n     * @param content The incoming message with the comm target name.\n     */\n    async commInfo(content, parent) {\n        await this.setup(parent);\n        const res = this._kernel.comm_info(content.target_name);\n        const results = this.formatResult(res);\n        return {\n            comms: results,\n            status: 'ok',\n        };\n    }\n    /**\n     * Respond to the commOpen.\n     *\n     * @param content The incoming message with the comm open.\n     */\n    async commOpen(content, parent) {\n        await this.setup(parent);\n        const res = this._kernel.comm_manager.comm_open(this._pyodide.toPy(content));\n        const results = this.formatResult(res);\n        return results;\n    }\n    /**\n     * Respond to the commMsg.\n     *\n     * @param content The incoming message with the comm msg.\n     */\n    async commMsg(content, parent) {\n        await this.setup(parent);\n        const res = this._kernel.comm_manager.comm_msg(this._pyodide.toPy(content));\n        const results = this.formatResult(res);\n        return results;\n    }\n    /**\n     * Respond to the commClose.\n     *\n     * @param content The incoming message with the comm close.\n     */\n    async commClose(content, parent) {\n        await this.setup(parent);\n        const res = this._kernel.comm_manager.comm_close(this._pyodide.toPy(content));\n        const results = this.formatResult(res);\n        return results;\n    }\n    /**\n     * Resolve the input request by getting back the reply from the main thread\n     *\n     * @param content The incoming message with the reply\n     */\n    async inputReply(content, parent) {\n        await this.setup(parent);\n        this._resolveInputReply(content);\n    }\n    /**\n     * Send a input request to the front-end.\n     *\n     * @param prompt the text to show at the prompt\n     * @param password Is the request for a password?\n     */\n    async sendInputRequest(prompt, password) {\n        const content = {\n            prompt,\n            password,\n        };\n        postMessage({\n            type: 'input_request',\n            parentHeader: this.formatResult(this._kernel._parent_header)['header'],\n            content,\n        });\n    }\n    async getpass(prompt) {\n        prompt = typeof prompt === 'undefined' ? '' : prompt;\n        await this.sendInputRequest(prompt, true);\n        const replyPromise = new Promise((resolve) => {\n            this._resolveInputReply = resolve;\n        });\n        const result = await replyPromise;\n        return result['value'];\n    }\n    async input(prompt) {\n        prompt = typeof prompt === 'undefined' ? '' : prompt;\n        await this.sendInputRequest(prompt, false);\n        const replyPromise = new Promise((resolve) => {\n            this._resolveInputReply = resolve;\n        });\n        const result = await replyPromise;\n        return result['value'];\n    }\n    /**\n     * Send a comm message to the front-end.\n     *\n     * @param type The type of the comm message.\n     * @param content The content.\n     * @param metadata The metadata.\n     * @param ident The ident.\n     * @param buffers The binary buffers.\n     */\n    async sendComm(type, content, metadata, ident, buffers) {\n        postMessage({\n            type: type,\n            content: this.formatResult(content),\n            metadata: this.formatResult(metadata),\n            ident: this.formatResult(ident),\n            buffers: this.formatResult(buffers),\n            parentHeader: this.formatResult(this._kernel._parent_header)['header'],\n        });\n    }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/**\n * A WebWorker entrypoint that uses comlink to handle postMessage details\n */\nimport { expose } from 'comlink';\nimport { PyoliteRemoteKernel } from './worker';\nconst worker = new PyoliteRemoteKernel();\nexpose(worker);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// expose the module cache\n__webpack_require__.c = __webpack_module_cache__;\n\n","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.S = {};\nvar initPromises = {};\nvar initTokens = {};\n__webpack_require__.I = (name, initScope) => {\n\tif(!initScope) initScope = [];\n\t// handling circular init calls\n\tvar initToken = initTokens[name];\n\tif(!initToken) initToken = initTokens[name] = {};\n\tif(initScope.indexOf(initToken) >= 0) return;\n\tinitScope.push(initToken);\n\t// only runs once\n\tif(initPromises[name]) return initPromises[name];\n\t// creates a new share scope if needed\n\tif(!__webpack_require__.o(__webpack_require__.S, name)) __webpack_require__.S[name] = {};\n\t// runs all init snippets from all modules reachable\n\tvar scope = __webpack_require__.S[name];\n\tvar warn = (msg) => (typeof console !== \"undefined\" && console.warn && console.warn(msg));\n\tvar uniqueName = \"_JUPYTERLAB.CORE_OUTPUT\";\n\tvar register = (name, version, factory, eager) => {\n\t\tvar versions = scope[name] = scope[name] || {};\n\t\tvar activeVersion = versions[version];\n\t\tif(!activeVersion || (!activeVersion.loaded && (!eager != !activeVersion.eager ? eager : uniqueName > activeVersion.from))) versions[version] = { get: factory, from: uniqueName, eager: !!eager };\n\t};\n\tvar initExternal = (id) => {\n\t\tvar handleError = (err) => (warn(\"Initialization of sharing external failed: \" + err));\n\t\ttry {\n\t\t\tvar module = __webpack_require__(id);\n\t\t\tif(!module) return;\n\t\t\tvar initFn = (module) => (module && module.init && module.init(__webpack_require__.S[name], initScope))\n\t\t\tif(module.then) return promises.push(module.then(initFn, handleError));\n\t\t\tvar initResult = initFn(module);\n\t\t\tif(initResult && initResult.then) return promises.push(initResult['catch'](handleError));\n\t\t} catch(err) { handleError(err); }\n\t}\n\tvar promises = [];\n\tswitch(name) {\n\t}\n\tif(!promises.length) return initPromises[name] = 1;\n\treturn initPromises[name] = Promise.all(promises).then(() => (initPromises[name] = 1));\n};","// module cache are used so entry inlining is disabled\n// startup\n// Load entry module and return exports\nvar __webpack_exports__ = __webpack_require__(80835);\n"],"names":["proxyMarker","Symbol","createEndpoint","releaseProxy","throwMarker","isObject","val","transferHandlers","Map","canHandle","serialize","obj","port1","port2","MessageChannel","expose","deserialize","port","start","createProxy","target","value","serialized","Error","isError","message","name","stack","Object","assign","ep","self","addEventListener","callback","ev","data","id","type","path","argumentList","map","fromWireValue","returnValue","parent","slice","reduce","prop","rawValue","apply","proxy","transfers","transferCache","set","transfer","undefined","Promise","resolve","catch","then","wireValue","transferables","toWireValue","postMessage","removeEventListener","closeEndPoint","endpoint","constructor","isMessagePort","close","throwIfProxyReleased","isReleased","isProxyReleased","Proxy","get","_target","requestResponseMessage","p","toString","length","r","bind","_thisArg","rawArgumentList","last","processArguments","construct","processed","v","arr","Array","prototype","concat","WeakMap","handler","serializedValue","msg","fill","Math","floor","random","Number","MAX_SAFE_INTEGER","join","l","encoder","TextEncoder","decoder","TextDecoder","flagNeedsWrite","DriveFSEmscriptenStreamOps","fs","this","open","stream","realPath","node","FS","isFile","mode","file","API","flags","parsedFlags","parseInt","needsWrite","put","read","buffer","offset","position","_a","size","min","subarray","e","ErrnoError","ERRNO_CODES","write","_b","timestamp","Date","now","oldData","Uint8Array","llseek","whence","DriveFSEmscriptenNodeOps","getattr","setattr","attr","lookup","PATH","join2","result","ok","genericErrors","createNode","mknod","dev","rename","oldNode","newDir","newName","unlink","rmdir","readdir","symlink","oldPath","readlink","ContentsAPI","baseUrl","driveName","mountpoint","_baseUrl","_driveName","_mountpoint","request","method","xhr","XMLHttpRequest","encodeURI","send","console","error","status","JSON","parse","responseText","normalizePath","getmode","newPath","dirlist","push","response","serializedContent","content","format","encode","binString","atob","len","i","charCodeAt","decode","binary","byteLength","String","fromCharCode","btoa","stats","atime","mtime","ctime","startsWith","DriveFS","options","node_ops","stream_ops","mount","DIR_MODE","isDir","getMode","parts","currentNode","reverse","E2BIG","EACCES","EADDRINUSE","EADDRNOTAVAIL","EADV","EAFNOSUPPORT","EAGAIN","EALREADY","EBADE","EBADF","EBADFD","EBADMSG","EBADR","EBADRQC","EBADSLT","EBFONT","EBUSY","ECANCELED","ECHILD","ECHRNG","ECOMM","ECONNABORTED","ECONNREFUSED","ECONNRESET","EDEADLK","EDEADLOCK","EDESTADDRREQ","EDOM","EDOTDOT","EDQUOT","EEXIST","EFAULT","EFBIG","EHOSTDOWN","EHOSTUNREACH","EIDRM","EILSEQ","EINPROGRESS","EINTR","EINVAL","EIO","EISCONN","EISDIR","EL2HLT","EL2NSYNC","EL3HLT","EL3RST","ELIBACC","ELIBBAD","ELIBEXEC","ELIBMAX","ELIBSCN","ELNRNG","ELOOP","EMFILE","EMLINK","EMSGSIZE","EMULTIHOP","ENAMETOOLONG","ENETDOWN","ENETRESET","ENETUNREACH","ENFILE","ENOANO","ENOBUFS","ENOCSI","ENODATA","ENODEV","ENOENT","ENOEXEC","ENOLCK","ENOLINK","ENOMEDIUM","ENOMEM","ENOMSG","ENONET","ENOPKG","ENOPROTOOPT","ENOSPC","ENOSR","ENOSTR","ENOSYS","ENOTBLK","ENOTCONN","ENOTDIR","ENOTEMPTY","ENOTRECOVERABLE","ENOTSOCK","ENOTSUP","ENOTTY","ENOTUNIQ","ENXIO","EOPNOTSUPP","EOVERFLOW","EOWNERDEAD","EPERM","EPFNOSUPPORT","EPIPE","EPROTO","EPROTONOSUPPORT","EPROTOTYPE","ERANGE","EREMCHG","EREMOTE","EROFS","ESHUTDOWN","ESOCKTNOSUPPORT","ESPIPE","ESRCH","ESRMNT","ESTALE","ESTRPIPE","ETIME","ETIMEDOUT","ETOOMANYREFS","ETXTBSY","EUNATCH","EUSERS","EWOULDBLOCK","EXDEV","EXFULL","_options","_initializer","_localPath","_driveFS","_initialized","reject","async","location","includes","split","initRuntime","initFilesystem","initPackageManager","initKernel","initGlobals","pyodideUrl","indexUrl","importScripts","_pyodide","loadPyodide","indexURL","pipliteWheelUrl","disablePyPIFallback","pipliteUrls","loadPackage","runPythonAsync","stringify","mountDrive","globals","_kernel","kernel_instance","copy","_stdout_stream","stdout_stream","_stderr_stream","stderr_stream","_interpreter","interpreter","send_comm","sendComm","driveFS","_module","mkdir","chdir","mapToObject","out","forEach","key","formatResult","res","isPyProxy","m","toJs","_parent_header","toPy","setup","publishStreamCallback","text","bundle","parentHeader","publish_stream_callback","display_pub","clear_output_callback","wait","display_data_callback","metadata","transient","update_display_data_callback","displayhook","publish_execution_result","prompt_count","execution_count","input","getpass","run","code","results","ename","evalue","traceback","publishExecutionError","complete","cursor_pos","inspect","detail_level","is_complete","comm_info","target_name","comms","comm_manager","comm_open","comm_msg","comm_close","_resolveInputReply","prompt","password","sendInputRequest","replyPromise","ident","buffers","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","c","o","hasOwnProperty","call","S","initPromises","initTokens","I","initScope","initToken","indexOf","promises","all","__webpack_exports__"],"sourceRoot":""}