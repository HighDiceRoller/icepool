{"version":3,"file":"9750.ce60457.js","mappings":"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","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/comlink/dist/esm/comlink.mjs","webpack://_JUPYTERLAB.CORE_OUTPUT/../packages/pyolite-kernel/src/_pypi.ts","webpack://_JUPYTERLAB.CORE_OUTPUT/../packages/pyolite-kernel/src/kernel.ts","webpack://_JUPYTERLAB.CORE_OUTPUT/../packages/pyolite-kernel/src/worker.ts"],"sourcesContent":["/**\r\n * Copyright 2019 Google Inc. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst proxyMarker = Symbol(\"Comlink.proxy\");\r\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\r\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\r\nconst throwMarker = Symbol(\"Comlink.thrown\");\r\nconst isObject = (val) => (typeof val === \"object\" && val !== null) || typeof val === \"function\";\r\n/**\r\n * Internal transfer handle to handle objects marked to proxy.\r\n */\r\nconst proxyTransferHandler = {\r\n    canHandle: (val) => isObject(val) && val[proxyMarker],\r\n    serialize(obj) {\r\n        const { port1, port2 } = new MessageChannel();\r\n        expose(obj, port1);\r\n        return [port2, [port2]];\r\n    },\r\n    deserialize(port) {\r\n        port.start();\r\n        return wrap(port);\r\n    },\r\n};\r\n/**\r\n * Internal transfer handler to handle thrown exceptions.\r\n */\r\nconst throwTransferHandler = {\r\n    canHandle: (value) => isObject(value) && throwMarker in value,\r\n    serialize({ value }) {\r\n        let serialized;\r\n        if (value instanceof Error) {\r\n            serialized = {\r\n                isError: true,\r\n                value: {\r\n                    message: value.message,\r\n                    name: value.name,\r\n                    stack: value.stack,\r\n                },\r\n            };\r\n        }\r\n        else {\r\n            serialized = { isError: false, value };\r\n        }\r\n        return [serialized, []];\r\n    },\r\n    deserialize(serialized) {\r\n        if (serialized.isError) {\r\n            throw Object.assign(new Error(serialized.value.message), serialized.value);\r\n        }\r\n        throw serialized.value;\r\n    },\r\n};\r\n/**\r\n * Allows customizing the serialization of certain values.\r\n */\r\nconst transferHandlers = new Map([\r\n    [\"proxy\", proxyTransferHandler],\r\n    [\"throw\", throwTransferHandler],\r\n]);\r\nfunction expose(obj, ep = self) {\r\n    ep.addEventListener(\"message\", function callback(ev) {\r\n        if (!ev || !ev.data) {\r\n            return;\r\n        }\r\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\r\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\r\n        let returnValue;\r\n        try {\r\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\r\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\r\n            switch (type) {\r\n                case \"GET\" /* GET */:\r\n                    {\r\n                        returnValue = rawValue;\r\n                    }\r\n                    break;\r\n                case \"SET\" /* SET */:\r\n                    {\r\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\r\n                        returnValue = true;\r\n                    }\r\n                    break;\r\n                case \"APPLY\" /* APPLY */:\r\n                    {\r\n                        returnValue = rawValue.apply(parent, argumentList);\r\n                    }\r\n                    break;\r\n                case \"CONSTRUCT\" /* CONSTRUCT */:\r\n                    {\r\n                        const value = new rawValue(...argumentList);\r\n                        returnValue = proxy(value);\r\n                    }\r\n                    break;\r\n                case \"ENDPOINT\" /* ENDPOINT */:\r\n                    {\r\n                        const { port1, port2 } = new MessageChannel();\r\n                        expose(obj, port2);\r\n                        returnValue = transfer(port1, [port1]);\r\n                    }\r\n                    break;\r\n                case \"RELEASE\" /* RELEASE */:\r\n                    {\r\n                        returnValue = undefined;\r\n                    }\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n        }\r\n        catch (value) {\r\n            returnValue = { value, [throwMarker]: 0 };\r\n        }\r\n        Promise.resolve(returnValue)\r\n            .catch((value) => {\r\n            return { value, [throwMarker]: 0 };\r\n        })\r\n            .then((returnValue) => {\r\n            const [wireValue, transferables] = toWireValue(returnValue);\r\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\r\n            if (type === \"RELEASE\" /* RELEASE */) {\r\n                // detach and deactive after sending release response above.\r\n                ep.removeEventListener(\"message\", callback);\r\n                closeEndPoint(ep);\r\n            }\r\n        });\r\n    });\r\n    if (ep.start) {\r\n        ep.start();\r\n    }\r\n}\r\nfunction isMessagePort(endpoint) {\r\n    return endpoint.constructor.name === \"MessagePort\";\r\n}\r\nfunction closeEndPoint(endpoint) {\r\n    if (isMessagePort(endpoint))\r\n        endpoint.close();\r\n}\r\nfunction wrap(ep, target) {\r\n    return createProxy(ep, [], target);\r\n}\r\nfunction throwIfProxyReleased(isReleased) {\r\n    if (isReleased) {\r\n        throw new Error(\"Proxy has been released and is not useable\");\r\n    }\r\n}\r\nfunction createProxy(ep, path = [], target = function () { }) {\r\n    let isProxyReleased = false;\r\n    const proxy = new Proxy(target, {\r\n        get(_target, prop) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            if (prop === releaseProxy) {\r\n                return () => {\r\n                    return requestResponseMessage(ep, {\r\n                        type: \"RELEASE\" /* RELEASE */,\r\n                        path: path.map((p) => p.toString()),\r\n                    }).then(() => {\r\n                        closeEndPoint(ep);\r\n                        isProxyReleased = true;\r\n                    });\r\n                };\r\n            }\r\n            if (prop === \"then\") {\r\n                if (path.length === 0) {\r\n                    return { then: () => proxy };\r\n                }\r\n                const r = requestResponseMessage(ep, {\r\n                    type: \"GET\" /* GET */,\r\n                    path: path.map((p) => p.toString()),\r\n                }).then(fromWireValue);\r\n                return r.then.bind(r);\r\n            }\r\n            return createProxy(ep, [...path, prop]);\r\n        },\r\n        set(_target, prop, rawValue) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\r\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\r\n            const [value, transferables] = toWireValue(rawValue);\r\n            return requestResponseMessage(ep, {\r\n                type: \"SET\" /* SET */,\r\n                path: [...path, prop].map((p) => p.toString()),\r\n                value,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        apply(_target, _thisArg, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const last = path[path.length - 1];\r\n            if (last === createEndpoint) {\r\n                return requestResponseMessage(ep, {\r\n                    type: \"ENDPOINT\" /* ENDPOINT */,\r\n                }).then(fromWireValue);\r\n            }\r\n            // We just pretend that `bind()` didn’t happen.\r\n            if (last === \"bind\") {\r\n                return createProxy(ep, path.slice(0, -1));\r\n            }\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: \"APPLY\" /* APPLY */,\r\n                path: path.map((p) => p.toString()),\r\n                argumentList,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        construct(_target, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: \"CONSTRUCT\" /* CONSTRUCT */,\r\n                path: path.map((p) => p.toString()),\r\n                argumentList,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n    });\r\n    return proxy;\r\n}\r\nfunction myFlat(arr) {\r\n    return Array.prototype.concat.apply([], arr);\r\n}\r\nfunction processArguments(argumentList) {\r\n    const processed = argumentList.map(toWireValue);\r\n    return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\r\n}\r\nconst transferCache = new WeakMap();\r\nfunction transfer(obj, transfers) {\r\n    transferCache.set(obj, transfers);\r\n    return obj;\r\n}\r\nfunction proxy(obj) {\r\n    return Object.assign(obj, { [proxyMarker]: true });\r\n}\r\nfunction windowEndpoint(w, context = self, targetOrigin = \"*\") {\r\n    return {\r\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\r\n        addEventListener: context.addEventListener.bind(context),\r\n        removeEventListener: context.removeEventListener.bind(context),\r\n    };\r\n}\r\nfunction toWireValue(value) {\r\n    for (const [name, handler] of transferHandlers) {\r\n        if (handler.canHandle(value)) {\r\n            const [serializedValue, transferables] = handler.serialize(value);\r\n            return [\r\n                {\r\n                    type: \"HANDLER\" /* HANDLER */,\r\n                    name,\r\n                    value: serializedValue,\r\n                },\r\n                transferables,\r\n            ];\r\n        }\r\n    }\r\n    return [\r\n        {\r\n            type: \"RAW\" /* RAW */,\r\n            value,\r\n        },\r\n        transferCache.get(value) || [],\r\n    ];\r\n}\r\nfunction fromWireValue(value) {\r\n    switch (value.type) {\r\n        case \"HANDLER\" /* HANDLER */:\r\n            return transferHandlers.get(value.name).deserialize(value.value);\r\n        case \"RAW\" /* RAW */:\r\n            return value.value;\r\n    }\r\n}\r\nfunction requestResponseMessage(ep, msg, transfers) {\r\n    return new Promise((resolve) => {\r\n        const id = generateUUID();\r\n        ep.addEventListener(\"message\", function l(ev) {\r\n            if (!ev.data || !ev.data.id || ev.data.id !== id) {\r\n                return;\r\n            }\r\n            ep.removeEventListener(\"message\", l);\r\n            resolve(ev.data);\r\n        });\r\n        if (ep.start) {\r\n            ep.start();\r\n        }\r\n        ep.postMessage(Object.assign({ id }, msg), transfers);\r\n    });\r\n}\r\nfunction generateUUID() {\r\n    return new Array(4)\r\n        .fill(0)\r\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\r\n        .join(\"-\");\r\n}\n\nexport { createEndpoint, expose, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n//# sourceMappingURL=comlink.mjs.map\n","// this file is autogenerated from the wheels described in ../package.json\nexport * as allJSONUrl from '!!file-loader?name=pypi/[name].[ext]&context=.!../pypi/all.json';\nexport * as ipykernelWheelUrl from '!!file-loader?name=pypi/[name].[ext]&context=.!../pypi/ipykernel-6.9.2-py3-none-any.whl';\nexport * as pipliteWheelUrl from '!!file-loader?name=pypi/[name].[ext]&context=.!../pypi/piplite-0.1.0b18-py3-none-any.whl';\nexport * as pyoliteWheelUrl from '!!file-loader?name=pypi/[name].[ext]&context=.!../pypi/pyolite-0.1.0b18-py3-none-any.whl';\nexport * as widgetsnbextensionWheelUrl from '!!file-loader?name=pypi/[name].[ext]&context=.!../pypi/widgetsnbextension-3.6.0-py3-none-any.whl';\nexport * as widgetsnbextensionWheelUrl1 from '!!file-loader?name=pypi/[name].[ext]&context=.!../pypi/widgetsnbextension-4.0.2-py3-none-any.whl';\nexport const PIPLITE_WHEEL = 'piplite-0.1.0b18-py3-none-any.whl';\n","import { PromiseDelegate } from '@lumino/coreutils';\n\nimport { URLExt, PageConfig } from '@jupyterlab/coreutils';\nimport { KernelMessage } from '@jupyterlab/services';\n\nimport { BaseKernel, IKernel } from '@jupyterlite/kernel';\n\nimport { wrap } from 'comlink';\n\nimport { IPyoliteWorkerKernel, IRemotePyoliteWorkerKernel } from './tokens';\n\nimport { PIPLITE_WHEEL } from './_pypi';\n\n/**\n * A kernel that executes Python code with Pyodide.\n */\nexport class PyoliteKernel extends BaseKernel implements IKernel {\n  /**\n   * Instantiate a new PyodideKernel\n   *\n   * @param options The instantiation options for a new PyodideKernel\n   */\n  constructor(options: PyoliteKernel.IOptions) {\n    super(options);\n    this._worker = this.initWorker(options);\n    this._worker.onmessage = (e) => this._processWorkerMessage(e.data);\n    this._remoteKernel = wrap(this._worker);\n    this.initRemote(options);\n  }\n\n  /**\n   * Load the worker.\n   *\n   * ### Note\n   *\n   * Subclasses must implement this typographically almost _exactly_ for\n   * webpack to find it.\n   */\n  protected initWorker(options: PyoliteKernel.IOptions): Worker {\n    return new Worker(new URL('./comlink.worker.js', import.meta.url), {\n      type: 'module',\n    });\n  }\n\n  protected async initRemote(options: PyoliteKernel.IOptions): Promise<void> {\n    const remoteOptions = this.initRemoteOptions(options);\n    await this._remoteKernel.initialize(remoteOptions);\n    this._ready.resolve();\n  }\n\n  protected initRemoteOptions(\n    options: PyoliteKernel.IOptions\n  ): IPyoliteWorkerKernel.IOptions {\n    const { pyodideUrl } = options;\n\n    const indexUrl = pyodideUrl.slice(0, pyodideUrl.lastIndexOf('/') + 1);\n\n    const baseUrl = PageConfig.getBaseUrl();\n\n    const pypi = URLExt.join(baseUrl, 'build/pypi');\n\n    const pipliteUrls = [...(options.pipliteUrls || []), URLExt.join(pypi, 'all.json')];\n\n    const pipliteWheelUrl = URLExt.join(pypi, PIPLITE_WHEEL);\n\n    const disablePyPIFallback = !!options.disablePyPIFallback;\n\n    return {\n      baseUrl,\n      pyodideUrl,\n      indexUrl,\n      pipliteWheelUrl,\n      pipliteUrls,\n      disablePyPIFallback,\n      location: this.location,\n      mountDrive: options.mountDrive,\n    };\n  }\n\n  /**\n   * Dispose the kernel.\n   */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this._worker.terminate();\n    (this._worker as any) = null;\n    super.dispose();\n  }\n\n  /**\n   * A promise that is fulfilled when the kernel is ready.\n   */\n  get ready(): Promise<void> {\n    return this._ready.promise;\n  }\n\n  /**\n   * Process a message coming from the pyodide web worker.\n   *\n   * @param msg The worker message to process.\n   */\n  private _processWorkerMessage(msg: any): void {\n    if (!msg.type) {\n      return;\n    }\n\n    switch (msg.type) {\n      case 'stream': {\n        const bundle = msg.bundle ?? { name: 'stdout', text: '' };\n        this.stream(bundle, msg.parentHeader);\n        break;\n      }\n      case 'input_request': {\n        const bundle = msg.content ?? { prompt: '', password: false };\n        this.inputRequest(bundle, msg.parentHeader);\n        break;\n      }\n      case 'display_data': {\n        const bundle = msg.bundle ?? { data: {}, metadata: {}, transient: {} };\n        this.displayData(bundle, msg.parentHeader);\n        break;\n      }\n      case 'update_display_data': {\n        const bundle = msg.bundle ?? { data: {}, metadata: {}, transient: {} };\n        this.updateDisplayData(bundle, msg.parentHeader);\n        break;\n      }\n      case 'clear_output': {\n        const bundle = msg.bundle ?? { wait: false };\n        this.clearOutput(bundle, msg.parentHeader);\n        break;\n      }\n      case 'execute_result': {\n        const bundle = msg.bundle ?? { execution_count: 0, data: {}, metadata: {} };\n        this.publishExecuteResult(bundle, msg.parentHeader);\n        break;\n      }\n      case 'execute_error': {\n        const bundle = msg.bundle ?? { ename: '', evalue: '', traceback: [] };\n        this.publishExecuteError(bundle, msg.parentHeader);\n        break;\n      }\n      case 'comm_msg':\n      case 'comm_open':\n      case 'comm_close': {\n        this.handleComm(\n          msg.type,\n          msg.content,\n          msg.metadata,\n          msg.buffers,\n          msg.parentHeader\n        );\n        break;\n      }\n    }\n  }\n\n  /**\n   * Handle a kernel_info_request message\n   */\n  async kernelInfoRequest(): Promise<KernelMessage.IInfoReplyMsg['content']> {\n    const content: KernelMessage.IInfoReply = {\n      implementation: 'pyodide',\n      implementation_version: '0.1.0',\n      language_info: {\n        codemirror_mode: {\n          name: 'python',\n          version: 3,\n        },\n        file_extension: '.py',\n        mimetype: 'text/x-python',\n        name: 'python',\n        nbconvert_exporter: 'python',\n        pygments_lexer: 'ipython3',\n        version: '3.8',\n      },\n      protocol_version: '5.3',\n      status: 'ok',\n      banner: 'Pyolite: A WebAssembly-powered Python kernel backed by Pyodide',\n      help_links: [\n        {\n          text: 'Python (WASM) Kernel',\n          url: 'https://pyodide.org',\n        },\n      ],\n    };\n    return content;\n  }\n\n  /**\n   * Handle an `execute_request` message\n   *\n   * @param msg The parent message.\n   */\n  async executeRequest(\n    content: KernelMessage.IExecuteRequestMsg['content']\n  ): Promise<KernelMessage.IExecuteReplyMsg['content']> {\n    await this.ready;\n    const result = await this._remoteKernel.execute(content, this.parent);\n    result.execution_count = this.executionCount;\n    return result;\n  }\n\n  /**\n   * Handle an complete_request message\n   *\n   * @param msg The parent message.\n   */\n  async completeRequest(\n    content: KernelMessage.ICompleteRequestMsg['content']\n  ): Promise<KernelMessage.ICompleteReplyMsg['content']> {\n    return await this._remoteKernel.complete(content, this.parent);\n  }\n\n  /**\n   * Handle an `inspect_request` message.\n   *\n   * @param content - The content of the request.\n   *\n   * @returns A promise that resolves with the response message.\n   */\n  async inspectRequest(\n    content: KernelMessage.IInspectRequestMsg['content']\n  ): Promise<KernelMessage.IInspectReplyMsg['content']> {\n    return await this._remoteKernel.inspect(content, this.parent);\n  }\n\n  /**\n   * Handle an `is_complete_request` message.\n   *\n   * @param content - The content of the request.\n   *\n   * @returns A promise that resolves with the response message.\n   */\n  async isCompleteRequest(\n    content: KernelMessage.IIsCompleteRequestMsg['content']\n  ): Promise<KernelMessage.IIsCompleteReplyMsg['content']> {\n    return await this._remoteKernel.isComplete(content, this.parent);\n  }\n\n  /**\n   * Handle a `comm_info_request` message.\n   *\n   * @param content - The content of the request.\n   *\n   * @returns A promise that resolves with the response message.\n   */\n  async commInfoRequest(\n    content: KernelMessage.ICommInfoRequestMsg['content']\n  ): Promise<KernelMessage.ICommInfoReplyMsg['content']> {\n    return await this._remoteKernel.commInfo(content, this.parent);\n  }\n\n  /**\n   * Send an `comm_open` message.\n   *\n   * @param msg - The comm_open message.\n   */\n  async commOpen(msg: KernelMessage.ICommOpenMsg): Promise<void> {\n    return await this._remoteKernel.commOpen(msg, this.parent);\n  }\n\n  /**\n   * Send an `comm_msg` message.\n   *\n   * @param msg - The comm_msg message.\n   */\n  async commMsg(msg: KernelMessage.ICommMsgMsg): Promise<void> {\n    return await this._remoteKernel.commMsg(msg, this.parent);\n  }\n\n  /**\n   * Send an `comm_close` message.\n   *\n   * @param close - The comm_close message.\n   */\n  async commClose(msg: KernelMessage.ICommCloseMsg): Promise<void> {\n    return await this._remoteKernel.commClose(msg, this.parent);\n  }\n\n  /**\n   * Send an `input_reply` message.\n   *\n   * @param content - The content of the reply.\n   */\n  async inputReply(content: KernelMessage.IInputReplyMsg['content']): Promise<void> {\n    return await this._remoteKernel.inputReply(content, this.parent);\n  }\n\n  private _worker: Worker;\n  private _remoteKernel: IRemotePyoliteWorkerKernel;\n  private _ready = new PromiseDelegate<void>();\n}\n\n/**\n * A namespace for PyoliteKernel statics.\n */\nexport namespace PyoliteKernel {\n  /**\n   * The instantiation options for a Pyodide kernel\n   */\n  export interface IOptions extends IKernel.IOptions {\n    /**\n     * The URL to fetch Pyodide.\n     */\n    pyodideUrl: string;\n\n    /**\n     * The URLs from which to attempt PyPI API requests\n     */\n    pipliteUrls: string[];\n\n    /**\n     * Do not try pypi.org if `piplite.install` fails against local URLs\n     */\n    disablePyPIFallback: boolean;\n\n    /**\n     * Whether or not to mount the Emscripten drive\n     */\n    mountDrive: boolean;\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport type Pyodide from 'pyodide';\n\nimport type { DriveFS } from '@jupyterlite/contents';\n\nimport type { IPyoliteWorkerKernel } from './tokens';\n\nexport class PyoliteRemoteKernel implements IPyoliteWorkerKernel {\n  constructor() {\n    this._initialized = new Promise((resolve, reject) => {\n      this._initializer = { resolve, reject };\n    });\n  }\n\n  /**\n   * Accept the URLs from the host\n   **/\n  async initialize(options: IPyoliteWorkerKernel.IOptions): Promise<void> {\n    this._options = options;\n\n    if (options.location.includes(':')) {\n      const parts = options.location.split(':');\n      this._driveName = parts[0];\n      this._localPath = parts[1];\n    } else {\n      this._driveName = '';\n      this._localPath = options.location;\n    }\n\n    await this.initRuntime(options);\n    await this.initFilesystem(options);\n    await this.initPackageManager(options);\n    await this.initKernel(options);\n    await this.initGlobals(options);\n    this._initializer?.resolve();\n  }\n\n  protected async initRuntime(options: IPyoliteWorkerKernel.IOptions): Promise<void> {\n    const { pyodideUrl, indexUrl } = options;\n    let loadPyodide: typeof Pyodide.loadPyodide;\n    if (pyodideUrl.endsWith('.mjs')) {\n      // note: this does not work at all in firefox\n      const pyodideModule: typeof Pyodide = await import(\n        /* webpackIgnore: true */ pyodideUrl\n      );\n      loadPyodide = pyodideModule.loadPyodide;\n    } else {\n      importScripts(pyodideUrl);\n      loadPyodide = (self as any).loadPyodide;\n    }\n    this._pyodide = await loadPyodide({ indexURL: indexUrl });\n  }\n\n  protected async initPackageManager(\n    options: IPyoliteWorkerKernel.IOptions\n  ): Promise<void> {\n    if (!this._options) {\n      throw new Error('Uninitialized');\n    }\n\n    const { pipliteWheelUrl, disablePyPIFallback, pipliteUrls } = this._options;\n\n    // this is the only use of `loadPackage`, allow `piplite` to handle the rest\n    await this._pyodide.loadPackage(['micropip']);\n\n    // get piplite early enough to impact pyolite dependencies\n    await this._pyodide.runPythonAsync(`\n      import micropip\n      await micropip.install('${pipliteWheelUrl}', keep_going=True)\n      import piplite.piplite\n      piplite.piplite._PIPLITE_DISABLE_PYPI = ${disablePyPIFallback ? 'True' : 'False'}\n      piplite.piplite._PIPLITE_URLS = ${JSON.stringify(pipliteUrls)}\n    `);\n  }\n\n  protected async initKernel(options: IPyoliteWorkerKernel.IOptions): Promise<void> {\n    // from this point forward, only use piplite (but not %pip)\n    await this._pyodide.runPythonAsync(`\n      await piplite.install(['sqlite3'], keep_going=True);\n      await piplite.install(['ipykernel'], keep_going=True);\n      await piplite.install(['pyolite'], keep_going=True);\n      await piplite.install(['ipython'], keep_going=True);\n      import pyolite\n    `);\n    // cd to the kernel location\n    if (options.mountDrive && this._localPath) {\n      await this._pyodide.runPythonAsync(`\n        import os;\n        os.chdir(\"${this._localPath}\");\n      `);\n    }\n  }\n\n  protected async initGlobals(options: IPyoliteWorkerKernel.IOptions): Promise<void> {\n    const { globals } = this._pyodide;\n    this._kernel = globals.get('pyolite').kernel_instance.copy();\n    this._stdout_stream = globals.get('pyolite').stdout_stream.copy();\n    this._stderr_stream = globals.get('pyolite').stderr_stream.copy();\n    this._interpreter = this._kernel.interpreter.copy();\n    this._interpreter.send_comm = this.sendComm.bind(this);\n  }\n\n  /**\n   * Setup custom Emscripten FileSystem\n   */\n  protected async initFilesystem(\n    options: IPyoliteWorkerKernel.IOptions\n  ): Promise<void> {\n    if (options.mountDrive) {\n      const mountpoint = '/drive';\n      const { FS, PATH, ERRNO_CODES } = this._pyodide;\n      const { baseUrl } = options;\n      const { DriveFS } = await import('@jupyterlite/contents');\n\n      const driveFS = new DriveFS({\n        FS,\n        PATH,\n        ERRNO_CODES,\n        baseUrl,\n        driveName: this._driveName,\n        mountpoint,\n      });\n      FS.mkdir(mountpoint);\n      FS.mount(driveFS, {}, mountpoint);\n      FS.chdir(mountpoint);\n      this._driveFS = driveFS;\n    }\n  }\n\n  /**\n   * Recursively convert a Map to a JavaScript object\n   * @param obj A Map, Array, or other  object to convert\n   */\n  mapToObject(obj: any) {\n    const out: any = obj instanceof Array ? [] : {};\n    obj.forEach((value: any, key: string) => {\n      out[key] =\n        value instanceof Map || value instanceof Array\n          ? this.mapToObject(value)\n          : value;\n    });\n    return out;\n  }\n\n  /**\n   * Format the response from the Pyodide evaluation.\n   *\n   * @param res The result object from the Pyodide evaluation\n   */\n  formatResult(res: any): any {\n    if (!this._pyodide.isPyProxy(res)) {\n      return res;\n    }\n    // TODO: this is a bit brittle\n    const m = res.toJs();\n    const results = this.mapToObject(m);\n    return results;\n  }\n\n  /**\n   * Makes sure pyodide is ready before continuing, and cache the parent message.\n   */\n  async setup(parent: any): Promise<void> {\n    await this._initialized;\n    this._kernel._parent_header = this._pyodide.toPy(parent);\n  }\n\n  /**\n   * Execute code with the interpreter.\n   *\n   * @param content The incoming message with the code to execute.\n   */\n  async execute(content: any, parent: any) {\n    await this.setup(parent);\n\n    const publishExecutionResult = (\n      prompt_count: any,\n      data: any,\n      metadata: any\n    ): void => {\n      const bundle = {\n        execution_count: prompt_count,\n        data: this.formatResult(data),\n        metadata: this.formatResult(metadata),\n      };\n      postMessage({\n        parentHeader: this.formatResult(this._kernel._parent_header)['header'],\n        bundle,\n        type: 'execute_result',\n      });\n    };\n\n    const publishExecutionError = (ename: any, evalue: any, traceback: any): void => {\n      const bundle = {\n        ename: ename,\n        evalue: evalue,\n        traceback: traceback,\n      };\n      postMessage({\n        parentHeader: this.formatResult(this._kernel._parent_header)['header'],\n        bundle,\n        type: 'execute_error',\n      });\n    };\n\n    const clearOutputCallback = (wait: boolean): void => {\n      const bundle = {\n        wait: this.formatResult(wait),\n      };\n      postMessage({\n        parentHeader: this.formatResult(this._kernel._parent_header)['header'],\n        bundle,\n        type: 'clear_output',\n      });\n    };\n\n    const displayDataCallback = (data: any, metadata: any, transient: any): void => {\n      const bundle = {\n        data: this.formatResult(data),\n        metadata: this.formatResult(metadata),\n        transient: this.formatResult(transient),\n      };\n      postMessage({\n        parentHeader: this.formatResult(this._kernel._parent_header)['header'],\n        bundle,\n        type: 'display_data',\n      });\n    };\n\n    const updateDisplayDataCallback = (\n      data: any,\n      metadata: any,\n      transient: any\n    ): void => {\n      const bundle = {\n        data: this.formatResult(data),\n        metadata: this.formatResult(metadata),\n        transient: this.formatResult(transient),\n      };\n      postMessage({\n        parentHeader: this.formatResult(this._kernel._parent_header)['header'],\n        bundle,\n        type: 'update_display_data',\n      });\n    };\n\n    const publishStreamCallback = (name: any, text: any): void => {\n      const bundle = {\n        name: this.formatResult(name),\n        text: this.formatResult(text),\n      };\n      postMessage({\n        parentHeader: this.formatResult(this._kernel._parent_header)['header'],\n        bundle,\n        type: 'stream',\n      });\n    };\n\n    this._stdout_stream.publish_stream_callback = publishStreamCallback;\n    this._stderr_stream.publish_stream_callback = publishStreamCallback;\n    this._interpreter.display_pub.clear_output_callback = clearOutputCallback;\n    this._interpreter.display_pub.display_data_callback = displayDataCallback;\n    this._interpreter.display_pub.update_display_data_callback =\n      updateDisplayDataCallback;\n    this._interpreter.displayhook.publish_execution_result = publishExecutionResult;\n    this._interpreter.input = this.input.bind(this);\n    this._interpreter.getpass = this.getpass.bind(this);\n\n    const res = await this._kernel.run(content.code);\n    const results = this.formatResult(res);\n\n    if (results['status'] === 'error') {\n      publishExecutionError(results['ename'], results['evalue'], results['traceback']);\n    }\n\n    return results;\n  }\n\n  /**\n   * Complete the code submitted by a user.\n   *\n   * @param content The incoming message with the code to complete.\n   */\n  async complete(content: any, parent: any) {\n    await this.setup(parent);\n\n    const res = this._kernel.complete(content.code, content.cursor_pos);\n    const results = this.formatResult(res);\n    return results;\n  }\n\n  /**\n   * Inspect the code submitted by a user.\n   *\n   * @param content The incoming message with the code to inspect.\n   */\n  async inspect(\n    content: { code: string; cursor_pos: number; detail_level: 0 | 1 },\n    parent: any\n  ) {\n    await this.setup(parent);\n\n    const res = this._kernel.inspect(\n      content.code,\n      content.cursor_pos,\n      content.detail_level\n    );\n    const results = this.formatResult(res);\n    return results;\n  }\n\n  /**\n   * Check code for completeness submitted by a user.\n   *\n   * @param content The incoming message with the code to check.\n   */\n  async isComplete(content: { code: string }, parent: any) {\n    await this.setup(parent);\n\n    const res = this._kernel.is_complete(content.code);\n    const results = this.formatResult(res);\n    return results;\n  }\n\n  /**\n   * Respond to the commInfoRequest.\n   *\n   * @param content The incoming message with the comm target name.\n   */\n  async commInfo(content: any, parent: any) {\n    await this.setup(parent);\n\n    const res = this._kernel.comm_info(content.target_name);\n    const results = this.formatResult(res);\n\n    return results;\n  }\n\n  /**\n   * Respond to the commOpen.\n   *\n   * @param content The incoming message with the comm open.\n   */\n  async commOpen(content: any, parent: any) {\n    await this.setup(parent);\n\n    const res = this._kernel.comm_manager.comm_open(this._pyodide.toPy(content));\n    const results = this.formatResult(res);\n\n    return results;\n  }\n\n  /**\n   * Respond to the commMsg.\n   *\n   * @param content The incoming message with the comm msg.\n   */\n  async commMsg(content: any, parent: any) {\n    await this.setup(parent);\n\n    const res = this._kernel.comm_manager.comm_msg(this._pyodide.toPy(content));\n    const results = this.formatResult(res);\n\n    return results;\n  }\n\n  /**\n   * Respond to the commClose.\n   *\n   * @param content The incoming message with the comm close.\n   */\n  async commClose(content: any, parent: any) {\n    await this.setup(parent);\n\n    const res = this._kernel.comm_manager.comm_close(this._pyodide.toPy(content));\n    const results = this.formatResult(res);\n\n    return results;\n  }\n\n  /**\n   * Resolve the input request by getting back the reply from the main thread\n   *\n   * @param content The incoming message with the reply\n   */\n  async inputReply(content: any, parent: any) {\n    await this.setup(parent);\n\n    this._resolveInputReply(content);\n  }\n\n  /**\n   * Send a input request to the front-end.\n   *\n   * @param prompt the text to show at the prompt\n   * @param password Is the request for a password?\n   */\n  async sendInputRequest(prompt: string, password: boolean) {\n    const content = {\n      prompt,\n      password,\n    };\n    postMessage({\n      type: 'input_request',\n      parentHeader: this.formatResult(this._kernel._parent_header)['header'],\n      content,\n    });\n  }\n\n  async getpass(prompt: string) {\n    prompt = typeof prompt === 'undefined' ? '' : prompt;\n    await this.sendInputRequest(prompt, true);\n    const replyPromise = new Promise((resolve) => {\n      this._resolveInputReply = resolve;\n    });\n    const result: any = await replyPromise;\n    return result['value'];\n  }\n\n  async input(prompt: string) {\n    prompt = typeof prompt === 'undefined' ? '' : prompt;\n    await this.sendInputRequest(prompt, false);\n    const replyPromise = new Promise((resolve) => {\n      this._resolveInputReply = resolve;\n    });\n    const result: any = await replyPromise;\n    return result['value'];\n  }\n\n  /**\n   * Send a comm message to the front-end.\n   *\n   * @param type The type of the comm message.\n   * @param content The content.\n   * @param metadata The metadata.\n   * @param ident The ident.\n   * @param buffers The binary buffers.\n   */\n  async sendComm(type: string, content: any, metadata: any, ident: any, buffers: any) {\n    postMessage({\n      type: type,\n      content: this.formatResult(content),\n      metadata: this.formatResult(metadata),\n      ident: this.formatResult(ident),\n      buffers: this.formatResult(buffers),\n      parentHeader: this.formatResult(this._kernel._parent_header)['header'],\n    });\n  }\n\n  /**\n   * Initialization options.\n   */\n  protected _options: IPyoliteWorkerKernel.IOptions | null = null;\n  /**\n   * A promise that resolves when all initiaization is complete.\n   */\n  protected _initialized: Promise<void>;\n  private _initializer: {\n    reject: () => void;\n    resolve: () => void;\n  } | null = null;\n  protected _pyodide: Pyodide.PyodideInterface = null as any;\n  /** TODO: real typing */\n  protected _localPath = '';\n  protected _driveName = '';\n  protected _kernel: any;\n  protected _interpreter: any;\n  protected _stdout_stream: any;\n  protected _stderr_stream: any;\n  protected _resolveInputReply: any;\n  protected _driveFS: DriveFS | null = null;\n}\n"],"names":["proxyMarker","Symbol","createEndpoint","releaseProxy","throwMarker","isObject","val","transferHandlers","Map","canHandle","serialize","obj","port1","port2","MessageChannel","expose","deserialize","port","start","wrap","value","serialized","Error","isError","message","name","stack","Object","assign","ep","self","addEventListener","callback","ev","data","id","type","path","argumentList","map","fromWireValue","returnValue","parent","slice","reduce","prop","rawValue","apply","proxy","transfers","transferCache","set","transfer","undefined","Promise","resolve","catch","then","wireValue","transferables","toWireValue","postMessage","removeEventListener","closeEndPoint","endpoint","constructor","isMessagePort","close","target","createProxy","throwIfProxyReleased","isReleased","isProxyReleased","Proxy","get","_target","requestResponseMessage","p","toString","length","r","bind","_thisArg","rawArgumentList","last","processArguments","construct","processed","v","arr","Array","prototype","concat","WeakMap","handler","serializedValue","msg","fill","Math","floor","random","Number","MAX_SAFE_INTEGER","join","l","PIPLITE_WHEEL","PyoliteKernel","BaseKernel","options","super","_ready","PromiseDelegate","this","_worker","initWorker","onmessage","e","_processWorkerMessage","_remoteKernel","initRemote","Worker","URL","async","remoteOptions","initRemoteOptions","initialize","pyodideUrl","indexUrl","lastIndexOf","baseUrl","PageConfig","pypi","URLExt","pipliteUrls","pipliteWheelUrl","disablePyPIFallback","location","mountDrive","dispose","isDisposed","terminate","ready","promise","bundle","text","stream","parentHeader","content","prompt","password","inputRequest","metadata","transient","displayData","updateDisplayData","wait","clearOutput","execution_count","publishExecuteResult","ename","evalue","traceback","publishExecuteError","handleComm","buffers","implementation","implementation_version","language_info","codemirror_mode","version","file_extension","mimetype","nbconvert_exporter","pygments_lexer","protocol_version","status","banner","help_links","url","result","execute","executionCount","complete","inspect","isComplete","commInfo","commOpen","commMsg","commClose","inputReply","PyoliteRemoteKernel","_options","_initializer","_pyodide","_localPath","_driveName","_driveFS","_initialized","reject","includes","parts","split","initRuntime","initFilesystem","initPackageManager","initKernel","initGlobals","loadPyodide","endsWith","import","importScripts","indexURL","loadPackage","runPythonAsync","JSON","stringify","globals","_kernel","kernel_instance","copy","_stdout_stream","stdout_stream","_stderr_stream","stderr_stream","_interpreter","interpreter","send_comm","sendComm","mountpoint","FS","PATH","ERRNO_CODES","DriveFS","driveFS","driveName","mkdir","mount","chdir","mapToObject","out","forEach","key","formatResult","res","isPyProxy","m","toJs","_parent_header","toPy","setup","publishStreamCallback","publish_stream_callback","display_pub","clear_output_callback","display_data_callback","update_display_data_callback","displayhook","publish_execution_result","prompt_count","input","getpass","run","code","results","publishExecutionError","cursor_pos","detail_level","is_complete","comm_info","target_name","comm_manager","comm_open","comm_msg","comm_close","_resolveInputReply","sendInputRequest","replyPromise","ident"],"sourceRoot":""}