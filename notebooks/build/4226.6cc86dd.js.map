{"version":3,"file":"4226.6cc86dd.js","mappings":"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","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/comlink/dist/esm/comlink.mjs","webpack://_JUPYTERLAB.CORE_OUTPUT/../packages/javascript-kernel/src/kernel.ts"],"sourcesContent":["/**\r\n * Copyright 2019 Google Inc. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst proxyMarker = Symbol(\"Comlink.proxy\");\r\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\r\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\r\nconst throwMarker = Symbol(\"Comlink.thrown\");\r\nconst isObject = (val) => (typeof val === \"object\" && val !== null) || typeof val === \"function\";\r\n/**\r\n * Internal transfer handle to handle objects marked to proxy.\r\n */\r\nconst proxyTransferHandler = {\r\n    canHandle: (val) => isObject(val) && val[proxyMarker],\r\n    serialize(obj) {\r\n        const { port1, port2 } = new MessageChannel();\r\n        expose(obj, port1);\r\n        return [port2, [port2]];\r\n    },\r\n    deserialize(port) {\r\n        port.start();\r\n        return wrap(port);\r\n    },\r\n};\r\n/**\r\n * Internal transfer handler to handle thrown exceptions.\r\n */\r\nconst throwTransferHandler = {\r\n    canHandle: (value) => isObject(value) && throwMarker in value,\r\n    serialize({ value }) {\r\n        let serialized;\r\n        if (value instanceof Error) {\r\n            serialized = {\r\n                isError: true,\r\n                value: {\r\n                    message: value.message,\r\n                    name: value.name,\r\n                    stack: value.stack,\r\n                },\r\n            };\r\n        }\r\n        else {\r\n            serialized = { isError: false, value };\r\n        }\r\n        return [serialized, []];\r\n    },\r\n    deserialize(serialized) {\r\n        if (serialized.isError) {\r\n            throw Object.assign(new Error(serialized.value.message), serialized.value);\r\n        }\r\n        throw serialized.value;\r\n    },\r\n};\r\n/**\r\n * Allows customizing the serialization of certain values.\r\n */\r\nconst transferHandlers = new Map([\r\n    [\"proxy\", proxyTransferHandler],\r\n    [\"throw\", throwTransferHandler],\r\n]);\r\nfunction expose(obj, ep = self) {\r\n    ep.addEventListener(\"message\", function callback(ev) {\r\n        if (!ev || !ev.data) {\r\n            return;\r\n        }\r\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\r\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\r\n        let returnValue;\r\n        try {\r\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\r\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\r\n            switch (type) {\r\n                case \"GET\" /* GET */:\r\n                    {\r\n                        returnValue = rawValue;\r\n                    }\r\n                    break;\r\n                case \"SET\" /* SET */:\r\n                    {\r\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\r\n                        returnValue = true;\r\n                    }\r\n                    break;\r\n                case \"APPLY\" /* APPLY */:\r\n                    {\r\n                        returnValue = rawValue.apply(parent, argumentList);\r\n                    }\r\n                    break;\r\n                case \"CONSTRUCT\" /* CONSTRUCT */:\r\n                    {\r\n                        const value = new rawValue(...argumentList);\r\n                        returnValue = proxy(value);\r\n                    }\r\n                    break;\r\n                case \"ENDPOINT\" /* ENDPOINT */:\r\n                    {\r\n                        const { port1, port2 } = new MessageChannel();\r\n                        expose(obj, port2);\r\n                        returnValue = transfer(port1, [port1]);\r\n                    }\r\n                    break;\r\n                case \"RELEASE\" /* RELEASE */:\r\n                    {\r\n                        returnValue = undefined;\r\n                    }\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n        }\r\n        catch (value) {\r\n            returnValue = { value, [throwMarker]: 0 };\r\n        }\r\n        Promise.resolve(returnValue)\r\n            .catch((value) => {\r\n            return { value, [throwMarker]: 0 };\r\n        })\r\n            .then((returnValue) => {\r\n            const [wireValue, transferables] = toWireValue(returnValue);\r\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\r\n            if (type === \"RELEASE\" /* RELEASE */) {\r\n                // detach and deactive after sending release response above.\r\n                ep.removeEventListener(\"message\", callback);\r\n                closeEndPoint(ep);\r\n            }\r\n        });\r\n    });\r\n    if (ep.start) {\r\n        ep.start();\r\n    }\r\n}\r\nfunction isMessagePort(endpoint) {\r\n    return endpoint.constructor.name === \"MessagePort\";\r\n}\r\nfunction closeEndPoint(endpoint) {\r\n    if (isMessagePort(endpoint))\r\n        endpoint.close();\r\n}\r\nfunction wrap(ep, target) {\r\n    return createProxy(ep, [], target);\r\n}\r\nfunction throwIfProxyReleased(isReleased) {\r\n    if (isReleased) {\r\n        throw new Error(\"Proxy has been released and is not useable\");\r\n    }\r\n}\r\nfunction createProxy(ep, path = [], target = function () { }) {\r\n    let isProxyReleased = false;\r\n    const proxy = new Proxy(target, {\r\n        get(_target, prop) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            if (prop === releaseProxy) {\r\n                return () => {\r\n                    return requestResponseMessage(ep, {\r\n                        type: \"RELEASE\" /* RELEASE */,\r\n                        path: path.map((p) => p.toString()),\r\n                    }).then(() => {\r\n                        closeEndPoint(ep);\r\n                        isProxyReleased = true;\r\n                    });\r\n                };\r\n            }\r\n            if (prop === \"then\") {\r\n                if (path.length === 0) {\r\n                    return { then: () => proxy };\r\n                }\r\n                const r = requestResponseMessage(ep, {\r\n                    type: \"GET\" /* GET */,\r\n                    path: path.map((p) => p.toString()),\r\n                }).then(fromWireValue);\r\n                return r.then.bind(r);\r\n            }\r\n            return createProxy(ep, [...path, prop]);\r\n        },\r\n        set(_target, prop, rawValue) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\r\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\r\n            const [value, transferables] = toWireValue(rawValue);\r\n            return requestResponseMessage(ep, {\r\n                type: \"SET\" /* SET */,\r\n                path: [...path, prop].map((p) => p.toString()),\r\n                value,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        apply(_target, _thisArg, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const last = path[path.length - 1];\r\n            if (last === createEndpoint) {\r\n                return requestResponseMessage(ep, {\r\n                    type: \"ENDPOINT\" /* ENDPOINT */,\r\n                }).then(fromWireValue);\r\n            }\r\n            // We just pretend that `bind()` didn’t happen.\r\n            if (last === \"bind\") {\r\n                return createProxy(ep, path.slice(0, -1));\r\n            }\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: \"APPLY\" /* APPLY */,\r\n                path: path.map((p) => p.toString()),\r\n                argumentList,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        construct(_target, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: \"CONSTRUCT\" /* CONSTRUCT */,\r\n                path: path.map((p) => p.toString()),\r\n                argumentList,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n    });\r\n    return proxy;\r\n}\r\nfunction myFlat(arr) {\r\n    return Array.prototype.concat.apply([], arr);\r\n}\r\nfunction processArguments(argumentList) {\r\n    const processed = argumentList.map(toWireValue);\r\n    return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\r\n}\r\nconst transferCache = new WeakMap();\r\nfunction transfer(obj, transfers) {\r\n    transferCache.set(obj, transfers);\r\n    return obj;\r\n}\r\nfunction proxy(obj) {\r\n    return Object.assign(obj, { [proxyMarker]: true });\r\n}\r\nfunction windowEndpoint(w, context = self, targetOrigin = \"*\") {\r\n    return {\r\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\r\n        addEventListener: context.addEventListener.bind(context),\r\n        removeEventListener: context.removeEventListener.bind(context),\r\n    };\r\n}\r\nfunction toWireValue(value) {\r\n    for (const [name, handler] of transferHandlers) {\r\n        if (handler.canHandle(value)) {\r\n            const [serializedValue, transferables] = handler.serialize(value);\r\n            return [\r\n                {\r\n                    type: \"HANDLER\" /* HANDLER */,\r\n                    name,\r\n                    value: serializedValue,\r\n                },\r\n                transferables,\r\n            ];\r\n        }\r\n    }\r\n    return [\r\n        {\r\n            type: \"RAW\" /* RAW */,\r\n            value,\r\n        },\r\n        transferCache.get(value) || [],\r\n    ];\r\n}\r\nfunction fromWireValue(value) {\r\n    switch (value.type) {\r\n        case \"HANDLER\" /* HANDLER */:\r\n            return transferHandlers.get(value.name).deserialize(value.value);\r\n        case \"RAW\" /* RAW */:\r\n            return value.value;\r\n    }\r\n}\r\nfunction requestResponseMessage(ep, msg, transfers) {\r\n    return new Promise((resolve) => {\r\n        const id = generateUUID();\r\n        ep.addEventListener(\"message\", function l(ev) {\r\n            if (!ev.data || !ev.data.id || ev.data.id !== id) {\r\n                return;\r\n            }\r\n            ep.removeEventListener(\"message\", l);\r\n            resolve(ev.data);\r\n        });\r\n        if (ep.start) {\r\n            ep.start();\r\n        }\r\n        ep.postMessage(Object.assign({ id }, msg), transfers);\r\n    });\r\n}\r\nfunction generateUUID() {\r\n    return new Array(4)\r\n        .fill(0)\r\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\r\n        .join(\"-\");\r\n}\n\nexport { createEndpoint, expose, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n//# sourceMappingURL=comlink.mjs.map\n","import { PageConfig } from '@jupyterlab/coreutils';\n\nimport { KernelMessage } from '@jupyterlab/services';\n\nimport { BaseKernel, IKernel } from '@jupyterlite/kernel';\n\nimport { PromiseDelegate } from '@lumino/coreutils';\n\nimport { wrap } from 'comlink';\n\nimport { IRemoteJavaScriptWorkerKernel } from './tokens';\n\n/**\n * A kernel that executes code in an IFrame.\n */\nexport class JavaScriptKernel extends BaseKernel implements IKernel {\n  /**\n   * Instantiate a new JavaScriptKernel\n   *\n   * @param options The instantiation options for a new JavaScriptKernel\n   */\n  constructor(options: JavaScriptKernel.IOptions) {\n    super(options);\n    this._worker = this.initWorker(options);\n    this._worker.onmessage = (e) => this._processWorkerMessage(e.data);\n    this.remoteKernel = this.initRemote(options);\n    this._ready.resolve();\n  }\n\n  /**\n   * Dispose the kernel.\n   */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this._worker.terminate();\n    (this._worker as any) = null;\n    super.dispose();\n  }\n\n  /**\n   * A promise that is fulfilled when the kernel is ready.\n   */\n  get ready(): Promise<void> {\n    return this._ready.promise;\n  }\n\n  /**\n   * Handle a kernel_info_request message\n   */\n  async kernelInfoRequest(): Promise<KernelMessage.IInfoReplyMsg['content']> {\n    const content: KernelMessage.IInfoReply = {\n      implementation: 'JavaScript',\n      implementation_version: '0.1.0',\n      language_info: {\n        codemirror_mode: {\n          name: 'javascript',\n        },\n        file_extension: '.js',\n        mimetype: 'text/javascript',\n        name: 'javascript',\n        nbconvert_exporter: 'javascript',\n        pygments_lexer: 'javascript',\n        version: 'es2017',\n      },\n      protocol_version: '5.3',\n      status: 'ok',\n      banner: 'A JavaScript kernel running in the browser',\n      help_links: [\n        {\n          text: 'JavaScript Kernel',\n          url: 'https://github.com/jupyterlite/jupyterlite',\n        },\n      ],\n    };\n    return content;\n  }\n\n  /**\n   * Handle an `execute_request` message\n   *\n   * @param msg The parent message.\n   */\n  async executeRequest(\n    content: KernelMessage.IExecuteRequestMsg['content']\n  ): Promise<KernelMessage.IExecuteReplyMsg['content']> {\n    const result = await this.remoteKernel.execute(content, this.parent);\n    result.execution_count = this.executionCount;\n    return result;\n  }\n\n  /**\n   * Handle an complete_request message\n   *\n   * @param msg The parent message.\n   */\n  async completeRequest(\n    content: KernelMessage.ICompleteRequestMsg['content']\n  ): Promise<KernelMessage.ICompleteReplyMsg['content']> {\n    return await this.remoteKernel.complete(content, this.parent);\n  }\n\n  /**\n   * Handle an `inspect_request` message.\n   *\n   * @param content - The content of the request.\n   *\n   * @returns A promise that resolves with the response message.\n   */\n  async inspectRequest(\n    content: KernelMessage.IInspectRequestMsg['content']\n  ): Promise<KernelMessage.IInspectReplyMsg['content']> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Handle an `is_complete_request` message.\n   *\n   * @param content - The content of the request.\n   *\n   * @returns A promise that resolves with the response message.\n   */\n  async isCompleteRequest(\n    content: KernelMessage.IIsCompleteRequestMsg['content']\n  ): Promise<KernelMessage.IIsCompleteReplyMsg['content']> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Handle a `comm_info_request` message.\n   *\n   * @param content - The content of the request.\n   *\n   * @returns A promise that resolves with the response message.\n   */\n  async commInfoRequest(\n    content: KernelMessage.ICommInfoRequestMsg['content']\n  ): Promise<KernelMessage.ICommInfoReplyMsg['content']> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Send an `input_reply` message.\n   *\n   * @param content - The content of the reply.\n   */\n  inputReply(content: KernelMessage.IInputReplyMsg['content']): void {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Send an `comm_open` message.\n   *\n   * @param msg - The comm_open message.\n   */\n  async commOpen(msg: KernelMessage.ICommOpenMsg): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Send an `comm_msg` message.\n   *\n   * @param msg - The comm_msg message.\n   */\n  async commMsg(msg: KernelMessage.ICommMsgMsg): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Send an `comm_close` message.\n   *\n   * @param close - The comm_close message.\n   */\n  async commClose(msg: KernelMessage.ICommCloseMsg): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Load the worker.\n   *\n   * ### Note\n   *\n   * Subclasses must implement this typographically almost _exactly_ for\n   * webpack to find it.\n   */\n  protected initWorker(options: JavaScriptKernel.IOptions): Worker {\n    return new Worker(new URL('./comlink.worker.js', import.meta.url), {\n      type: 'module',\n    });\n  }\n\n  /**\n   * Initialize the remote kernel.\n   *\n   * @param options The options for the remote kernel.\n   * @returns The initialized remote kernel.\n   */\n  protected initRemote(\n    options: JavaScriptKernel.IOptions\n  ): IRemoteJavaScriptWorkerKernel {\n    const remote: IRemoteJavaScriptWorkerKernel = wrap(this._worker);\n    remote.initialize({ baseUrl: PageConfig.getBaseUrl() });\n    return remote;\n  }\n\n  /**\n   * Process a message coming from the JavaScript web worker.\n   *\n   * @param msg The worker message to process.\n   */\n  private _processWorkerMessage(msg: any): void {\n    if (!msg.type) {\n      return;\n    }\n\n    const parentHeader = msg.parentHeader || this.parentHeader;\n\n    switch (msg.type) {\n      case 'stream': {\n        const bundle = msg.bundle ?? { name: 'stdout', text: '' };\n        this.stream(bundle, parentHeader);\n        break;\n      }\n      case 'input_request': {\n        const bundle = msg.content ?? { prompt: '', password: false };\n        this.inputRequest(bundle, parentHeader);\n        break;\n      }\n      case 'display_data': {\n        const bundle = msg.bundle ?? { data: {}, metadata: {}, transient: {} };\n        this.displayData(bundle, parentHeader);\n        break;\n      }\n      case 'update_display_data': {\n        const bundle = msg.bundle ?? { data: {}, metadata: {}, transient: {} };\n        this.updateDisplayData(bundle, parentHeader);\n        break;\n      }\n      case 'clear_output': {\n        const bundle = msg.bundle ?? { wait: false };\n        this.clearOutput(bundle, parentHeader);\n        break;\n      }\n      case 'execute_result': {\n        const bundle = msg.bundle ?? { execution_count: 0, data: {}, metadata: {} };\n        this.publishExecuteResult(bundle, parentHeader);\n        break;\n      }\n      case 'execute_error': {\n        const bundle = msg.bundle ?? { ename: '', evalue: '', traceback: [] };\n        this.publishExecuteError(bundle, parentHeader);\n        break;\n      }\n      case 'comm_msg':\n      case 'comm_open':\n      case 'comm_close': {\n        this.handleComm(\n          msg.type,\n          msg.content,\n          msg.metadata,\n          msg.buffers,\n          msg.parentHeader\n        );\n        break;\n      }\n    }\n  }\n\n  protected remoteKernel: IRemoteJavaScriptWorkerKernel;\n\n  private _worker: Worker;\n  private _ready = new PromiseDelegate<void>();\n}\n\n/**\n * A namespace for JavaScriptKernel statics\n */\nnamespace JavaScriptKernel {\n  /**\n   * The instantiation options for a JavaScript kernel.\n   */\n  export interface IOptions extends IKernel.IOptions {}\n}\n"],"names":["proxyMarker","Symbol","createEndpoint","releaseProxy","throwMarker","isObject","val","transferHandlers","Map","canHandle","serialize","obj","port1","port2","MessageChannel","expose","deserialize","port","start","wrap","value","serialized","Error","isError","message","name","stack","Object","assign","ep","self","addEventListener","callback","ev","data","id","type","path","argumentList","map","fromWireValue","returnValue","parent","slice","reduce","prop","rawValue","apply","proxy","transfers","transferCache","set","transfer","undefined","Promise","resolve","catch","then","wireValue","transferables","toWireValue","postMessage","removeEventListener","closeEndPoint","endpoint","constructor","isMessagePort","close","target","createProxy","throwIfProxyReleased","isReleased","isProxyReleased","Proxy","get","_target","requestResponseMessage","p","toString","length","r","bind","_thisArg","rawArgumentList","last","processArguments","construct","processed","v","arr","Array","prototype","concat","WeakMap","handler","serializedValue","msg","fill","Math","floor","random","Number","MAX_SAFE_INTEGER","join","l","JavaScriptKernel","BaseKernel","options","super","_ready","PromiseDelegate","this","_worker","initWorker","onmessage","e","_processWorkerMessage","remoteKernel","initRemote","dispose","isDisposed","terminate","ready","promise","async","implementation","implementation_version","language_info","codemirror_mode","file_extension","mimetype","nbconvert_exporter","pygments_lexer","version","protocol_version","status","banner","help_links","text","url","content","result","execute","execution_count","executionCount","complete","inputReply","Worker","URL","remote","initialize","baseUrl","PageConfig","parentHeader","bundle","stream","prompt","password","inputRequest","metadata","transient","displayData","updateDisplayData","wait","clearOutput","publishExecuteResult","ename","evalue","traceback","publishExecuteError","handleComm","buffers"],"sourceRoot":""}