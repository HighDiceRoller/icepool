{"version":3,"file":"7224.a64c0a0.js","mappings":"gNAOA,MAAMA,EAAM,MAIL,MAAMC,UAAgC,EAAAC,cACzC,WAAAC,GACIC,SAASC,WACTC,KAAKC,YAAc,EACvB,CACA,WAAMC,CAAMC,GACR,IAAIC,EACJ,MAAMC,EAAgF,QAApED,EAAKD,aAAmC,EAASA,EAAKE,gBAA6B,IAAPD,EAAgBA,EAAK,GAEnH,IAAIE,EAASD,EACI,YAAbA,EACAC,EAAS,KAES,KAAbD,IACLC,EAASZ,GAEb,MAAMa,EAAS,EAAAC,OAAOC,KAAK,EAAAC,WAAWC,aAAc,oBAAoBL,UACxE,IACI,MAAMM,QAAiBV,MAAMK,GACvBM,EAAOC,KAAKC,YAAYH,EAASI,QACvC,GAAIhB,KAAKC,cAAgBP,GAAOY,IAAWZ,EAAK,CAK5C,MAAMuB,EAAOjB,KAAKC,YAClBY,EAAKK,KAAKD,GAAME,YAAcN,EAAKK,KAAKD,GAAMG,WACjC,OAATH,IACAJ,EAAKK,KAAS,GAAEC,YAAc,GAAGN,EAAKK,KAAS,GAAEE,uBAEzD,CAEA,OADApB,KAAKC,YAAcK,EACZO,CACX,CACA,MAAOQ,GACH,OAAIf,EAEO,CACHY,KAAM,CAAC,EACPI,QAAS,kBAAkBhB,qBAG5B,CAEHY,KAAM,CACFK,GAAI,CAAEJ,YAAa,UAAWC,WAAY,YAE9CE,QAAS,GAEjB,CACJ,E","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../packages/translation/lib/connector.js"],"sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { PageConfig, URLExt } from '@jupyterlab/coreutils';\nimport { DataConnector } from '@jupyterlab/statedb';\n/**\n * A fake locale to retrieve all the language packs.\n */\nconst ALL = 'all';\n/**\n * A class to fetch translation bundles.\n */\nexport class LiteTranslatorConnector extends DataConnector {\n    constructor() {\n        super(...arguments);\n        this._prevLocale = '';\n    }\n    async fetch(opts) {\n        var _a;\n        const language = (_a = opts === null || opts === void 0 ? void 0 : opts.language) !== null && _a !== void 0 ? _a : '';\n        // normalize the requested locale\n        let locale = language;\n        if (language === 'default') {\n            locale = 'en';\n        }\n        else if (language === '') {\n            locale = ALL;\n        }\n        const apiURL = URLExt.join(PageConfig.getBaseUrl(), `api/translations/${locale}.json`);\n        try {\n            const response = await fetch(apiURL);\n            const json = JSON.parse(await response.text());\n            if (this._prevLocale !== ALL && locale === ALL) {\n                // TODO: fix this logic upstream?\n                // the upstream translation plugin relies on the comparison between\n                // the display name and the native name to enable or disable the commands:\n                // https://github.com/jupyterlab/jupyterlab/blob/befa831ffef36321b87f352a48fbe2439df6c872/packages/translation-extension/src/index.ts#L117\n                const prev = this._prevLocale;\n                json.data[prev].displayName = json.data[prev].nativeName;\n                if (prev !== 'en') {\n                    json.data['en'].displayName = `${json.data['en'].nativeName} (default)`;\n                }\n            }\n            this._prevLocale = locale;\n            return json;\n        }\n        catch (e) {\n            if (locale) {\n                // TODO: fix type upstream: https://github.com/jupyterlab/jupyterlab/issues/17333\n                return {\n                    data: {},\n                    message: `Language pack '${locale}' not installed!`,\n                };\n            }\n            return {\n                // TODO: fix type upstream: https://github.com/jupyterlab/jupyterlab/issues/17333\n                data: {\n                    en: { displayName: 'English', nativeName: 'English' },\n                },\n                message: '',\n            };\n        }\n    }\n}\n//# sourceMappingURL=connector.js.map"],"names":["ALL","LiteTranslatorConnector","DataConnector","constructor","super","arguments","this","_prevLocale","fetch","opts","_a","language","locale","apiURL","URLExt","join","PageConfig","getBaseUrl","response","json","JSON","parse","text","prev","data","displayName","nativeName","e","message","en"],"sourceRoot":""}