"use strict";(self.webpackChunk_JUPYTERLAB_CORE_OUTPUT=self.webpackChunk_JUPYTERLAB_CORE_OUTPUT||[]).push([[3543,7749],{73543:(t,e,s)=>{s.r(e),s.d(e,{Settings:()=>l});var a=s(64649),r=s(637),i=s(21961),n=s(60850);const o="JupyterLite Storage";class l extends r.SettingManager{constructor(t){super({serverSettings:t.serverSettings}),this._storageName=o,this._storageDrivers=null,this._localforage=t.localforage,this._storageName=t.storageName||o,this._storageDrivers=t.storageDrivers||null,this._ready=new i.PromiseDelegate,this.initialize().catch(console.warn)}get ready(){return this._ready.promise}get storage(){return this.ready.then((()=>this._storage))}async initialize(){await this.initStorage(),this._ready.resolve(void 0)}async initStorage(){this._storage=this.defaultSettingsStorage()}get defaultStorageOptions(){var t;const e=(null===(t=this._storageDrivers)||void 0===t?void 0:t.length)?this._storageDrivers:null;return{version:1,name:this._storageName,...e?{driver:e}:{}}}defaultSettingsStorage(){return this._localforage.createInstance({description:"Offline Storage for Settings",storeName:"settings",...this.defaultStorageOptions})}async fetch(t){const e=(await this.list()).values.find((e=>e.id===t));if(!e)throw new Error(`Setting ${t} not found`);return e}async list(t){var e,s;const a=await this._getAll("all.json");let r=[];try{r=await this._getAll("all_federated.json")}catch{}const i=a.concat(r),o=await this.storage,l=await Promise.all(i.map((async t=>{var e;const{id:s}=t,a=null!==(e=await o.getItem(s))&&void 0!==e?e:t.raw;return{...g.override(t),raw:a,settings:n.parse(a)}}))),c=null!==(e=l.map((t=>t.id)))&&void 0!==e?e:[];let h=[];return t||(h=null!==(s=l.map((t=>(t.data={composite:{},user:{}},t))))&&void 0!==s?s:[]),{ids:c,values:h}}async save(t,e){await(await this.storage).setItem(t,e)}async _getAll(t){var e;const s=null!==(e=a.PageConfig.getOption("settingsUrl"))&&void 0!==e?e:"/";return await(await fetch(a.URLExt.join(s,t))).json()}}var g;!function(t){const e=JSON.parse(a.PageConfig.getOption("settingsOverrides")||"{}");t.override=function(t){if(e[t.id]){t.schema.properties||(t.schema.properties={});for(const[s,a]of Object.entries(e[t.id]||{}))t.schema.properties[s].default=a}return t}}(g||(g={}))}}]);
//# sourceMappingURL=3543.c7dba42.js.map